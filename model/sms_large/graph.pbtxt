node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "/home/natural/notebooks/CSE_481_NLP/data/train/sms_large.source"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read/filenames/Size"
  input: "train_input_fn/parallel_read/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read/filenames/Greater"
  input: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read/filenames/Const"
  input: "^train_input_fn/parallel_read/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read/filenames"
  input: "train_input_fn/parallel_read/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Cast"
  op: "Cast"
  input: "train_input_fn/parallel_read/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/filenames/Cast"
  input: "train_input_fn/parallel_read/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/ToFloat"
  input: "train_input_fn/parallel_read/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read/TextLineReaderV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read/common_queue"
  input: "train_input_fn/parallel_read/ReaderReadV2"
  input: "train_input_fn/parallel_read/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "/home/natural/notebooks/CSE_481_NLP/data/train/sms_large.target"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read_1/filenames/Size"
  input: "train_input_fn/parallel_read_1/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read_1/filenames/Greater"
  input: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read_1/filenames/Const"
  input: "^train_input_fn/parallel_read_1/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read_1/filenames"
  input: "train_input_fn/parallel_read_1/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Cast"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/filenames/Cast"
  input: "train_input_fn/parallel_read_1/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read_1/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/ToFloat"
  input: "train_input_fn/parallel_read_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read_1/TextLineReaderV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  input: "train_input_fn/parallel_read_1/ReaderReadV2"
  input: "train_input_fn/parallel_read_1/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 214008035
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/random_shuffle_queue"
  input: "train_input_fn/parallel_read/common_queue_Dequeue:1"
  input: "train_input_fn/parallel_read_1/common_queue_Dequeue:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit"
  op: "StringSplit"
  input: "train_input_fn/packed"
  input: "train_input_fn/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat"
  op: "ConcatV2"
  input: "train_input_fn/StringSplit:1"
  input: "train_input_fn/concat/values_1"
  input: "train_input_fn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size"
  op: "Size"
  input: "train_input_fn/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed_1"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit_1"
  op: "StringSplit"
  input: "train_input_fn/packed_1"
  input: "train_input_fn/Const_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_START"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1"
  op: "ConcatV2"
  input: "train_input_fn/concat_1/values_0"
  input: "train_input_fn/StringSplit_1:1"
  input: "train_input_fn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2"
  op: "ConcatV2"
  input: "train_input_fn/concat_1"
  input: "train_input_fn/concat_2/values_1"
  input: "train_input_fn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size_1"
  op: "Size"
  input: "train_input_fn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual"
  op: "GreaterEqual"
  input: "train_input_fn/Size"
  input: "train_input_fn/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\200\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual"
  op: "LessEqual"
  input: "train_input_fn/bucket_queue/LessEqual/x"
  input: "train_input_fn/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000\377\377\377\177"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less"
  op: "Less"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LogicalAnd"
  op: "LogicalAnd"
  input: "train_input_fn/bucket_queue/LessEqual"
  input: "train_input_fn/bucket_queue/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Where"
  op: "Where"
  input: "train_input_fn/bucket_queue/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Min"
  op: "Min"
  input: "train_input_fn/bucket_queue/Where"
  input: "train_input_fn/bucket_queue/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/ToInt32"
  op: "Cast"
  input: "train_input_fn/bucket_queue/Min"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Switch"
  op: "Switch"
  input: "train_input_fn/GreaterEqual"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/ToInt32"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/concat"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6"
  op: "Switch"
  input: "train_input_fn/Size_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8"
  op: "Switch"
  input: "train_input_fn/concat_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_0"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_1"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_2"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_3"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_4"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_5"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_1"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_2"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_3"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_4"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_5"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0001814223505789414
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul"
  op: "Mul"
  input: "train_input_fn/bucket_queue/bucket/Cast_5"
  input: "train_input_fn/bucket_queue/bucket/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full/tags"
  input: "train_input_fn/bucket_queue/bucket/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/dequeue_top"
  op: "QueueDequeueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "model/att_seq2seq/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3143
          }
        }
        string_val: " "
        string_val: "i"
        string_val: "a"
        string_val: "n"
        string_val: "e"
        string_val: "u"
        string_val: "o"
        string_val: "h"
        string_val: "="
        string_val: "g"
        string_val: "\357\274\214"
        string_val: ">"
        string_val: "d"
        string_val: "s"
        string_val: "z"
        string_val: "l"
        string_val: "y"
        string_val: "\343\200\202"
        string_val: "w"
        string_val: "m"
        string_val: "b"
        string_val: "x"
        string_val: "j"
        string_val: "_"
        string_val: "\346\210\221"
        string_val: "\344\275\240"
        string_val: "q"
        string_val: "\344\272\206"
        string_val: "\357\274\237"
        string_val: "t"
        string_val: "c"
        string_val: "k"
        string_val: "\347\232\204"
        string_val: "\344\270\215"
        string_val: "\357\274\201"
        string_val: "f"
        string_val: "\345\245\275"
        string_val: "\342\200\246"
        string_val: "\345\234\250"
        string_val: "r"
        string_val: "."
        string_val: "\345\216\273"
        string_val: "\346\230\257"
        string_val: "\345\225\212"
        string_val: "\346\262\241"
        string_val: "\344\270\200"
        string_val: "\344\271\210"
        string_val: "\345\244\251"
        string_val: "\346\234\211"
        string_val: "\346\235\245"
        string_val: "\345\220\247"
        string_val: "\344\270\212"
        string_val: "\345\210\260"
        string_val: "p"
        string_val: "\345\260\261"
        string_val: "\350\246\201"
        string_val: "\345\233\236"
        string_val: "\344\270\213"
        string_val: "\344\270\252"
        string_val: ","
        string_val: "~"
        string_val: "<"
        string_val: "\350\277\230"
        string_val: "\351\202\243"
        string_val: "\347\202\271"
        string_val: "#"
        string_val: "\345\220\227"
        string_val: "\344\273\254"
        string_val: "\347\234\213"
        string_val: "\350\277\231"
        string_val: "\346\227\266"
        string_val: "\345\220\203"
        string_val: "\344\274\232"
        string_val: "\345\223\210"
        string_val: "\345\256\266"
        string_val: "\347\273\231"
        string_val: "\350\257\264"
        string_val: "\344\273\200"
        string_val: "\350\277\207"
        string_val: "\346\203\263"
        string_val: "\345\221\265"
        string_val: "\345\221\242"
        string_val: "\344\273\212"
        string_val: "\346\231\232"
        string_val: "\346\230\216"
        string_val: "\351\203\275"
        string_val: "\344\271\237"
        string_val: "\344\272\213"
        string_val: "\344\272\272"
        string_val: "?"
        string_val: "\347\224\265"
        string_val: "\350\260\242"
        string_val: "\345\244\232"
        string_val: "\350\257\235"
        string_val: "\345\217\257"
        string_val: "\345\276\227"
        string_val: "\351\245\255"
        string_val: "\346\211\223"
        string_val: "\344\273\245"
        string_val: "\345\255\246"
        string_val: "\345\277\253"
        string_val: "*"
        string_val: "\350\200\201"
        string_val: "\346\200\216"
        string_val: "\350\203\275"
        string_val: "\347\216\260"
        string_val: "\347\255\211"
        string_val: "\350\265\267"
        string_val: "\347\237\245"
        string_val: "\344\273\226"
        string_val: "\351\207\214"
        string_val: "\345\217\221"
        string_val: "\345\225\246"
        string_val: "\351\201\223"
        string_val: "\345\223\252"
        string_val: "\345\244\247"
        string_val: "\357\275\236"
        string_val: "\347\235\241"
        string_val: "\345\260\217"
        string_val: "\345\277\203"
        string_val: "\351\227\256"
        string_val: "\345\207\272"
        string_val: "\345\200\231"
        string_val: "\345\274\200"
        string_val: "\350\275\246"
        string_val: "\345\223\246"
        string_val: "\346\240\267"
        string_val: "\345\255\220"
        string_val: "\350\241\214"
        string_val: "\345\206\215"
        string_val: "\345\276\210"
        string_val: "\344\271\260"
        string_val: "\346\211\276"
        string_val: "-"
        string_val: "\345\215\210"
        string_val: "\345\220\216"
        string_val: "\347\235\200"
        string_val: "\345\271\262"
        string_val: "\347\217\255"
        string_val: "\347\224\237"
        string_val: "\350\257\276"
        string_val: "\347\224\250"
        string_val: "\346\204\217"
        string_val: "\346\227\251"
        string_val: "\346\234\272"
        string_val: "\345\210\253"
        string_val: "\345\230\233"
        string_val: ":"
        string_val: "\345\210\232"
        string_val: "\347\216\251"
        string_val: "\345\222\214"
        string_val: "\347\234\237"
        string_val: "\345\221\200"
        string_val: "\350\207\252"
        string_val: "\345\230\277"
        string_val: "\344\277\241"
        string_val: "\350\257\267"
        string_val: "\345\207\240"
        string_val: "\351\227\264"
        string_val: "\346\234\200"
        string_val: "\345\217\267"
        string_val: "\345\201\232"
        string_val: "\346\201\251"
        string_val: "\350\247\211"
        string_val: "\345\270\256"
        string_val: "\346\212\212"
        string_val: "\345\227\257"
        string_val: "\350\247\201"
        string_val: "\345\244\252"
        string_val: "\344\270\255"
        string_val: "\347\210\261"
        string_val: "!"
        string_val: "\345\256\232"
        string_val: "v"
        string_val: "\343\200\201"
        string_val: "\345\256\214"
        string_val: "\345\217\210"
        string_val: "\346\211\215"
        string_val: "\345\270\246"
        string_val: "\345\271\264"
        string_val: "\345\246\210"
        string_val: "\344\270\272"
        string_val: ")"
        string_val: "\351\235\242"
        string_val: "\344\270\234"
        string_val: "\345\277\231"
        string_val: "\346\211\213"
        string_val: "\357\274\232"
        string_val: "\344\275\234"
        string_val: "\350\256\260"
        string_val: "\345\256\211"
        string_val: "\350\267\237"
        string_val: "\344\271\220"
        string_val: "\345\267\261"
        string_val: "\345\234\260"
        string_val: "\351\222\261"
        string_val: "\345\205\210"
        string_val: "\346\224\266"
        string_val: "\350\200\203"
        string_val: "\346\216\245"
        string_val: "\302\267"
        string_val: "\347\263\273"
        string_val: "\350\277\221"
        string_val: "\350\245\277"
        string_val: "\345\245\271"
        string_val: "\345\267\245"
        string_val: "\350\265\260"
        string_val: "\345\257\271"
        string_val: "\346\240\241"
        string_val: "\346\227\245"
        string_val: "\345\205\254"
        string_val: "\346\201\257"
        string_val: "\345\212\240"
        string_val: "\345\220\214"
        string_val: "\345\267\262"
        string_val: "\347\251\272"
        string_val: "Q"
        string_val: "\345\223\245"
        string_val: "\345\221\250"
        string_val: "\345\211\215"
        string_val: "\347\204\266"
        string_val: "\347\237\255"
        string_val: "\346\224\276"
        string_val: "\345\270\210"
        string_val: "\345\204\277"
        string_val: "\344\270\244"
        string_val: "\346\203\205"
        string_val: "\346\254\241"
        string_val: "\347\273\217"
        string_val: "\345\225\245"
        string_val: "\345\217\252"
        string_val: "\346\260\224"
        string_val: "^"
        string_val: "\345\212\236"
        string_val: "\345\215\201"
        string_val: "\347\275\221"
        string_val: "\346\255\273"
        string_val: "\345\247\220"
        string_val: "\350\276\271"
        string_val: "\346\226\271"
        string_val: "\350\201\224"
        string_val: "\347\256\227"
        string_val: "\350\257\245"
        string_val: "\345\246\202"
        string_val: "\346\226\260"
        string_val: "\350\267\257"
        string_val: "M"
        string_val: "\345\260\221"
        string_val: "\345\220\254"
        string_val: "\350\256\251"
        string_val: "\344\272\262"
        string_val: "\345\256\236"
        string_val: "\350\201\212"
        string_val: "\346\213\277"
        string_val: "\346\204\237"
        string_val: "\351\224\231"
        string_val: "\351\227\250"
        string_val: "\346\255\243"
        string_val: "\344\271\246"
        string_val: "\346\227\240"
        string_val: "\346\236\234"
        string_val: "\345\272\224"
        string_val: "E"
        string_val: "\345\217\253"
        string_val: "I"
        string_val: "\345\201\207"
        string_val: "D"
        string_val: "\345\244\264"
        string_val: "\344\271\240"
        string_val: "\346\202\250"
        string_val: "\351\242\230"
        string_val: "\347\245\235"
        string_val: "\345\210\206"
        string_val: "\345\256\244"
        string_val: "\344\270\232"
        string_val: "T"
        string_val: "\345\245\263"
        string_val: "\350\272\253"
        string_val: "\351\200\232"
        string_val: "\346\234\215"
        string_val: "\344\270\211"
        string_val: "\344\274\221"
        string_val: "\350\257\225"
        string_val: "A"
        string_val: "\346\267\256"
        string_val: "P"
        string_val: "\347\220\206"
        string_val: "\351\225\277"
        string_val: "\346\200\235"
        string_val: "\344\275\223"
        string_val: "\347\245\250"
        string_val: "\345\205\263"
        string_val: "\345\244\226"
        string_val: "\346\212\245"
        string_val: "\344\272\244"
        string_val: "\346\234\210"
        string_val: "\346\234\254"
        string_val: "\345\217\213"
        string_val: "\346\210\220"
        string_val: "\346\211\200"
        string_val: "\346\257\224"
        string_val: "\346\263\250"
        string_val: "\351\251\254"
        string_val: "\344\276\277"
        string_val: "\347\210\270"
        string_val: "\346\230\250"
        string_val: "\346\234\237"
        string_val: "\345\221\212"
        string_val: "\345\215\212"
        string_val: "\350\256\241"
        string_val: "\344\272\214"
        string_val: "\347\233\264"
        string_val: "\351\200\201"
        string_val: "\344\271\205"
        string_val: "\346\260\264"
        string_val: "\350\212\202"
        string_val: "\345\272\212"
        string_val: "\345\244\207"
        string_val: "\347\264\257"
        string_val: "\347\203\246"
        string_val: "\346\210\277"
        string_val: "\344\272\224"
        string_val: "\344\272\233"
        string_val: "\345\212\250"
        string_val: "C"
        string_val: "\344\275\217"
        string_val: "\345\222\261"
        string_val: "\345\256\235"
        string_val: "\346\237\245"
        string_val: "\346\245\274"
        string_val: "L"
        string_val: "\350\241\243"
        string_val: "\346\234\213"
        string_val: "\346\264\227"
        string_val: "\346\264\273"
        string_val: "\345\203\217"
        string_val: "\344\273\266"
        string_val: "\345\235\220"
        string_val: "2"
        string_val: "3"
        string_val: "\347\253\231"
        string_val: "\350\242\253"
        string_val: "\345\274\204"
        string_val: "\345\217\243"
        string_val: "\345\277\230"
        string_val: "\345\226\234"
        string_val: ";"
        string_val: "\345\220\215"
        string_val: "\346\214\272"
        string_val: "\345\215\225"
        string_val: "\351\232\276"
        string_val: "\351\241\272"
        string_val: "\346\254\242"
        string_val: "\351\253\230"
        string_val: "X"
        string_val: "\347\246\217"
        string_val: "\345\230\273"
        string_val: "\350\210\215"
        string_val: "\345\274\240"
        string_val: "\345\256\277"
        string_val: "\347\273\223"
        string_val: "\345\205\255"
        string_val: "\345\233\233"
        string_val: "\350\204\221"
        string_val: "\345\251\206"
        string_val: "("
        string_val: "\357\274\211"
        string_val: "\346\270\205"
        string_val: "\357\274\210"
        string_val: "\345\206\231"
        string_val: "\345\275\223"
        string_val: "\344\271\213"
        string_val: "\345\205\266"
        string_val: "\350\264\271"
        string_val: "\351\233\250"
        string_val: "\345\235\227"
        string_val: "\345\256\242"
        string_val: "\357\274\233"
        string_val: "\345\222\213"
        string_val: "\344\275\206"
        string_val: "\347\201\253"
        string_val: "\350\277\233"
        string_val: "\347\205\247"
        string_val: "\344\275\215"
        string_val: "\344\273\216"
        string_val: "\350\257\211"
        string_val: "\345\244\215"
        string_val: "\347\220\203"
        string_val: "\345\212\233"
        string_val: "\346\231\225"
        string_val: "\346\217\220"
        string_val: "\345\226\235"
        string_val: "\350\260\201"
        string_val: "\345\206\267"
        string_val: "\346\205\242"
        string_val: "\351\231\252"
        string_val: "\351\202\256"
        string_val: "\345\233\240"
        string_val: "\345\270\270"
        string_val: "\345\255\251"
        string_val: "O"
        string_val: "\347\233\270"
        string_val: "\346\215\242"
        string_val: "\345\205\250"
        string_val: "\345\267\256"
        string_val: "\347\240\201"
        string_val: "1"
        string_val: "\346\257\217"
        string_val: "\345\275\261"
        string_val: "\346\230\237"
        string_val: "\346\220\236"
        string_val: "\345\217\215"
        string_val: "\345\215\227"
        string_val: "\346\263\225"
        string_val: "\345\234\272"
        string_val: "\351\207\215"
        string_val: "K"
        string_val: "\345\221\234"
        string_val: "\345\214\205"
        string_val: "\344\272\216"
        string_val: "\350\212\261"
        string_val: "\347\276\216"
        string_val: "\345\274\237"
        string_val: "\346\234\253"
        string_val: "\351\200\233"
        string_val: "5"
        string_val: "\346\234\233"
        string_val: "\345\276\205"
        string_val: "\346\225\231"
        string_val: "\350\201\232"
        string_val: "\350\257\201"
        string_val: "\346\200\245"
        string_val: "\345\247\213"
        string_val: "\350\265\266"
        string_val: "\345\246\271"
        string_val: "\350\241\250"
        string_val: "\350\265\204"
        string_val: "\345\214\227"
        string_val: "\346\226\207"
        string_val: "\347\264\247"
        string_val: "\346\200\225"
        string_val: "\345\215\241"
        string_val: "\350\277\234"
        string_val: "\345\205\253"
        string_val: "\347\231\275"
        string_val: "\347\254\254"
        string_val: "\350\256\244"
        string_val: "\345\233\275"
        string_val: "\346\224\271"
        string_val: "B"
        string_val: "S"
        string_val: "\345\233\276"
        string_val: "\344\273\275"
        string_val: "\345\223\216"
        string_val: "H"
        string_val: "\346\265\267"
        string_val: "\350\200\214"
        string_val: "\351\205\222"
        string_val: "\347\256\241"
        string_val: "\344\274\260"
        string_val: "\347\251\277"
        string_val: "\344\277\235"
        string_val: "\347\203\255"
        string_val: "\351\272\273"
        string_val: "\351\206\222"
        string_val: "\345\216\237"
        string_val: "\345\217\227"
        string_val: "\344\270\273"
        string_val: "\351\243\216"
        string_val: "7"
        string_val: "\346\262\271"
        string_val: "\345\224\211"
        string_val: "\345\267\236"
        string_val: "\351\222\237"
        string_val: "\351\243\236"
        string_val: "\345\270\202"
        string_val: "\346\270\270"
        string_val: "\350\257\255"
        string_val: "\346\213\211"
        string_val: "\351\231\242"
        string_val: "\347\225\231"
        string_val: "4"
        string_val: "\351\232\217"
        string_val: "\351\235\240"
        string_val: "\350\247\243"
        string_val: "\345\244\237"
        string_val: "\345\220\210"
        string_val: "\347\224\267"
        string_val: "\345\217\270"
        string_val: "\344\271\226"
        string_val: "\350\202\257"
        string_val: "\350\241\227"
        string_val: "\345\261\261"
        string_val: "\345\217\230"
        string_val: "\351\245\277"
        string_val: "\350\276\203"
        string_val: "\345\221\227"
        string_val: "\345\260\275"
        string_val: "\351\234\200"
        string_val: "\350\275\254"
        string_val: "\346\235\241"
        string_val: "\345\210\251"
        string_val: "\345\271\263"
        string_val: "\346\200\273"
        string_val: "\345\222\257"
        string_val: "\350\217\234"
        string_val: "\347\272\277"
        string_val: "\346\235\216"
        string_val: "\345\200\237"
        string_val: "\346\204\277"
        string_val: "\350\256\262"
        string_val: "\344\270\203"
        string_val: "\350\247\206"
        string_val: "/"
        string_val: "\345\272\227"
        string_val: "\351\207\217"
        string_val: "\345\201\234"
        string_val: "\345\221\230"
        string_val: "\345\267\246"
        string_val: "\346\233\264"
        string_val: "\345\270\214"
        string_val: "\345\243\260"
        string_val: "\351\246\206"
        string_val: "\344\272\254"
        string_val: "\346\235\277"
        string_val: "\350\260\203"
        string_val: "\345\235\217"
        string_val: "\347\256\261"
        string_val: "8"
        string_val: "\346\216\222"
        string_val: "\345\217\202"
        string_val: "\344\277\251"
        string_val: "\346\212\261"
        string_val: "\351\230\277"
        string_val: "\350\243\205"
        string_val: "\350\267\221"
        string_val: "\347\241\256"
        string_val: "\350\277\237"
        string_val: "\351\227\267"
        string_val: "\345\212\241"
        string_val: "\346\266\210"
        string_val: "\345\255\227"
        string_val: "6"
        string_val: "\345\244\234"
        string_val: "\346\242\246"
        string_val: "\351\230\263"
        string_val: "\345\215\203"
        string_val: "\345\271\270"
        string_val: "N"
        string_val: "\347\214\252"
        string_val: "\351\244\220"
        string_val: "\347\231\276"
        string_val: "\346\257\225"
        string_val: "\347\254\221"
        string_val: "\347\247\215"
        string_val: "\350\213\246"
        string_val: "\345\251\232"
        string_val: "\345\206\222"
        string_val: "\345\233\260"
        string_val: "\345\205\204"
        string_val: "\346\213\234"
        string_val: "\345\205\205"
        string_val: "\351\200\211"
        string_val: "\351\252\214"
        string_val: "\347\233\256"
        string_val: "\350\266\205"
        string_val: "\345\272\246"
        string_val: "\347\272\247"
        string_val: "\350\256\272"
        string_val: "\350\264\247"
        string_val: "\351\207\221"
        string_val: "\345\205\203"
        string_val: "\351\242\235"
        string_val: "\350\264\235"
        string_val: "\347\255\224"
        string_val: "\344\270\207"
        string_val: "\350\257\206"
        string_val: "\346\276\241"
        string_val: "\351\203\201"
        string_val: "\347\211\271"
        string_val: "\346\225\264"
        string_val: "\345\220\204"
        string_val: "\346\210\226"
        string_val: "\347\245\236"
        string_val: "\347\273\255"
        string_val: "\346\225\260"
        string_val: "\344\274\240"
        string_val: "\345\205\211"
        string_val: "\344\277\272"
        string_val: "\347\211\207"
        string_val: "\344\273\273"
        string_val: "\345\274\272"
        string_val: "\347\216\213"
        string_val: "\351\200\237"
        string_val: "\345\217\263"
        string_val: "\347\273\204"
        string_val: "\347\240\224"
        string_val: "\344\271\235"
        string_val: "\345\277\205"
        string_val: "\345\217\226"
        string_val: "G"
        string_val: "\345\244\261"
        string_val: "\350\200\205"
        string_val: "\345\210\207"
        string_val: "\347\211\251"
        string_val: "\344\275\225"
        string_val: "\346\273\264"
        string_val: "\346\246\202"
        string_val: "\350\256\250"
        string_val: "\345\215\226"
        string_val: "\350\233\213"
        string_val: "\350\277\220"
        string_val: "\347\276\212"
        string_val: "\351\242\206"
        string_val: "\345\277\227"
        string_val: "\345\206\205"
        string_val: "\347\246\273"
        string_val: "\344\273\267"
        string_val: "\346\226\231"
        string_val: "\344\277\256"
        string_val: "\347\227\205"
        string_val: "\350\213\261"
        string_val: "\347\226\274"
        string_val: "\345\257\274"
        string_val: "\345\271\277"
        string_val: "\350\264\265"
        string_val: "\347\272\242"
        string_val: "\347\234\274"
        string_val: "\351\235\236"
        string_val: "\347\244\274"
        string_val: "\345\220\221"
        string_val: "\346\245\232"
        string_val: "\345\214\272"
        string_val: "\345\272\225"
        string_val: "\345\206\265"
        string_val: "\346\211\260"
        string_val: "\345\202\273"
        string_val: "\346\213\205"
        string_val: "\346\262\231"
        string_val: "\345\205\264"
        string_val: "\346\213\233"
        string_val: "\346\260\270"
        string_val: "\351\203\250"
        string_val: "\346\207\202"
        string_val: "\350\211\262"
        string_val: "U"
        string_val: "\346\222\222"
        string_val: "\346\210\217"
        string_val: "\342\200\234"
        string_val: "@"
        string_val: "\344\270\223"
        string_val: "\345\257\235"
        string_val: "\351\243\237"
        string_val: "\345\200\222"
        string_val: "\344\272\256"
        string_val: "\345\273\272"
        string_val: "\350\210\254"
        string_val: "\347\272\246"
        string_val: "\346\257\233"
        string_val: "\350\276\233"
        string_val: "\346\261\202"
        string_val: "\347\255\276"
        string_val: "\344\273\243"
        string_val: "\347\261\263"
        string_val: "\345\206\263"
        string_val: "9"
        string_val: "\350\215\257"
        string_val: "\345\223\207"
        string_val: "\346\270\251"
        string_val: "\346\273\241"
        string_val: "\350\210\222"
        string_val: "\345\276\200"
        string_val: "\347\247\237"
        string_val: "\351\235\222"
        string_val: "Y"
        string_val: "\345\256\271"
        string_val: "\347\247\221"
        string_val: "\345\245\266"
        string_val: "\351\241\276"
        string_val: "\345\233\255"
        string_val: "\345\223\201"
        string_val: "\346\224\257"
        string_val: "\345\214\273"
        string_val: "\346\225\243"
        string_val: "\345\220\265"
        string_val: "\350\201\214"
        string_val: "\346\265\216"
        string_val: "\346\216\211"
        string_val: "\347\250\213"
        string_val: "\351\233\252"
        string_val: "\342\200\235"
        string_val: "\345\225\206"
        string_val: "\346\200\252"
        string_val: "\345\244\204"
        string_val: "\350\277\236"
        string_val: "\350\241\245"
        string_val: "\346\216\250"
        string_val: "\346\240\274"
        string_val: "\345\272\267"
        string_val: "\346\231\223"
        string_val: "\350\266\237"
        string_val: "\350\266\212"
        string_val: "\345\221\206"
        string_val: "\345\205\267"
        string_val: "\345\215\260"
        string_val: "\345\277\265"
        string_val: "\345\256\263"
        string_val: "\346\230\245"
        string_val: "\345\215\216"
        string_val: "\347\273\210"
        string_val: "\345\223\237"
        string_val: "\350\257\273"
        string_val: "\346\200\247"
        string_val: "\346\207\222"
        string_val: "\345\223\274"
        string_val: "\345\240\202"
        string_val: "\345\217\212"
        string_val: "F"
        string_val: "\344\270\242"
        string_val: "\350\256\270"
        string_val: "\345\201\245"
        string_val: "\345\221\275"
        string_val: "\345\210\235"
        string_val: "\345\272\247"
        string_val: "\351\237\263"
        string_val: "\345\205\245"
        string_val: "\344\274\244"
        string_val: "\345\233\242"
        string_val: "\346\212\275"
        string_val: "+"
        string_val: "\346\255\245"
        string_val: "\346\255\244"
        string_val: "\346\214\201"
        string_val: "\345\237\216"
        string_val: "\344\273\213"
        string_val: "\346\225\242"
        string_val: "\350\231\221"
        string_val: "\346\265\201"
        string_val: "R"
        string_val: "\345\247\250"
        string_val: "\345\205\273"
        string_val: "\346\235\250"
        string_val: "\347\203\247"
        string_val: "\346\203\257"
        string_val: "\346\256\265"
        string_val: "\344\274\274"
        string_val: "\350\261\241"
        string_val: "\345\260\206"
        string_val: "\345\261\201"
        string_val: "\350\256\256"
        string_val: "\350\260\210"
        string_val: "\346\210\267"
        string_val: "\351\273\221"
        string_val: "\351\227\262"
        string_val: "\""
        string_val: "\346\255\214"
        string_val: "\345\231\242"
        string_val: "\345\217\260"
        string_val: "\344\270\226"
        string_val: "\345\207\211"
        string_val: "\345\214\226"
        string_val: "\345\221\274"
        string_val: "\347\233\230"
        string_val: "\347\273\247"
        string_val: "\345\217\246"
        string_val: "\351\227\271"
        string_val: "\346\237\220"
        string_val: "\346\214\211"
        string_val: "\345\257\204"
        string_val: "\351\223\266"
        string_val: "\347\261\273"
        string_val: "\357\274\274"
        string_val: "\345\205\261"
        string_val: "\351\200\202"
        string_val: "\350\275\273"
        string_val: "\344\270\216"
        string_val: "\347\273\237"
        string_val: "\344\271\261"
        string_val: "\346\232\226"
        string_val: "\346\213\276"
        string_val: "\345\274\217"
        string_val: "\345\255\230"
        string_val: "\351\233\206"
        string_val: "\344\273\230"
        string_val: "\347\252\201"
        string_val: "\346\255\246"
        string_val: "\351\270\241"
        string_val: "W"
        string_val: "\345\257\206"
        string_val: "\346\212\223"
        string_val: "\345\237\272"
        string_val: "\346\231\222"
        string_val: "\350\264\242"
        string_val: "\350\276\276"
        string_val: "\347\276\244"
        string_val: "\345\224\261"
        string_val: "\345\256\201"
        string_val: "\347\211\233"
        string_val: "\350\256\276"
        string_val: "\347\273\203"
        string_val: "\346\261\211"
        string_val: "\345\210\230"
        string_val: "\347\210\275"
        string_val: "\346\236\227"
        string_val: "\344\270\224"
        string_val: "\345\256\203"
        string_val: "\350\264\237"
        string_val: "\346\241\210"
        string_val: "\345\247\221"
        string_val: "\345\212\252"
        string_val: "\345\217\224"
        string_val: "\346\230\223"
        string_val: "\345\276\256"
        string_val: "\343\200\213"
        string_val: "\347\275\256"
        string_val: "\351\231\204"
        string_val: "\351\276\231"
        string_val: "\345\272\206"
        string_val: "\347\253\237"
        string_val: "\345\200\274"
        string_val: "\345\206\262"
        string_val: "\346\264\213"
        string_val: "\350\202\211"
        string_val: "\351\270\237"
        string_val: "\345\235\200"
        string_val: "\346\227\201"
        string_val: "\346\200\200"
        string_val: "\345\217\245"
        string_val: "\345\220\246"
        string_val: "\345\214\231"
        string_val: "\345\261\225"
        string_val: "\347\206\237"
        string_val: "\345\261\205"
        string_val: "\346\223\215"
        string_val: "\346\255\211"
        string_val: "\350\220\275"
        string_val: "\346\254\276"
        string_val: "\346\240\271"
        string_val: "\350\265\233"
        string_val: "\345\245\227"
        string_val: "\351\222\245"
        string_val: "\345\226\202"
        string_val: "\350\262\214"
        string_val: "\351\231\210"
        string_val: "\347\250\215"
        string_val: "\346\202\262"
        string_val: "\345\276\267"
        string_val: "\346\243\200"
        string_val: "\346\241\214"
        string_val: "\350\260\205"
        string_val: "\345\215\232"
        string_val: "\350\202\232"
        string_val: "\345\223\255"
        string_val: "\350\203\214"
        string_val: "\346\214\202"
        string_val: "\351\261\274"
        string_val: "\347\273\251"
        string_val: "\345\216\214"
        string_val: "\350\250\200"
        string_val: "\347\210\254"
        string_val: "\346\213\215"
        string_val: "\351\231\244"
        string_val: "\351\241\273"
        string_val: "\347\234\201"
        string_val: "\345\243\253"
        string_val: "\357\274\215"
        string_val: "\346\274\202"
        string_val: "\351\234\207"
        string_val: "\351\246\231"
        string_val: "\350\207\263"
        string_val: "\345\216\213"
        string_val: "\350\216\253"
        string_val: "\346\235\276"
        string_val: "\347\224\261"
        string_val: "\345\205\213"
        string_val: "\345\256\265"
        string_val: "\344\270\253"
        string_val: "\351\235\231"
        string_val: "\345\205\215"
        string_val: "\351\242\204"
        string_val: "\345\256\234"
        string_val: "\345\205\232"
        string_val: "\347\247\213"
        string_val: "\345\226\212"
        string_val: "\346\267\261"
        string_val: "\350\212\263"
        string_val: "\346\227\205"
        string_val: "\347\262\276"
        string_val: "\342\210\251"
        string_val: "\350\256\242"
        string_val: "\347\273\215"
        string_val: "\345\231\250"
        string_val: "\347\231\273"
        string_val: "\350\203\226"
        string_val: "\351\273\204"
        string_val: "\345\205\224"
        string_val: "\345\212\251"
        string_val: "\347\211\214"
        string_val: "\351\236\213"
        string_val: "\346\204\211"
        string_val: "\347\244\272"
        string_val: "\351\241\271"
        string_val: "\345\245\226"
        string_val: "\345\217\214"
        string_val: "\350\204\270"
        string_val: "\346\235\200"
        string_val: "\350\200\215"
        string_val: "\344\270\275"
        string_val: "\347\240\264"
        string_val: "\346\201\255"
        string_val: "\344\274\236"
        string_val: "\345\210\222"
        string_val: "\344\272\247"
        string_val: "\345\246\207"
        string_val: "\346\215\256"
        string_val: "\350\256\255"
        string_val: "\345\275\251"
        string_val: "\345\241\253"
        string_val: "\347\227\233"
        string_val: "\346\267\267"
        string_val: "\345\275\225"
        string_val: "\347\242\260"
        string_val: "\346\274\224"
        string_val: "\347\254\250"
        string_val: "\350\257\204"
        string_val: "\346\232\221"
        string_val: "\346\220\254"
        string_val: "\345\220\211"
        string_val: "\347\232\256"
        string_val: "\346\271\226"
        string_val: "\346\265\213"
        string_val: "\345\241\236"
        string_val: "\345\250\230"
        string_val: "\351\200\200"
        string_val: "\347\254\224"
        string_val: "\347\251\266"
        string_val: "\344\270\264"
        string_val: "\345\202\254"
        string_val: "\345\205\274"
        string_val: "\351\200\222"
        string_val: "\346\265\252"
        string_val: "V"
        string_val: "\345\226\275"
        string_val: "\345\267\264"
        string_val: "\346\201\250"
        string_val: "\351\252\227"
        string_val: "\345\270\205"
        string_val: "\351\223\201"
        string_val: "\350\277\216"
        string_val: "\346\267\230"
        string_val: "\351\205\215"
        string_val: "\351\231\215"
        string_val: "\346\250\241"
        string_val: "\350\202\245"
        string_val: "\347\211\210"
        string_val: "\346\235\257"
        string_val: "\346\261\227"
        string_val: "\345\212\237"
        string_val: "\350\215\220"
        string_val: "\346\231\256"
        string_val: "\357\274\235"
        string_val: "\346\235\237"
        string_val: "\346\235\220"
        string_val: "\347\256\200"
        string_val: "\346\203\234"
        string_val: "\347\225\214"
        string_val: "\350\260\223"
        string_val: "\346\232\202"
        string_val: "\345\221\263"
        string_val: "\351\201\207"
        string_val: "\345\216\205"
        string_val: "\345\262\233"
        string_val: "\345\240\265"
        string_val: "\351\230\262"
        string_val: "\344\274\230"
        string_val: "\345\210\267"
        string_val: "\345\245\207"
        string_val: "\347\203\237"
        string_val: "\346\212\230"
        string_val: "\347\216\253"
        string_val: "\351\241\277"
        string_val: "\343\200\212"
        string_val: "\345\207\217"
        string_val: "\347\202\274"
        string_val: "\346\233\277"
        string_val: "\346\231\250"
        string_val: "\347\210\267"
        string_val: "\350\257\257"
        string_val: "\350\233\256"
        string_val: "\345\245\245"
        string_val: "\347\273\235"
        string_val: "\347\233\226"
        string_val: "\344\274\231"
        string_val: "\346\212\242"
        string_val: "\344\272\211"
        string_val: "\347\201\257"
        string_val: "\346\262\263"
        string_val: "\350\264\255"
        string_val: "\345\220\223"
        string_val: "\350\210\205"
        string_val: "\344\272\253"
        string_val: "\347\223\266"
        string_val: "\346\273\232"
        string_val: "\346\211\230"
        string_val: "\350\231\275"
        string_val: "\350\214\266"
        string_val: "\346\200\234"
        string_val: "\346\231\257"
        string_val: "\346\261\207"
        string_val: "\347\203\244"
        string_val: "\346\234\257"
        string_val: "\345\210\266"
        string_val: "\344\274\237"
        string_val: "\351\224\273"
        string_val: "\347\262\211"
        string_val: "\345\236\213"
        string_val: "\345\216\211"
        string_val: "\344\275\277"
        string_val: "\345\235\241"
        string_val: "\346\234\250"
        string_val: "\347\273\206"
        string_val: "\345\206\234"
        string_val: "\344\272\221"
        string_val: "\345\237\271"
        string_val: "\350\242\213"
        string_val: "\350\247\202"
        string_val: "\345\206\254"
        string_val: "\347\224\263"
        string_val: "\350\272\272"
        string_val: "\345\212\262"
        string_val: "\345\211\247"
        string_val: "\351\245\261"
        string_val: "\347\273\234"
        string_val: "\346\201\213"
        string_val: "\345\223\215"
        string_val: "\346\225\210"
        string_val: "\345\215\207"
        string_val: "\346\200\201"
        string_val: "\342\200\224"
        string_val: "\344\275\216"
        string_val: "\345\211\251"
        string_val: "\350\202\262"
        string_val: "\351\230\237"
        string_val: "\346\214\243"
        string_val: "\347\212\266"
        string_val: "\345\206\260"
        string_val: "\351\233\266"
        string_val: "\345\261\236"
        string_val: "\347\226\257"
        string_val: "\345\215\253"
        string_val: "\345\210\273"
        string_val: "\345\234\206"
        string_val: "\347\274\230"
        string_val: "\347\214\253"
        string_val: "\346\240\207"
        string_val: "\345\213\222"
        string_val: "\345\252\263"
        string_val: "\345\245\213"
        string_val: "\346\261\237"
        string_val: "\346\226\255"
        string_val: "\350\204\232"
        string_val: "\351\232\224"
        string_val: "\347\233\220"
        string_val: "\347\275\227"
        string_val: "\350\207\264"
        string_val: "\345\244\253"
        string_val: "\347\224\273"
        string_val: "\347\205\256"
        string_val: "\351\234\211"
        string_val: "\347\253\213"
        string_val: "\346\260\221"
        string_val: "\346\233\276"
        string_val: "\346\267\241"
        string_val: "\345\260\224"
        string_val: "\347\217\215"
        string_val: "\350\220\245"
        string_val: "\345\215\267"
        string_val: "\345\276\220"
        string_val: "\350\257\266"
        string_val: "\346\235\202"
        string_val: "\346\225\205"
        string_val: "\346\212\225"
        string_val: "\347\274\226"
        string_val: "\346\213\251"
        string_val: "\346\261\275"
        string_val: "\350\205\277"
        string_val: "\347\223\234"
        string_val: "\345\233\264"
        string_val: "\345\210\233"
        string_val: "\347\277\273"
        string_val: "\357\274\212"
        string_val: "\351\252\232"
        string_val: "\351\254\274"
        string_val: "\350\247\204"
        string_val: "\350\265\232"
        string_val: "\346\241\245"
        string_val: "\347\253\240"
        string_val: "\350\275\257"
        string_val: "%"
        string_val: "\350\202\241"
        string_val: "\350\203\241"
        string_val: "\345\272\237"
        string_val: "\345\232\222"
        string_val: "\345\247\224"
        string_val: "\344\273\224"
        string_val: "\347\206\254"
        string_val: "\345\270\220"
        string_val: "\347\237\263"
        string_val: "\345\216\206"
        string_val: "\347\276\275"
        string_val: "\350\211\257"
        string_val: "\346\257\215"
        string_val: "\351\224\256"
        string_val: "\346\266\250"
        string_val: "\351\241\265"
        string_val: "\346\261\244"
        string_val: "\347\242\227"
        string_val: "\350\205\276"
        string_val: "\351\205\270"
        string_val: "\345\215\240"
        string_val: "\346\255\207"
        string_val: "\351\242\221"
        string_val: "\345\250\203"
        string_val: "\345\271\266"
        string_val: "\347\210\266"
        string_val: "\345\261\200"
        string_val: "\346\262\247"
        string_val: "\347\213\227"
        string_val: "\345\262\201"
        string_val: "\346\226\227"
        string_val: "\351\224\205"
        string_val: "\345\274\203"
        string_val: "\347\211\231"
        string_val: "\350\264\250"
        string_val: "\344\272\222"
        string_val: "\345\244\217"
        string_val: "\350\257\232"
        string_val: "\350\260\261"
        string_val: "\346\201\266"
        string_val: "\346\272\220"
        string_val: "\346\202\240"
        string_val: "\345\215\247"
        string_val: "\346\225\254"
        string_val: "J"
        string_val: "\350\247\222"
        string_val: "\351\241\266"
        string_val: "\345\201\266"
        string_val: "\303\227"
        string_val: "\346\241\243"
        string_val: "\346\234\252"
        string_val: "\346\230\214"
        string_val: "\346\254\272"
        string_val: "\346\240\270"
        string_val: "\345\257\222"
        string_val: "\347\202\222"
        string_val: "\351\223\272"
        string_val: "\345\226\224"
        string_val: "\346\263\260"
        string_val: "\347\250\277"
        string_val: "\346\236\266"
        string_val: "\347\216\257"
        string_val: "\347\272\270"
        string_val: "\351\273\230"
        string_val: "\346\263\242"
        string_val: "\345\221\220"
        string_val: "\351\227\273"
        string_val: "\345\252\233"
        string_val: "\350\264\243"
        string_val: "\351\224\200"
        string_val: "\346\236\201"
        string_val: "\346\277\200"
        string_val: "\347\274\272"
        string_val: "\350\200\266"
        string_val: "\346\214\207"
        string_val: "\344\271\216"
        string_val: "\351\200\203"
        string_val: "\346\263\241"
        string_val: "\351\252\202"
        string_val: "\345\272\204"
        string_val: "\345\201\267"
        string_val: "\350\267\263"
        string_val: "\346\220\255"
        string_val: "\347\214\234"
        string_val: "\351\207\212"
        string_val: "\347\236\216"
        string_val: "\350\257\215"
        string_val: "\345\235\232"
        string_val: "\346\203\250"
        string_val: "\347\234\240"
        string_val: "\350\261\206"
        string_val: "\347\216\211"
        string_val: "\350\243\244"
        string_val: "\347\244\276"
        string_val: "\347\272\240"
        string_val: "\357\274\216"
        string_val: "\344\271\211"
        string_val: "\350\266\243"
        string_val: "\343\200\200"
        string_val: "\346\211\243"
        string_val: "\347\241\225"
        string_val: "\347\252\227"
        string_val: "\351\200\224"
        string_val: "\350\215\211"
        string_val: "\350\265\265"
        string_val: "\347\273\207"
        string_val: "\350\277\224"
        string_val: "\345\220\271"
        string_val: "\347\233\222"
        string_val: "\345\277\275"
        string_val: "\346\224\277"
        string_val: "\350\223\235"
        string_val: "\351\222\256"
        string_val: "\345\206\214"
        string_val: "\345\267\247"
        string_val: "\346\212\244"
        string_val: "\351\224\201"
        string_val: "\350\211\272"
        string_val: "\346\212\200"
        string_val: "\346\231\272"
        string_val: "\345\270\203"
        string_val: "\350\277\267"
        string_val: "\351\252\221"
        string_val: "\347\201\265"
        string_val: "\345\250\201"
        string_val: "\347\263\226"
        string_val: "\346\214\244"
        string_val: "\347\226\221"
        string_val: "\346\204\201"
        string_val: "\346\211\253"
        string_val: "\351\225\234"
        string_val: "\347\273\274"
        string_val: "\346\263\263"
        string_val: "\347\201\260"
        string_val: "\357\274\236"
        string_val: "\346\214\221"
        string_val: "\345\211\252"
        string_val: "\346\223\246"
        string_val: "\344\270\201"
        string_val: "\346\230\202"
        string_val: "\342\212\231"
        string_val: "\346\272\234"
        string_val: "\350\264\245"
        string_val: "\344\271\241"
        string_val: "\350\213\245"
        string_val: "\345\216\202"
        string_val: "\346\274\253"
        string_val: "\346\240\221"
        string_val: "\346\211\277"
        string_val: "\347\202\211"
        string_val: "\345\234\237"
        string_val: "\345\277\215"
        string_val: "\345\215\264"
        string_val: "\345\230\264"
        string_val: "\346\230\206"
        string_val: "\346\211\271"
        string_val: "\345\255\231"
        string_val: "\347\247\230"
        string_val: "\346\234\261"
        string_val: "\345\212\263"
        string_val: "\346\202\224"
        string_val: "\350\214\203"
        string_val: "\346\226\244"
        string_val: "\347\253\236"
        string_val: "\351\231\220"
        string_val: "\346\222\255"
        string_val: "\346\237\234"
        string_val: "\350\277\275"
        string_val: "\347\247\273"
        string_val: "\345\275\242"
        string_val: "\346\205\225"
        string_val: "\346\254\240"
        string_val: "\347\263\212"
        string_val: "\350\266\263"
        string_val: "\351\203\221"
        string_val: "\346\232\264"
        string_val: "\346\270\257"
        string_val: "\351\205\261"
        string_val: "\345\267\235"
        string_val: "\346\240\213"
        string_val: "\345\253\202"
        string_val: "\347\251\267"
        string_val: "\347\253\245"
        string_val: "\350\203\203"
        string_val: "\347\211\265"
        string_val: "\346\211\224"
        string_val: "\351\230\264"
        string_val: "\346\230\276"
        string_val: "\346\201\274"
        string_val: "\346\255\242"
        string_val: "\345\224\256"
        string_val: "\347\203\202"
        string_val: "\350\276\223"
        string_val: "\350\264\246"
        string_val: "\344\272\217"
        string_val: "\347\253\257"
        string_val: "\345\216\277"
        string_val: "\350\216\211"
        string_val: "\346\261\240"
        string_val: "\347\276\241"
        string_val: "\347\224\234"
        string_val: "\346\242\205"
        string_val: "\346\210\252"
        string_val: "\347\207\225"
        string_val: "\351\246\226"
        string_val: "\344\270\245"
        string_val: "\346\210\230"
        string_val: "\345\210\240"
        string_val: "\350\231\216"
        string_val: "\346\213\226"
        string_val: "\345\261\202"
        string_val: "\345\246\256"
        string_val: "\351\201\215"
        string_val: "\346\201\220"
        string_val: "\347\272\263"
        string_val: "\350\276\236"
        string_val: "\346\227\247"
        string_val: "\346\262\211"
        string_val: "\346\216\247"
        string_val: "\344\276\213"
        string_val: "\347\241\254"
        string_val: "\345\264\275"
        string_val: "\345\234\243"
        string_val: "\351\230\265"
        string_val: "\350\264\264"
        string_val: "\347\272\257"
        string_val: "\347\257\256"
        string_val: "\345\256\275"
        string_val: "\346\244\205"
        string_val: "\346\235\221"
        string_val: "\351\227\255"
        string_val: "\346\203\240"
        string_val: "\346\226\257"
        string_val: "\347\203\210"
        string_val: "\345\247\245"
        string_val: "\347\213\254"
        string_val: "\351\245\274"
        string_val: "\350\241\200"
        string_val: "\351\231\251"
        string_val: "\350\200\263"
        string_val: "\350\227\217"
        string_val: "\350\210\252"
        string_val: "\351\245\272"
        string_val: "\347\273\225"
        string_val: "\345\240\206"
        string_val: "\345\222\247"
        string_val: "\347\230\246"
        string_val: "\347\252\235"
        string_val: "\351\200\240"
        string_val: "\347\272\252"
        string_val: "\351\204\231"
        string_val: "\344\275\231"
        string_val: "\346\231\264"
        string_val: "\345\274\202"
        string_val: "\350\201\252"
        string_val: "\347\263\225"
        string_val: "\347\257\207"
        string_val: "|"
        string_val: "\350\275\275"
        string_val: "\346\202\211"
        string_val: "\351\233\267"
        string_val: "\345\213\207"
        string_val: "\345\206\273"
        string_val: "\346\217\241"
        string_val: "\344\273\231"
        string_val: "\345\215\217"
        string_val: "\345\223\204"
        string_val: "\347\213\202"
        string_val: "\350\207\255"
        string_val: "\350\213\217"
        string_val: "\345\220\220"
        string_val: "\350\210\236"
        string_val: "\350\275\256"
        string_val: "\351\200\274"
        string_val: "\351\234\262"
        string_val: "\345\257\214"
        string_val: "\347\264\242"
        string_val: "\345\222\252"
        string_val: "\346\241\203"
        string_val: "\350\264\272"
        string_val: "\344\276\235"
        string_val: "\345\261\217"
        string_val: "\346\235\255"
        string_val: "\345\243\201"
        string_val: "\346\263\252"
        string_val: "\347\247\257"
        string_val: "\345\216\225"
        string_val: "\347\250\263"
        string_val: "\347\243\250"
        string_val: "\345\256\276"
        string_val: "\350\272\201"
        string_val: "\346\242\257"
        string_val: "\347\233\221"
        string_val: "\345\216\246"
        string_val: "\347\214\233"
        string_val: "\345\272\255"
        string_val: "\345\215\263"
        string_val: "\350\256\257"
        string_val: "\346\243\222"
        string_val: "\347\261\215"
        string_val: "\350\204\261"
        string_val: "\351\275\220"
        string_val: "\351\231\205"
        string_val: "\345\220\233"
        string_val: "\302\240"
        string_val: "Z"
        string_val: "\347\220\264"
        string_val: "\350\231\232"
        string_val: "\345\226\204"
        string_val: "\350\276\243"
        string_val: "\346\211\257"
        string_val: "\347\273\277"
        string_val: "\346\264\245"
        string_val: "\346\200\250"
        string_val: "\345\250\234"
        string_val: "\346\204\232"
        string_val: "\351\242\234"
        string_val: "\346\257\222"
        string_val: "\346\203\271"
        string_val: "\345\234\210"
        string_val: "\345\256\205"
        string_val: "\346\213\224"
        string_val: "\346\266\202"
        string_val: "\346\237\263"
        string_val: "\345\277\247"
        string_val: "\345\256\210"
        string_val: "\350\216\267"
        string_val: "\345\205\260"
        string_val: "\346\220\234"
        string_val: "\346\203\221"
        string_val: "\346\227\242"
        string_val: "\345\207\273"
        string_val: "\345\216\232"
        string_val: "\344\271\230"
        string_val: "\345\261\213"
        string_val: "\345\224\257"
        string_val: "\345\206\233"
        string_val: "\350\200\220"
        string_val: "\347\206\212"
        string_val: "\351\227\252"
        string_val: "\350\276\221"
        string_val: "\345\207\200"
        string_val: "\350\257\261"
        string_val: "\345\207\214"
        string_val: "\350\257\236"
        string_val: "\347\213\240"
        string_val: "\346\234\235"
        string_val: "\344\273\244"
        string_val: "\350\231\253"
        string_val: "\345\207\221"
        string_val: "\350\203\234"
        string_val: "\346\264\262"
        string_val: "\347\247\200"
        string_val: "\346\213\274"
        string_val: "\347\274\223"
        string_val: "\350\265\226"
        string_val: "\350\270\217"
        string_val: "\346\222\221"
        string_val: "\346\273\250"
        string_val: "\346\263\275"
        string_val: "\345\213\244"
        string_val: "\345\253\214"
        string_val: "\346\215\216"
        string_val: "\350\257\242"
        string_val: "\350\211\263"
        string_val: "\346\225\221"
        string_val: "\346\213\245"
        string_val: "\350\257\246"
        string_val: "\345\256\241"
        string_val: "\345\277\206"
        string_val: "\345\272\223"
        string_val: "\344\274\227"
        string_val: "\345\220\273"
        string_val: "\347\273\264"
        string_val: "\345\220\264"
        string_val: "\346\264\276"
        string_val: "\346\264\201"
        string_val: "\346\266\246"
        string_val: "\357\274\217"
        string_val: "\347\277\224"
        string_val: "\347\221\237"
        string_val: "\351\222\210"
        string_val: "\350\276\251"
        string_val: "\346\205\260"
        string_val: "\345\260\235"
        string_val: "\357\270\266"
        string_val: "\344\272\232"
        string_val: "\346\230\240"
        string_val: "\345\202\205"
        string_val: "\346\254\243"
        string_val: "\346\256\213"
        string_val: "\345\212\261"
        string_val: "\347\264\240"
        string_val: "\346\210\222"
        string_val: "\345\210\227"
        string_val: "\347\245\245"
        string_val: "\345\257\202"
        string_val: "\350\217\217"
        string_val: "\345\224\224"
        string_val: "\345\222\263"
        string_val: "\345\256\243"
        string_val: "\344\275\263"
        string_val: "\347\235\233"
        string_val: "\346\236\220"
        string_val: "\350\213\227"
        string_val: "\346\271\277"
        string_val: "\351\207\216"
        string_val: "\345\260\276"
        string_val: "\351\242\227"
        string_val: "\351\243\230"
        string_val: "\351\270\255"
        string_val: "\351\271\217"
        string_val: "\345\260\212"
        string_val: "\351\203\212"
        string_val: "\347\221\236"
        string_val: "\357\274\234"
        string_val: "\347\263\237"
        string_val: "\347\213\274"
        string_val: "\347\210\206"
        string_val: "\347\273\252"
        string_val: "\351\232\220"
        string_val: "\346\213\220"
        string_val: "\351\251\276"
        string_val: "\345\221\246"
        string_val: "\350\257\221"
        string_val: "\347\262\245"
        string_val: "\351\233\205"
        string_val: "\345\222\224"
        string_val: "\347\247\260"
        string_val: "\347\262\275"
        string_val: "\346\234\265"
        string_val: "\345\260\201"
        string_val: "\345\233\272"
        string_val: "\345\256\207"
        string_val: "\344\270\235"
        string_val: "\347\216\207"
        string_val: "\346\262\237"
        string_val: "\346\205\214"
        string_val: "\346\272\203"
        string_val: "\346\200\226"
        string_val: "\350\276\205"
        string_val: "\345\263\260"
        string_val: "\345\273\266"
        string_val: "\345\242\203"
        string_val: "\347\273\243"
        string_val: "\346\210\232"
        string_val: "\347\214\256"
        string_val: "\346\235\260"
        string_val: "\344\276\204"
        string_val: "\345\257\236"
        string_val: "\350\236\215"
        string_val: "\347\224\230"
        string_val: "\344\275\233"
        string_val: "\350\276\206"
        string_val: "\345\225\247"
        string_val: "\350\220\250"
        string_val: "\350\217\262"
        string_val: "\346\225\217"
        string_val: "\345\220\274"
        string_val: "\345\210\270"
        string_val: "\346\273\221"
        string_val: "\350\222\231"
        string_val: "\357\274\240"
        string_val: "\350\257\241"
        string_val: "\345\255\243"
        string_val: "\347\264\253"
        string_val: "\346\213\222"
        string_val: "\346\266\233"
        string_val: "\345\213\277"
        string_val: "\345\245\224"
        string_val: "\345\275\222"
        string_val: "\345\257\270"
        string_val: "\345\242\236"
        string_val: "\345\272\217"
        string_val: "\345\231\266"
        string_val: "\346\267\200"
        string_val: "\345\222\226"
        string_val: "\347\212\257"
        string_val: "\342\206\222"
        string_val: "\345\222\254"
        string_val: "\344\270\221"
        string_val: "\345\274\225"
        string_val: "\350\277\205"
        string_val: "\346\203\212"
        string_val: "\346\222\236"
        string_val: "\345\210\272"
        string_val: "\345\207\241"
        string_val: "\346\215\217"
        string_val: "\345\261\210"
        string_val: "\351\262\234"
        string_val: "\345\207\244"
        string_val: "\346\210\264"
        string_val: "\350\243\271"
        string_val: "\351\274\240"
        string_val: "\351\223\203"
        string_val: "\345\215\261"
        string_val: "\347\247\201"
        string_val: "\344\274\264"
        string_val: "\345\225\203"
        string_val: "\346\221\204"
        string_val: "\351\274\223"
        string_val: "\344\270\262"
        string_val: "\350\205\260"
        string_val: "\350\201\230"
        string_val: "\346\226\214"
        string_val: "\346\254\247"
        string_val: "\350\270\252"
        string_val: "\350\265\236"
        string_val: "\351\200\227"
        string_val: "\351\233\204"
        string_val: "\350\221\261"
        string_val: "\351\224\246"
        string_val: "0"
        string_val: "\345\246\231"
        string_val: "\344\270\271"
        string_val: "\346\216\242"
        string_val: "\346\214\232"
        string_val: "\345\235\212"
        string_val: "\351\231\206"
        string_val: "\346\230\217"
        string_val: "\345\205\270"
        string_val: "\346\225\262"
        string_val: "\345\257\273"
        string_val: "\346\240\252"
        string_val: "\345\210\231"
        string_val: "\345\236\253"
        string_val: "\351\224\241"
        string_val: "\346\213\254"
        string_val: "\346\212\274"
        string_val: "\351\230\205"
        string_val: "\347\236\214"
        string_val: "\346\262\273"
        string_val: "\345\217\262"
        string_val: "\345\201\217"
        string_val: "\350\264\261"
        string_val: "\350\200\275"
        string_val: "\350\257\227"
        string_val: "\346\270\264"
        string_val: "\347\210\252"
        string_val: "\346\212\204"
        string_val: "\345\253\251"
        string_val: "\346\221\270"
        string_val: "\345\247\223"
        string_val: "\345\246\206"
        string_val: "\344\270\260"
        string_val: "\347\236\205"
        string_val: "\345\244\270"
        string_val: "\350\220\214"
        string_val: "\350\260\213"
        string_val: "\350\241\241"
        string_val: "\346\221\206"
        string_val: "\345\260\274"
        string_val: "\347\274\251"
        string_val: "\346\211\216"
        string_val: "\350\205\220"
        string_val: "\345\262\227"
        string_val: "\350\264\253"
        string_val: "\345\270\255"
        string_val: "\347\233\276"
        string_val: "\346\237\224"
        string_val: "\347\275\252"
        string_val: "\346\211\256"
        string_val: "\345\222\250"
        string_val: "\350\277\253"
        string_val: "\345\200\251"
        string_val: "\345\256\230"
        string_val: "\351\237\251"
        string_val: "\345\242\231"
        string_val: "\347\201\276"
        string_val: "\350\256\277"
        string_val: "\350\271\255"
        string_val: "\347\273\222"
        string_val: "\346\201\260"
        string_val: "\347\236\247"
        string_val: "\350\277\201"
        string_val: "\351\201\245"
        string_val: "\345\227\246"
        string_val: "\346\227\217"
        string_val: "\345\264\251"
        string_val: "\347\271\201"
        string_val: "\345\261\211"
        string_val: "\347\246\201"
        string_val: "\345\207\255"
        string_val: "\351\206\211"
        string_val: "\345\217\271"
        string_val: "\347\275\232"
        string_val: "\346\213\206"
        string_val: "\345\245\210"
        string_val: "\345\261\241"
        string_val: "`"
        string_val: "\342\230\206"
        string_val: "\351\246\222"
        string_val: "\346\224\222"
        string_val: "\344\271\222"
        string_val: "\347\233\233"
        string_val: "\344\271\203"
        string_val: "\347\245\270"
        string_val: "\351\202\200"
        string_val: "\347\216\262"
        string_val: "\346\264\252"
        string_val: "\344\271\223"
        string_val: "\345\246\222"
        string_val: "\351\255\224"
        string_val: "\346\273\213"
        string_val: "\347\224\262"
        string_val: "\344\276\247"
        string_val: "&"
        string_val: "\345\227\267"
        string_val: "\346\235\203"
        string_val: "\346\221\224"
        string_val: "\347\255\226"
        string_val: "\351\252\250"
        string_val: "\351\231\214"
        string_val: "\350\216\216"
        string_val: "\346\266\262"
        string_val: "\347\201\255"
        string_val: "\350\205\273"
        string_val: "\357\274\277"
        string_val: "\345\235\233"
        string_val: "$"
        string_val: "\345\253\211"
        string_val: "\345\252\222"
        string_val: "\346\224\273"
        string_val: "\345\246\273"
        string_val: "\'"
        string_val: "\347\227\264"
        string_val: "\345\217\244"
        string_val: "\346\214\250"
        string_val: "\345\217\266"
        string_val: "\350\202\244"
        string_val: "\346\275\234"
        string_val: "\347\202\216"
        string_val: "\345\225\267"
        string_val: "\345\223\222"
        string_val: "\351\225\207"
        string_val: "\346\200\222"
        string_val: "\346\263\211"
        string_val: "\345\220\212"
        string_val: "\350\267\235"
        string_val: "\343\200\220"
        string_val: "\346\221\251"
        string_val: "\343\200\221"
        string_val: "\346\202\204"
        string_val: "\351\235\251"
        string_val: "\345\220\257"
        string_val: "\345\257\277"
        string_val: "\351\201\227"
        string_val: "\345\230\216"
        string_val: "\345\211\202"
        string_val: "\350\257\272"
        string_val: "\346\265\256"
        string_val: "\347\242\214"
        string_val: "\346\205\210"
        string_val: "\350\242\226"
        string_val: "\345\225\244"
        string_val: "\347\243\201"
        string_val: "\350\202\277"
        string_val: "\351\200\217"
        string_val: "\350\202\240"
        string_val: "\347\272\267"
        string_val: "\345\215\246"
        string_val: "\351\235\223"
        string_val: "\345\212\253"
        string_val: "\346\204\247"
        string_val: "\346\276\263"
        string_val: "\345\260\204"
        string_val: "\346\205\247"
        string_val: "\345\202\215"
        string_val: "\346\211\207"
        string_val: "\350\234\234"
        string_val: "\346\237\277"
        string_val: "\345\223\200"
        string_val: "\345\244\256"
        string_val: "\350\224\241"
        string_val: "\345\213\276"
        string_val: "\350\220\235"
        string_val: "\346\243\215"
        string_val: "\346\237\223"
        string_val: "\346\254\262"
        string_val: "\346\211\254"
        string_val: "\345\253\201"
        string_val: "\350\216\262"
        string_val: "\345\222\222"
        string_val: "\347\255\271"
        string_val: "\351\272\246"
        string_val: "\350\260\216"
        string_val: "\345\224\240"
        string_val: "\345\270\235"
        string_val: "\347\275\242"
        string_val: "\351\223\276"
        string_val: "\350\204\276"
        string_val: "\350\204\226"
        string_val: "\350\242\234"
        string_val: "\347\204\246"
        string_val: "\346\267\273"
        string_val: "\346\251\231"
        string_val: "\345\210\200"
        string_val: "\346\221\207"
        string_val: "\345\277\214"
        string_val: "\350\213\271"
        string_val: "\350\265\242"
        string_val: "\350\266\201"
        string_val: "\347\237\233"
        string_val: "\351\202\252"
        string_val: "\344\276\243"
        string_val: "\351\262\201"
        string_val: "\344\274\257"
        string_val: "\347\217\212"
        string_val: "\347\250\200"
        string_val: "\346\221\212"
        string_val: "\351\234\236"
        string_val: "\350\216\261"
        string_val: "\345\274\261"
        string_val: "\347\247\222"
        string_val: "\345\261\212"
        string_val: "\350\277\271"
        string_val: "\346\211\201"
        string_val: "\345\225\241"
        string_val: "\347\240\270"
        string_val: "\344\273\215"
        string_val: "\347\246\275"
        string_val: "\350\277\252"
        string_val: "\347\226\262"
        string_val: "\350\212\254"
        string_val: "\346\213\250"
        string_val: "\345\216\242"
        string_val: "\345\244\225"
        string_val: "\346\233\262"
        string_val: "\346\231\203"
        string_val: "\350\264\270"
        string_val: "\346\244\222"
        string_val: "\346\233\246"
        string_val: "\345\205\275"
        string_val: "\350\211\260"
        string_val: "\345\205\265"
        string_val: "\344\274\201"
        string_val: "\351\222\223"
        string_val: "\350\241\267"
        string_val: "\344\274\217"
        string_val: "\345\200\215"
        string_val: "\345\216\250"
        string_val: "\351\271\260"
        string_val: "\345\206\240"
        string_val: "\350\211\276"
        string_val: "\345\236\203"
        string_val: "\345\210\256"
        string_val: "\350\272\262"
        string_val: "\351\207\207"
        string_val: "\350\276\210"
        string_val: "\345\224\244"
        string_val: "\347\226\232"
        string_val: "\346\262\202"
        string_val: "\345\237\213"
        string_val: "\346\216\217"
        string_val: "\351\242\240"
        string_val: "\350\210\271"
        string_val: "\351\201\265"
        string_val: "\357\274\206"
        string_val: "\345\270\226"
        string_val: "\350\236\202"
        string_val: "\345\220\270"
        string_val: "\350\247\246"
        string_val: "\350\232\212"
        string_val: "]"
        string_val: "\347\210\271"
        string_val: "\350\226\204"
        string_val: "\345\215\223"
        string_val: "\345\230\211"
        string_val: "\350\203\200"
        string_val: "\346\227\272"
        string_val: "\343\201\253"
        string_val: "\351\233\201"
        string_val: "["
        string_val: "\346\211\255"
        string_val: "\350\264\244"
        string_val: "\346\227\246"
        string_val: "\350\271\246"
        string_val: "\350\265\217"
        string_val: "\346\203\246"
        string_val: "\345\260\230"
        string_val: "\357\270\277"
        string_val: "\346\217\222"
        string_val: "\350\270\242"
        string_val: "\350\276\211"
        string_val: "\344\273\205"
        string_val: "\346\230\212"
        string_val: "\346\263\245"
        string_val: "\345\245\270"
        string_val: "\351\227\275"
        string_val: "\350\265\224"
        string_val: "\345\256\253"
        string_val: "\345\225\260"
        string_val: "\351\200\256"
        string_val: "\344\276\257"
        string_val: "\342\200\230"
        string_val: "\346\214\257"
        string_val: "\345\260\272"
        string_val: "\345\260\244"
        string_val: "\351\201\255"
        string_val: "\350\270\251"
        string_val: "\346\260\233"
        string_val: "\345\205\226"
        string_val: "\344\270\276"
        string_val: "\351\236\255"
        string_val: "\350\276\234"
        string_val: "\347\203\253"
        string_val: "\344\277\212"
        string_val: "\346\215\241"
        string_val: "\347\202\270"
        string_val: "\345\244\271"
        string_val: "\347\250\216"
        string_val: "\350\237\221"
        string_val: "\346\206\276"
        string_val: "\346\220\201"
        string_val: "\345\274\271"
        string_val: "\350\214\253"
        string_val: "\346\201\222"
        string_val: "\345\235\237"
        string_val: "\347\274\240"
        string_val: "\350\232\201"
        string_val: "\351\230\266"
        string_val: "\316\251"
        string_val: "\346\236\204"
        string_val: "\345\250\261"
        string_val: "\350\203\206"
        string_val: "\345\250\207"
        string_val: "\346\272\252"
        string_val: "\346\217\217"
        string_val: "\346\273\251"
        string_val: "\351\231\265"
        string_val: "\345\211\257"
        string_val: "\346\265\206"
        string_val: "\350\223\211"
        string_val: "\350\260\267"
        string_val: "\347\217\240"
        string_val: "\346\211\247"
        string_val: "\345\206\244"
        string_val: "\345\234\276"
        string_val: "\346\236\211"
        string_val: "\345\242\250"
        string_val: "\345\224\220"
        string_val: "\345\271\272"
        string_val: "\351\205\277"
        string_val: "\346\214\241"
        string_val: "\347\277\205"
        string_val: "\346\243\211"
        string_val: "\347\206\204"
        string_val: "\345\217\254"
        string_val: "\345\271\225"
        string_val: "\345\271\275"
        string_val: "\345\233\247"
        string_val: "\351\274\273"
        string_val: "\350\237\271"
        string_val: "\346\243\256"
        string_val: "\347\224\245"
        string_val: "\351\202\273"
        string_val: "\345\242\223"
        string_val: "\351\227\257"
        string_val: "\350\200\227"
        string_val: "\346\267\213"
        string_val: "\346\222\244"
        string_val: "\345\276\201"
        string_val: "\351\245\260"
        string_val: "\350\247\205"
        string_val: "\346\214\226"
        string_val: "\345\223\262"
        string_val: "\345\241\224"
        string_val: "\345\212\277"
        string_val: "\346\217\211"
        string_val: "\350\206\234"
        string_val: "\350\215\243"
        string_val: "\346\256\212"
        string_val: "\350\221\243"
        string_val: "\346\265\264"
        string_val: "\347\212\271"
        string_val: "\347\233\212"
        string_val: "\345\256\264"
        string_val: "\350\257\205"
        string_val: "\350\276\204"
        string_val: "\345\250\245"
        string_val: "\345\200\276"
        string_val: "\346\261\252"
        string_val: "\345\274\257"
        string_val: "\351\242\220"
        string_val: "\347\275\262"
        string_val: "\345\221\233"
        string_val: "\345\226\265"
        string_val: "\345\270\201"
        string_val: "\346\264\233"
        string_val: "\350\277\260"
        string_val: "\351\234\234"
        string_val: "\350\221\241"
        string_val: "\347\201\277"
        string_val: "\347\262\256"
        string_val: "\347\213\256"
        string_val: "\346\241\266"
        string_val: "\347\255\213"
        string_val: "\346\217\264"
        string_val: "\347\225\245"
        string_val: "\345\275\273"
        string_val: "\351\201\277"
        string_val: "\346\250\252"
        string_val: "\351\255\202"
        string_val: "\345\243\266"
        string_val: "\346\275\215"
        string_val: "\347\224\260"
        string_val: "\351\203\255"
        string_val: "\350\232\202"
        string_val: "\351\271\205"
        string_val: "\346\263\274"
        string_val: "\350\252\223"
        string_val: "\345\270\206"
        string_val: "\351\255\217"
        string_val: "\345\207\204"
        string_val: "\350\260\243"
        string_val: "\344\271\214"
        string_val: "\347\226\217"
        string_val: "\350\220\204"
        string_val: "\350\203\201"
        string_val: "\346\202\215"
        string_val: "\346\233\274"
        string_val: "\347\242\247"
        string_val: "\350\247\210"
        string_val: "\346\202\254"
        string_val: "\346\205\250"
        string_val: "\347\230\276"
        string_val: "\346\220\205"
        string_val: "\346\213\237"
        string_val: "\346\212\226"
        string_val: "\345\255\224"
        string_val: "\345\235\207"
        string_val: "\345\272\234"
        string_val: "\347\272\262"
        string_val: "\347\242\237"
        string_val: "\345\227\275"
        string_val: "\346\263\243"
        string_val: "\345\264\224"
        string_val: "\345\245\211"
        string_val: "\347\234\211"
        string_val: "\346\202\246"
        string_val: "\346\241\202"
        string_val: "\346\261\241"
        string_val: "\345\226\211"
        string_val: "\350\210\214"
        string_val: "\347\242\216"
        string_val: "\345\257\250"
        string_val: "\350\260\220"
        string_val: "\346\216\210"
        string_val: "\345\246\226"
        string_val: "\346\266\257"
        string_val: "\347\214\264"
        string_val: "\351\234\270"
        string_val: "\346\215\237"
        string_val: "\350\220\247"
        string_val: "\345\257\237"
        string_val: "\346\243\265"
        string_val: "\345\246\245"
        string_val: "\345\257\223"
        string_val: "\350\266\264"
        string_val: "\346\225\267"
        string_val: "\351\237\246"
        string_val: "\351\223\255"
        string_val: "\345\251\247"
        string_val: "\346\227\227"
        string_val: "\350\277\242"
        string_val: "\346\227\254"
        string_val: "\347\201\214"
        string_val: "\350\200\200"
        string_val: "\351\202\223"
        string_val: "\346\271\230"
        string_val: "\347\237\277"
        string_val: "\347\262\222"
        string_val: "\347\243\212"
        string_val: "\345\201\277"
        string_val: "\317\200"
        string_val: "\346\247\275"
        string_val: "\345\222\225"
        string_val: "\351\211\264"
        string_val: "\351\245\256"
        string_val: "\350\257\270"
        string_val: "\346\213\267"
        string_val: "\346\255\252"
        string_val: "\351\224\213"
        string_val: "\346\265\221"
        string_val: "\345\213\211"
        string_val: "\346\243\225"
        string_val: "\346\236\257"
        string_val: "\350\216\236"
        string_val: "\316\226"
        string_val: "}"
        string_val: "\347\245\210"
        string_val: "\351\202\271"
        string_val: "\344\277\227"
        string_val: "\345\210\244"
        string_val: "\346\212\271"
        string_val: "\347\232\207"
        string_val: "\347\274\270"
        string_val: "\351\246\210"
        string_val: "\345\205\206"
        string_val: "\350\222\270"
        string_val: "\346\206\213"
        string_val: "\347\233\257"
        string_val: "\350\276\260"
        string_val: "\350\231\276"
        string_val: "\350\264\267"
        string_val: "\346\215\211"
        string_val: "\357\275\234"
        string_val: "\346\217\255"
        string_val: "\347\275\251"
        string_val: "\347\255\221"
        string_val: "\346\233\271"
        string_val: "\356\200\204"
        string_val: "\347\233\262"
        string_val: "\344\275\221"
        string_val: "\347\235\201"
        string_val: "\347\205\262"
        string_val: "\350\234\227"
        string_val: "\357\274\202"
        string_val: "\345\275\254"
        string_val: "\344\271\263"
        string_val: "\346\265\223"
        string_val: "\350\241\253"
        string_val: "\351\255\205"
        string_val: "\350\202\251"
        string_val: "\345\260\264"
        string_val: "\346\220\223"
        string_val: "\350\276\220"
        string_val: "\351\273\217"
        string_val: "\347\212\200"
        string_val: "\346\213\246"
        string_val: "\357\271\201"
        string_val: "\345\215\277"
        string_val: "\347\224\232"
        string_val: "\345\276\213"
        string_val: "\346\242\201"
        string_val: "\345\247\232"
        string_val: "\346\214\245"
        string_val: "\302\244"
        string_val: "\346\232\247"
        string_val: "\350\214\202"
        string_val: "\347\253\271"
        string_val: "\347\262\230"
        string_val: "\350\261\253"
        string_val: "\347\205\216"
        string_val: "\345\275\252"
        string_val: "\350\217\240"
        string_val: "\350\203\270"
        string_val: "\345\207\266"
        string_val: "\346\235\234"
        string_val: "{"
        string_val: "\345\207\257"
        string_val: "\350\243\231"
        string_val: "\345\211\262"
        string_val: "\345\215\270"
        string_val: "\345\245\217"
        string_val: "\350\257\200"
        string_val: "\345\205\201"
        string_val: "\344\273\207"
        string_val: "\357\277\245"
        string_val: "\346\231\266"
        string_val: "\347\202\256"
        string_val: "\345\215\242"
        string_val: "\350\242\255"
        string_val: "\345\255\244"
        string_val: "\345\230\230"
        string_val: "\346\230\247"
        string_val: "\346\216\200"
        string_val: "\345\257\272"
        string_val: "\346\220\272"
        string_val: "\346\202\237"
        string_val: "\350\264\274"
        string_val: "\346\200\241"
        string_val: "\346\232\227"
        string_val: "\350\225\276"
        string_val: "\347\227\222"
        string_val: "\347\236\254"
        string_val: "\347\254\246"
        string_val: "\346\212\254"
        string_val: "\346\213\223"
        string_val: "\345\250\266"
        string_val: "\345\277\240"
        string_val: "\350\267\265"
        string_val: "\346\226\213"
        string_val: "\347\275\220"
        string_val: "\347\212\222"
        string_val: "\344\275\251"
        string_val: "\351\224\220"
        string_val: "\346\275\256"
        string_val: "\357\274\205"
        string_val: "\350\260\246"
        string_val: "\345\260\232"
        string_val: "\345\205\234"
        string_val: "\351\237\266"
        string_val: "\351\222\273"
        string_val: "\346\201\242"
        string_val: "\346\244\215"
        string_val: "\347\222\203"
        string_val: "\345\273\212"
        string_val: "\347\220\242"
        string_val: "\347\227\230"
        string_val: "\351\251\264"
        string_val: "\357\274\213"
        string_val: "\346\265\231"
        string_val: "\350\243\225"
        string_val: "\347\216\273"
        string_val: "\345\276\222"
        string_val: "\347\252\230"
        string_val: "\351\233\276"
        string_val: "\345\217\211"
        string_val: "\346\227\267"
        string_val: "\345\271\273"
        string_val: "\350\241\215"
        string_val: "\350\265\213"
        string_val: "\350\207\273"
        string_val: "\346\225\236"
        string_val: "\345\260\254"
        string_val: "\351\203\216"
        string_val: "\347\233\206"
        string_val: "\351\230\226"
        string_val: "\345\223\251"
        string_val: "\346\241\220"
        string_val: "\344\277\257"
        string_val: "\346\272\242"
        string_val: "\345\252\232"
        string_val: "\351\245\265"
        string_val: "\350\256\266"
        string_val: "\344\277\203"
        string_val: "\350\206\217"
        string_val: "\345\207\235"
        string_val: "\346\242\260"
        string_val: "\346\201\201"
        string_val: "\345\202\250"
        string_val: "\350\257\212"
        string_val: "\346\257\257"
        string_val: "\347\233\227"
        string_val: "\346\203\260"
        string_val: "\346\216\214"
        string_val: "\347\245\267"
        string_val: "\347\275\225"
        string_val: "\346\270\241"
        string_val: "\347\255\235"
        string_val: "\350\226\207"
        string_val: "\350\264\252"
        string_val: "\347\222\220"
        string_val: "\344\276\240"
        string_val: "\350\266\213"
        string_val: "\346\267\214"
        string_val: "\350\261\252"
        string_val: "\346\263\204"
        string_val: "\346\221\247"
        string_val: "\346\236\225"
        string_val: "\347\203\233"
        string_val: "\350\203\263"
        string_val: "\350\266\265"
        string_val: "\351\270\246"
        string_val: "\344\274\246"
        string_val: "\347\227\225"
        string_val: "\347\213\261"
        string_val: "\346\263\233"
        string_val: "\345\262\270"
        string_val: "\350\255\246"
        string_val: "\346\215\267"
        string_val: "\350\222\275"
        string_val: "\346\214\252"
        string_val: "\345\275\274"
        string_val: "\345\277\221"
        string_val: "\346\204\210"
        string_val: "\350\275\250"
        string_val: "\346\212\253"
        string_val: "\350\216\271"
        string_val: "\350\206\212"
        string_val: "\346\206\250"
        string_val: "\345\255\225"
        string_val: "\347\206\231"
        string_val: "\345\231\251"
        string_val: "\350\264\241"
        string_val: "\346\212\227"
        string_val: "\345\235\221"
        string_val: "\345\222\231"
        string_val: "\346\212\221"
        string_val: "\346\265\207"
        string_val: "\351\200\215"
        string_val: "\345\260\270"
        string_val: "\346\226\275"
        string_val: "\347\226\253"
        string_val: "\344\271\234"
        string_val: "\347\273\256"
        string_val: "\350\203\216"
        string_val: "\346\240\210"
        string_val: "\346\213\216"
        string_val: "\347\245\226"
        string_val: "\350\236\203"
        string_val: "\345\223\227"
        string_val: "\351\255\204"
        string_val: "\351\273\216"
        string_val: "\350\221\233"
        string_val: "\344\273\250"
        string_val: "\350\215\267"
        string_val: "\347\254\233"
        string_val: "\345\225\265"
        string_val: "\351\270\275"
        string_val: "\346\271\276"
        string_val: "\345\237\203"
        string_val: "\347\230\253"
        string_val: "\350\215\241"
        string_val: "\347\233\217"
        string_val: "\350\265\214"
        string_val: "\345\205\256"
        string_val: "\345\274\245"
        string_val: "\346\266\265"
        string_val: "\347\225\205"
        string_val: "\346\251\230"
        string_val: "\346\273\245"
        string_val: "\345\255\235"
        string_val: "\351\205\267"
        string_val: "\346\214\253"
        string_val: "\350\231\271"
        string_val: "\347\224\251"
        string_val: "\345\267\242"
        string_val: "\347\207\245"
        string_val: "\350\241\254"
        string_val: "\347\277\230"
        string_val: "\350\226\257"
        string_val: "\346\243\230"
        string_val: "\344\276\233"
        string_val: "\345\277\220"
        string_val: "\346\203\253"
        string_val: "\345\263\250"
        string_val: "\346\211\222"
        string_val: "\345\274\212"
        string_val: "\345\250\205"
        string_val: "\345\262\202"
        string_val: "\351\206\207"
        string_val: "\346\267\221"
        string_val: "\351\271\277"
        string_val: "\345\234\263"
        string_val: "\345\212\243"
        string_val: "\347\273\230"
        string_val: "\350\206\200"
        string_val: "\347\276\236"
        string_val: "\346\263\212"
        string_val: "\351\246\213"
        string_val: "\350\261\201"
        string_val: "\345\262\251"
        string_val: "\346\212\240"
        string_val: "\347\213\270"
        string_val: "\345\207\263"
        string_val: "\347\211\241"
        string_val: "\351\235\264"
        string_val: "\345\212\235"
        string_val: "\345\255\275"
        string_val: "\347\220\252"
        string_val: "\345\275\255"
        string_val: "\347\274\244"
        string_val: "\344\270\210"
        string_val: "\346\215\243"
        string_val: "\346\265\217"
        string_val: "\351\221\253"
        string_val: "\345\215\221"
        string_val: "\350\212\222"
        string_val: "\351\201\233"
        string_val: "\347\221\260"
        string_val: "\346\215\220"
        string_val: "\346\274\261"
        string_val: "\345\243\256"
        string_val: "\346\257\205"
        string_val: "\345\211\221"
        string_val: "\350\213\221"
        string_val: "\345\245\264"
        string_val: "\350\202\214"
        string_val: "\344\273\223"
        string_val: "\350\260\212"
        string_val: "\350\257\210"
        string_val: "\351\232\234"
        string_val: "\350\205\271"
        string_val: "\344\274\275"
        string_val: "\345\264\255"
        string_val: "\350\204\211"
        string_val: "\347\216\256"
        string_val: "\351\200\270"
        string_val: "\346\226\245"
        string_val: "\350\203\236"
        string_val: "\346\260\223"
        string_val: "\346\227\255"
        string_val: "\346\246\234"
        string_val: "\345\220\250"
        string_val: "\345\260\271"
        string_val: "\347\221\234"
        string_val: "\350\233\212"
        string_val: "\347\227\207"
        string_val: "\345\222\232"
        string_val: "\344\273\260"
        string_val: "\346\274\217"
        string_val: "\345\220\253"
        string_val: "\350\202\272"
        string_val: "\345\255\237"
        string_val: "\350\246\206"
        string_val: "\346\200\202"
        string_val: "\345\277\222"
        string_val: "\347\262\227"
        string_val: "\346\205\216"
        string_val: "\346\202\243"
        string_val: "\351\230\234"
        string_val: "\344\273\221"
        string_val: "\345\205\221"
        string_val: "\344\274\252"
        string_val: "\345\256\213"
        string_val: "\351\200\235"
        string_val: "\351\222\242"
        string_val: "\344\273\262"
        string_val: "\347\247\246"
        string_val: "\351\246\250"
        string_val: "\345\226\267"
        string_val: "\350\267\203"
        string_val: "\347\220\246"
        string_val: "\351\241\275"
        string_val: "\346\242\227"
        string_val: "\350\216\206"
        string_val: "\350\271\213"
        string_val: "\346\237\217"
        string_val: "\345\237\237"
        string_val: "\346\227\261"
        string_val: "\345\243\263"
        string_val: "\351\206\264"
        string_val: "\347\211\242"
        string_val: "\343\203\274"
        string_val: "\346\234\246"
        string_val: "\347\277\201"
        string_val: "\345\270\275"
        string_val: "\350\203\247"
        string_val: "\345\226\261"
        string_val: "\350\224\273"
        string_val: "\350\236\272"
        string_val: "\345\226\207"
        string_val: "\350\214\205"
        string_val: "\346\226\237"
        string_val: "\346\264\236"
        string_val: "\345\250\237"
        string_val: "\347\204\211"
        string_val: "\350\277\255"
        string_val: "\347\227\260"
        string_val: "\347\240\226"
        string_val: "\345\247\277"
        string_val: "\345\225\270"
        string_val: "\345\272\236"
        string_val: "\345\241\221"
        string_val: "\347\230\244"
        string_val: "\346\222\274"
        string_val: "\346\236\253"
        string_val: "\346\266\256"
        string_val: "\345\275\246"
        string_val: "\344\274\215"
        string_val: "\347\232\202"
        string_val: "\346\236\232"
        string_val: "\351\242\210"
        string_val: "\350\202\213"
        string_val: "\345\215\234"
        string_val: "\357\274\230"
        string_val: "\344\272\225"
        string_val: "\347\226\206"
        string_val: "\350\207\202"
        string_val: "\346\204\244"
        string_val: "\345\265\251"
        string_val: "\346\237\261"
        string_val: "\350\231\220"
        string_val: "\357\275\233"
        string_val: "\350\200\277"
        string_val: "\351\234\271"
        string_val: "\346\242\263"
        string_val: "\350\212\235"
        string_val: "\347\216\233"
        string_val: "\347\255\222"
        string_val: "\351\276\204"
        string_val: "\347\272\244"
        string_val: "\350\264\254"
        string_val: "\347\232\261"
        string_val: "\351\233\222"
        string_val: "\346\217\215"
        string_val: "\350\243\202"
        string_val: "\347\263\227"
        string_val: "\345\240\225"
        string_val: "\350\204\206"
        string_val: "\351\246\212"
        string_val: "\345\223\211"
        string_val: "\347\202\253"
        string_val: "\344\273\201"
        string_val: "\346\262\245"
        string_val: "\345\260\277"
        string_val: "\346\262\233"
        string_val: "\350\265\240"
        string_val: "\345\230\262"
        string_val: "\350\215\206"
        string_val: "\346\203\255"
        string_val: "\346\233\231"
        string_val: "\351\245\245"
        string_val: "\346\242\250"
        string_val: "\350\220\215"
        string_val: "\345\222\270"
        string_val: "\345\262\232"
        string_val: "\345\241\230"
        string_val: "\346\276\204"
        string_val: "\344\274\272"
        string_val: "\346\212\265"
        string_val: "\346\235\226"
        string_val: "\351\252\244"
        string_val: "\350\202\235"
        string_val: "\344\272\250"
        string_val: "\351\202\221"
        string_val: "\345\231\227"
        string_val: "\345\232\243"
        string_val: "\351\231\225"
        string_val: "\347\204\212"
        string_val: "\344\276\210"
        string_val: "\345\247\273"
        string_val: "\347\276\257"
        string_val: "\345\202\262"
        string_val: "\351\232\231"
        string_val: "\350\277\235"
        string_val: "\351\224\244"
        string_val: "\347\205\214"
        string_val: "\345\245\216"
        string_val: "\346\215\236"
        string_val: "\345\200\246"
        string_val: "\346\240\217"
        string_val: "\346\203\251"
        string_val: "\347\262\221"
        string_val: "\345\262\255"
        string_val: "\345\270\230"
        string_val: "\346\262\220"
        string_val: "\345\200\272"
        string_val: "\350\221\227"
        string_val: "\345\233\212"
        string_val: "\350\271\262"
        string_val: "\347\232\206"
        string_val: "\345\213\237"
        string_val: "\344\270\230"
        string_val: "\351\205\214"
        string_val: "\347\211\247"
        string_val: "\347\277\240"
        string_val: "\346\201\271"
        string_val: "\347\212\254"
        string_val: "\350\275\251"
        string_val: "\345\274\246"
        string_val: "\344\274\212"
        string_val: "\347\221\266"
        string_val: "\344\273\227"
        string_val: "\346\266\251"
        string_val: "\350\224\254"
        string_val: "\345\264\264"
        string_val: "\346\264\222"
        string_val: "\350\240\242"
        string_val: "\350\243\270"
        string_val: "\350\202\276"
        string_val: "\345\267\276"
        string_val: "\345\221\210"
        string_val: "\345\247\254"
        string_val: "\345\236\256"
        string_val: "\344\275\237"
        string_val: "\345\244\272"
        string_val: "\346\241\206"
        string_val: "\346\211\266"
        string_val: "\350\220\246"
        string_val: "\347\214\251"
        string_val: "\347\276\271"
        string_val: "\347\240\202"
        string_val: "\350\267\250"
        string_val: "\345\212\210"
        string_val: "\345\210\221"
        string_val: "\347\203\254"
        string_val: "\346\216\220"
        string_val: "\346\275\255"
        string_val: "\347\272\254"
        string_val: "\342\206\231"
        string_val: "\350\267\252"
        string_val: "\346\212\250"
        string_val: "\345\231\216"
        string_val: "\347\222\250"
        string_val: "\345\217\231"
        string_val: "\357\274\227"
        string_val: "\350\212\275"
        string_val: "\347\235\246"
        string_val: "\346\212\233"
        string_val: "\345\214\271"
        string_val: "\347\237\234"
        string_val: "\351\200\220"
        string_val: "\346\230\265"
        string_val: "\345\235\267"
        string_val: "\346\260\257"
        string_val: "\351\233\257"
        string_val: "\346\262\253"
        string_val: "\345\256\240"
        string_val: "\351\242\226"
        string_val: "\347\241\200"
        string_val: "\351\202\265"
        string_val: "\347\224\270"
        string_val: "\346\215\247"
        string_val: "\345\267\250"
        string_val: "\347\213\210"
        string_val: "\346\256\241"
        string_val: "\346\231\276"
        string_val: "\351\201\256"
        string_val: "\350\267\244"
        string_val: "\346\222\202"
        string_val: "\350\244\202"
        string_val: "\346\222\225"
        string_val: "\346\236\252"
        string_val: "\346\267\253"
        string_val: "\345\256\260"
        string_val: "\345\217\251"
        string_val: "\344\276\203"
        string_val: "\345\261\277"
        string_val: "\344\273\277"
        string_val: "\345\235\216"
        string_val: "\347\220\274"
        string_val: "\344\276\265"
        string_val: "\350\212\246"
        string_val: "\345\247\206"
        string_val: "\351\200\236"
        string_val: "\346\270\272"
        string_val: "\350\252\211"
        string_val: "\350\257\240"
        string_val: "\344\272\246"
        string_val: "\345\267\215"
        string_val: "\346\203\247"
        string_val: "\350\275\260"
        string_val: "\350\264\276"
        string_val: "\345\245\242"
        string_val: "\342\200\231"
        string_val: "\346\226\234"
        string_val: "\347\273\275"
        string_val: "\346\275\264"
        string_val: "\345\220\261"
        string_val: "\350\234\202"
        string_val: "\350\225\211"
        string_val: "\351\243\231"
        string_val: "\342\224\200"
        string_val: "\351\227\265"
        string_val: "\351\227\272"
        string_val: "\346\241\221"
        string_val: "\345\207\260"
        string_val: "\351\222\231"
        string_val: "\346\201\277"
        string_val: "\357\275\235"
        string_val: "\351\206\214"
        string_val: "\342\206\227"
        string_val: "\351\230\273"
        string_val: "\347\262\261"
        string_val: "\347\262\271"
        string_val: "\346\251\261"
        string_val: "\345\240\252"
        string_val: "\344\274\270"
        string_val: "\346\211\221"
        string_val: "\345\215\244"
        string_val: "\347\274\205"
        string_val: "\347\232\216"
        string_val: "\350\241\260"
        string_val: "\346\263\214"
        string_val: "\351\231\267"
        string_val: "\347\236\252"
        string_val: "\345\260\226"
        string_val: "\350\233\207"
        string_val: "\346\236\243"
        string_val: "\345\246\250"
        string_val: "\345\256\217"
        string_val: "\350\202\206"
        string_val: "\351\252\204"
        string_val: "\344\271\224"
        string_val: "\346\235\211"
        string_val: "\350\221\253"
        string_val: "\347\237\256"
        string_val: "\346\257\201"
        string_val: "\345\262\263"
        string_val: "\347\273\260"
        string_val: "\345\264\207"
        string_val: "\350\257\263"
        string_val: "\350\201\206"
        string_val: "\351\270\277"
        string_val: "\350\204\217"
        string_val: "\346\225\246"
        string_val: "\350\200\270"
        string_val: "\347\273\265"
        string_val: "\344\273\252"
        string_val: "\347\233\274"
        string_val: "\347\223\243"
        string_val: "\346\233\260"
        string_val: "\344\275\254"
        string_val: "\350\271\204"
        string_val: "\345\244\267"
        string_val: "\351\206\213"
        string_val: "\351\225\226"
        string_val: "\350\213\215"
        string_val: "\345\224\254"
        string_val: "\345\267\267"
        string_val: "\344\272\241"
        string_val: "\346\231\260"
        string_val: "\350\267\214"
        string_val: "\\"
        string_val: "\347\226\241"
        string_val: "\347\213\220"
        string_val: "\351\202\257"
        string_val: "\350\223\204"
        string_val: "\350\271\210"
        string_val: "\351\275\277"
        string_val: "\346\265\205"
        string_val: "\351\276\232"
        string_val: "\345\200\241"
        string_val: "\347\226\276"
        string_val: "\345\261\245"
        string_val: "\350\265\244"
        string_val: "\346\266\214"
        string_val: "\347\262\244"
        string_val: "\346\270\227"
        string_val: "\345\211\224"
        string_val: "\347\256\253"
        string_val: "\346\216\251"
        string_val: "\345\245\232"
        string_val: "\347\236\222"
        string_val: "\346\247\237"
        string_val: "\346\221\201"
        string_val: "\350\225\264"
        string_val: "\346\220\202"
        string_val: "\347\272\261"
        string_val: "\347\272\265"
        string_val: "\346\263\273"
        string_val: "\351\202\261"
        string_val: "\351\223\233"
        string_val: "\346\262\201"
        string_val: "\350\223\254"
        string_val: "\346\270\244"
        string_val: "\345\256\245"
        string_val: "\350\232\200"
        string_val: "\344\276\217"
        string_val: "\345\271\205"
        string_val: "\346\264\275"
        string_val: "\346\260\260"
        string_val: "\351\230\261"
        string_val: "\350\205\212"
        string_val: "\350\257\253"
        string_val: "\347\225\252"
        string_val: "\346\261\235"
        string_val: "\346\231\217"
        string_val: "\346\216\252"
        string_val: "\345\224\206"
        string_val: "\347\203\231"
        string_val: "\350\232\223"
        string_val: "\345\232\267"
        string_val: "\345\216\204"
        string_val: "\345\220\276"
        string_val: "\347\235\253"
        string_val: "\345\211\245"
        string_val: "\347\252\237"
        string_val: "\351\203\270"
        string_val: "\345\236\222"
        string_val: "\347\227\252"
        string_val: "\350\235\274"
        string_val: "\345\267\241"
        string_val: "\347\252\246"
        string_val: "\345\246\201"
        string_val: "\345\205\271"
        string_val: "\347\205\244"
        string_val: "\347\237\266"
        string_val: "\346\211\233"
        string_val: "\350\213\237"
        string_val: "\346\230\255"
        string_val: "\347\274\264"
        string_val: "\346\271\203"
        string_val: "\351\251\263"
        string_val: "\346\213\214"
        string_val: "\346\276\216"
        string_val: "\351\230\220"
        string_val: "\351\270\243"
        string_val: "\347\273\233"
        string_val: "\351\230\216"
        string_val: "\345\216\230"
        string_val: "\351\242\212"
        string_val: "\351\222\247"
        string_val: "\346\275\242"
        string_val: "\347\214\235"
        string_val: "\347\272\271"
        string_val: "\350\277\210"
        string_val: "\347\211\272"
        string_val: "\351\230\224"
        string_val: "\350\210\265"
        string_val: "\347\211\223"
        string_val: "\346\262\203"
        string_val: "\346\276\247"
        string_val: "\345\220\237"
        string_val: "\350\224\275"
        string_val: "\347\273\221"
        string_val: "\350\206\250"
        string_val: "\346\213\207"
        string_val: "\350\276\250"
        string_val: "\351\205\245"
        string_val: "\351\201\242"
        string_val: "\347\273\263"
        string_val: "\347\274\232"
        string_val: "\351\270\265"
        string_val: "\351\262\215"
        string_val: "\351\235\226"
        string_val: "\351\232\206"
        string_val: "\345\206\207"
        string_val: "\344\277\204"
        string_val: "\346\243\213"
        string_val: "\350\207\247"
        string_val: "\347\226\227"
        string_val: "\346\246\224"
        string_val: "\345\214\241"
        string_val: "\351\223\206"
        string_val: "\345\217\256"
        string_val: "\346\267\204"
        string_val: "\347\226\231"
        string_val: "\346\261\260"
        string_val: "\345\276\275"
        string_val: "\350\264\257"
        string_val: "\351\222\235"
        string_val: "\346\241\251"
        string_val: "\346\273\236"
        string_val: "\345\211\203"
        string_val: "\346\200\277"
        string_val: "\346\265\246"
        string_val: "\351\242\202"
        string_val: "\350\203\272"
        string_val: "\347\255\233"
        string_val: "\346\276\234"
        string_val: "\347\233\237"
        string_val: "\345\225\254"
        string_val: "\346\213\242"
        string_val: "\346\226\251"
        string_val: "\350\225\212"
        string_val: "\351\233\215"
        string_val: "\346\265\270"
        string_val: "\351\222\211"
        string_val: "\350\257\233"
        string_val: "\345\246\203"
        string_val: "\347\207\203"
        string_val: "\350\210\237"
        string_val: "\345\277\261"
        string_val: "\346\225\233"
        string_val: "\345\261\240"
        string_val: "\347\251\227"
        string_val: "\346\243\232"
        string_val: "\350\272\254"
        string_val: "\347\277\237"
        string_val: "\351\222\236"
        string_val: "\351\245\266"
        string_val: "\351\251\256"
        string_val: "\347\237\253"
        string_val: "\350\226\252"
        string_val: "\347\273\212"
        string_val: "\347\202\254"
        string_val: "\346\207\277"
        string_val: "\351\223\234"
        string_val: "\347\274\210"
        string_val: "\345\236\202"
        string_val: "\351\263\226"
        string_val: "\345\250\262"
        string_val: "\346\212\232"
        string_val: "\346\275\207"
        string_val: "\347\242\263"
        string_val: "\351\237\265"
        string_val: "\346\200\205"
        string_val: "\345\232\274"
        string_val: "\347\226\271"
        string_val: "\347\263\257"
        string_val: "\347\243\225"
        string_val: "\346\230\225"
        string_val: "\347\245\201"
        string_val: "\346\205\267"
        string_val: "\350\214\204"
        string_val: "\351\223\205"
        string_val: "\350\216\223"
        string_val: "\346\213\202"
        string_val: "\346\213\257"
        string_val: "\351\242\223"
        string_val: "\351\201\202"
        string_val: "\347\235\207"
        string_val: "\351\224\265"
        string_val: "\345\255\272"
        string_val: "\351\224\245"
        string_val: "\345\222\220"
        string_val: "\351\223\270"
        string_val: "\346\204\225"
        string_val: "\346\273\224"
        string_val: "\347\213\241"
        string_val: "\345\223\221"
        string_val: "\345\257\205"
        string_val: "\345\273\226"
        string_val: "\350\214\265"
        string_val: "\350\264\260"
        string_val: "\351\234\276"
        string_val: "\344\277\261"
        string_val: "\350\265\253"
        string_val: "\351\200\273"
        string_val: "\350\200\231"
        string_val: "\347\224\255"
        string_val: "\345\272\270"
        string_val: "\345\225\252"
        string_val: "\347\245\255"
        string_val: "\351\255\201"
        string_val: "\346\231\201"
        string_val: "\346\265\251"
        string_val: "\347\222\207"
        string_val: "\346\250\250"
        string_val: "\351\237\255"
        string_val: "\346\216\202"
        string_val: "\345\273\211"
        string_val: "\347\230\251"
        string_val: "\350\200\273"
        string_val: "\351\252\217"
        string_val: "\346\242\223"
        string_val: "\345\226\273"
        string_val: "\345\226\263"
        string_val: "\346\225\226"
        string_val: "\345\245\240"
        string_val: "\344\277\255"
        string_val: "\345\240\221"
        string_val: "\346\245\240"
        string_val: "\346\220\265"
        string_val: "\345\232\257"
        string_val: "\345\207\275"
        string_val: "\345\200\232"
        string_val: "\346\264\261"
        string_val: "\346\203\206"
        string_val: "\350\214\247"
        string_val: "\347\253\277"
        string_val: "\347\225\217"
        string_val: "\346\203\230"
        string_val: "\346\215\206"
        string_val: "\346\263\223"
        string_val: "\350\243\263"
        string_val: "\347\252\215"
        string_val: "\344\274\220"
        string_val: "\351\224\260"
        string_val: "\347\277\241"
        string_val: "\350\213\257"
        string_val: "\345\241\214"
        string_val: "\346\256\277"
        string_val: "\347\255\240"
        string_val: "\344\277\236"
        string_val: "\347\214\245"
        string_val: "\346\262\270"
        string_val: "\345\216\245"
        string_val: "\350\221\254"
        string_val: "\344\277\221"
        string_val: "\347\217\202"
        string_val: "\347\236\260"
        string_val: "\346\270\255"
        string_val: "\344\272\210"
        string_val: "\347\234\270"
        string_val: "\350\276\215"
        string_val: "\350\217\214"
        string_val: "\346\201\231"
        string_val: "\345\227\223"
        string_val: "\346\223\205"
        string_val: "\350\233\233"
        string_val: "\346\270\212"
        string_val: "\345\206\211"
        string_val: "\347\240\232"
        string_val: "\346\267\244"
        string_val: "\346\233\263"
        string_val: "\345\254\227"
        string_val: "\345\251\225"
        string_val: "\346\206\247"
        string_val: "\347\254\274"
        string_val: "\347\252\277"
        string_val: "\345\203\232"
        string_val: "\345\227\252"
        string_val: "\350\222\213"
        string_val: "\350\215\222"
        string_val: "\345\247\234"
        string_val: "\346\214\275"
        string_val: "\346\257\231"
        string_val: "\345\235\236"
        string_val: "\345\276\252"
        string_val: "\351\243\232"
        string_val: "\351\205\235"
        string_val: "\346\234\227"
        string_val: "\345\227\256"
        string_val: "\347\274\245"
        string_val: "\351\230\201"
        string_val: "\350\243\201"
        string_val: "\346\266\252"
        string_val: "\345\220\251"
        string_val: "\347\277\274"
        string_val: "\345\207\213"
        string_val: "\346\272\272"
        string_val: "\344\273\265"
        string_val: "\345\201\216"
        string_val: "\347\276\262"
        string_val: "\347\274\235"
        string_val: "\350\222\262"
        string_val: "\351\223\277"
        string_val: "\351\200\242"
        string_val: "\347\220\233"
        string_val: "\345\261\216"
        string_val: "\347\220\220"
        string_val: "\347\274\225"
        string_val: "\347\211\262"
        string_val: "\346\256\226"
        string_val: "\347\257\267"
        string_val: "\350\203\232"
        string_val: "\350\233\216"
        string_val: "\350\202\242"
        string_val: "\347\235\271"
        string_val: "\350\203\266"
        string_val: "\345\267\253"
        string_val: "\347\233\271"
        string_val: "\351\202\213"
        string_val: "\345\217\275"
        string_val: "\346\240\227"
        string_val: "\351\223\256"
        string_val: "\346\262\277"
        string_val: "\350\212\270"
        string_val: "\347\240\215"
        string_val: "\345\251\266"
        string_val: "\351\271\244"
        string_val: "\345\262\224"
        string_val: "\351\276\237"
        string_val: "\346\275\230"
        string_val: "\346\262\252"
        string_val: "\351\263\205"
        string_val: "\347\232\213"
        string_val: "\344\270\270"
        string_val: "\347\202\212"
        string_val: "\350\257\262"
        string_val: "\347\241\253"
        string_val: "\351\223\226"
        string_val: "\345\214\200"
        string_val: "\345\261\214"
        string_val: "\347\265\256"
        string_val: "\345\207\206"
        string_val: "\345\271\274"
        string_val: "\344\270\231"
        string_val: "\347\252\226"
        string_val: "\347\253\243"
        string_val: "\346\212\211"
        string_val: "\345\251\267"
        string_val: "\351\224\214"
        string_val: "\350\265\210"
        string_val: "\351\273\233"
        string_val: "\350\234\230"
        string_val: "\351\224\243"
        string_val: "\346\252\220"
        string_val: "\345\251\252"
        string_val: "\350\234\200"
        string_val: "\346\213\247"
        string_val: "\345\215\205"
        string_val: "\347\242\230"
        string_val: "\345\272\232"
        string_val: "\350\201\202"
        string_val: "\350\260\255"
        string_val: "\350\220\216"
        string_val: "\345\235\244"
        string_val: "\350\222\202"
        string_val: "\346\203\254"
        string_val: "\351\232\247"
        string_val: "\350\212\213"
        string_val: "\346\200\240"
        string_val: "\346\236\235"
        string_val: "\351\231\200"
        string_val: "\346\213\230"
        string_val: "\346\213\231"
        string_val: "\345\242\237"
        string_val: "\351\222\246"
        string_val: "\345\210\201"
        string_val: "\346\236\213"
        string_val: "\346\267\271"
        string_val: "\351\246\205"
        string_val: "\347\276\237"
        string_val: "\346\216\272"
        string_val: "\347\204\260"
        string_val: "\351\251\261"
        string_val: "\346\203\213"
        string_val: "\345\255\254"
        string_val: "\350\213\224"
        string_val: "\347\235\243"
        string_val: "\347\231\253"
        string_val: "\346\273\201"
        string_val: "\351\204\204"
        string_val: "\347\236\204"
        string_val: "\345\246\244"
        string_val: "\345\251\211"
        string_val: "\345\210\212"
        string_val: "\351\233\263"
        string_val: "\346\270\240"
        string_val: "\350\227\225"
        string_val: "\345\235\240"
        string_val: "\346\263\236"
        string_val: "\345\220\235"
        string_val: "\347\256\255"
        string_val: "\346\214\216"
        string_val: "\351\205\254"
        string_val: "\347\223\246"
        string_val: "\346\246\264"
        string_val: "\351\245\257"
        string_val: "\350\206\230"
        string_val: "\350\205\206"
        string_val: "\346\225\214"
        string_val: "\350\234\241"
        string_val: "\347\231\214"
        string_val: "\345\250\204"
        string_val: "\350\205\274"
        string_val: "\346\244\260"
        string_val: "\350\232\257"
        string_val: "\351\203\264"
        string_val: "\345\222\246"
        string_val: "\350\204\202"
        string_val: "\347\252\221"
        string_val: "\346\265\203"
        string_val: "\346\227\213"
        string_val: "\347\220\263"
        string_val: "\350\233\244"
        string_val: "\347\257\221"
        string_val: "\345\230\266"
        string_val: "\351\200\206"
        string_val: "\346\244\216"
        string_val: "\351\233\271"
        string_val: "\346\210\210"
        string_val: "\346\266\205"
        string_val: "\347\250\243"
        string_val: "\345\242\205"
        string_val: "\345\247\243"
        string_val: "\345\221\262"
        string_val: "\345\235\252"
        string_val: "\347\254\213"
        string_val: "\346\255\247"
        string_val: "\351\246\215"
        string_val: "\351\261\277"
        string_val: "\345\214\277"
        string_val: "\347\220\265"
        string_val: "\345\246\204"
        string_val: "\350\216\230"
        string_val: "\350\201\213"
        string_val: "\345\264\226"
        string_val: "\346\237\232"
        string_val: "\346\211\251"
        string_val: "\346\263\265"
        string_val: "\347\220\266"
        string_val: "\346\260\217"
        string_val: "\347\202\257"
        string_val: "\345\230\271"
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
        }
        tensor_content: "\300s\355H@\024\026H\200V\010H\200\340\347G\000\010\245G\200z\221G\200\357\220G\000\201\220G\000|wG\000\211OG\000T\031G\0005\006G\000Z\375F\000\030\353F\0004\326F\000V\315F\000 \314F\000\370\302F\000(\267F\000\272\253F\000\034\243F\000\310\237F\000\264\236F\000\000\215F\000\204cF\000\\DF\000\214=F\000p<F\000\0309F\000\2148F\000t#F\000\320\027F\000\324\020F\000\340\370E\000\320\357E\000X\323E\000\310\270E\000\020\260E\000X\255E\000\350\247E\000\300\244E\000\200\234E\000\250\226E\000`\226E\000\250\215E\000(\206E\000\200\205E\000(\203E\000P\202E\000\320[E\000\320VE\000\300VE\000\260IE\000@?E\00006E\00005E\000p2E\00002E\000@/E\000\300-E\000\240+E\000\300*E\000\260&E\000\260\"E\000\340 E\000 \030E\000 \013E\000\260\005E\0000\005E\000P\003E\0000\003E\000\260\002E\000\200\000E\000\200\365D\000@\362D\000\240\360D\000\200\355D\000\240\347D\000\200\340D\000\340\333D\000 \325D\000\340\316D\000 \316D\000`\303D\000\200\301D\000 \301D\000\340\300D\000@\300D\000\200\276D\000\200\276D\000\300\262D\000\200\255D\000\200\254D\000\240\244D\000\300\242D\000@\242D\000`\241D\000\000\241D\000\240\240D\000`\240D\000`\237D\000@\236D\000\200\235D\000\300\232D\000`\227D\000\300\226D\000`\222D\000\000\222D\000 \221D\000\000\220D\000`\217D\000\340\214D\000\240\214D\000\300\212D\000\240\210D\000@\205D\000\000\204D\000\340\201D\000\200wD\000@wD\000\200uD\000\200uD\000\300tD\000\200tD\000\200oD\000\000lD\000\000cD\000\200`D\000@_D\000\300]D\000\200]D\000@\\D\000@ZD\000\000YD\000\300PD\000@OD\000\000OD\000@LD\000@ID\000\300ED\000\000@D\000\300?D\000\200?D\000\300>D\000\200>D\000@>D\000@:D\000\000:D\000\2008D\000\2008D\000\3006D\000@5D\000\0004D\000\2002D\000@2D\000\0002D\000@/D\000\300+D\000\300(D\000\200(D\000\300\'D\000@&D\000\200%D\000\000%D\000\300$D\000@#D\000\000\031D\000\200\027D\000\000\027D\000\200\024D\000@\024D\000\200\020D\000\200\rD\000\300\014D\000\200\014D\000@\014D\000\000\014D\000\200\nD\000@\n|C\000\000xC\000\000xC\000\000xC\000\000vC\000\000sC\000\000sC\000\000rC\000\000rC\000\000rC\000\000rC\000\000oC\000\000lC\000\000lC\000\000jC\000\000iC\000\000hC\000\000gC\000\000fC\000\000bC\000\000bC\000\000`C\000\000`C\000\000_C\000\000_C\000\000_C\000\000^C\000\000]C\000\000YC\000\000XC\000\000WC\000\000VC\000\000UC\000\000SC\000\000RC\000\000PC\000\000OC\000\000NC\000\000NC\000\000MC\000\000MC\000\000MC\000\000MC\000\000LC\000\000KC\000\000KC\000\000JC\000\000JC\000\000JC\000\000JC\000\000IC\000\000FC\000\000FC\000\000EC\000\000EC\000\000CC\000\000BC\000\000AC\000\000AC\000\000@C\000\000@C\000\000?C\000\000>C\000\000=C\000\000=C\000\000<C\000\000;C\000\000:C\000\000:C\000\0009C\000\0008C\000\0008C\000\0008C\000\0008C\000\0007C\000\0007C\000\0006C\000\0006C\000\0006C\000\0003C\000\0002C\000\0000C\000\0000C\000\0000C\000\000/C\000\000.C\000\000.C\000\000-C\000\000,C\000\000,C\000\000*C\000\000)C\000\000)C\000\000)C\000\000)C\000\000)C\000\000)C\000\000\'C\000\000&C\000\000\"C\000\000!C\000\000 C\000\000 C\000\000\037C\000\000\037C\000\000\037C\000\000\036C\000\000\035C\000\000\034C\000\000\034C\000\000\034C\000\000\033C\000\000\032C\000\000\032C\000\000\031C\000\000\030C\000\000\030C\000\000\030C\000\000\027C\000\000\024C\000\000\024C\000\000\023C\000\000\023C\000\000\023C\000\000\022C\000\000\022C\000\000\021C\000\000\021C\000\000\021C\000\000\020C\000\000\020C\000\000\020C\000\000\016C\000\000\016C\000\000\rC\000\000\rC\000\000\rC\000\000\014C\000\000\014C\000\000\014C\000\000\013C\000\000\013C\000\000\nC\000\000\nC\000\000\tC\000\000\t|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000tB\000\000tB\000\000tB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000lB\000\000lB\000\000lB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3143
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range"
  op: "Range"
  input: "model/att_seq2seq/range/start"
  input: "model/att_seq2seq/range/limit"
  input: "model/att_seq2seq/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table"
  op: "HashTable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init"
  op: "InitializeTable"
  input: "model/att_seq2seq/hash_table"
  input: "model/att_seq2seq/range"
  input: "model/att_seq2seq/Const"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1"
  op: "HashTable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3140
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_1"
  op: "InitializeTable"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/range"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_1"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2"
  op: "HashTable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_2"
  op: "InitializeTable"
  input: "model/att_seq2seq/hash_table_2"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/Const_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_2"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 3143
          }
        }
        string_val: " "
        string_val: "i"
        string_val: "a"
        string_val: "n"
        string_val: "e"
        string_val: "u"
        string_val: "o"
        string_val: "h"
        string_val: "="
        string_val: "g"
        string_val: "\357\274\214"
        string_val: ">"
        string_val: "d"
        string_val: "s"
        string_val: "z"
        string_val: "l"
        string_val: "y"
        string_val: "\343\200\202"
        string_val: "w"
        string_val: "m"
        string_val: "b"
        string_val: "x"
        string_val: "j"
        string_val: "_"
        string_val: "\346\210\221"
        string_val: "\344\275\240"
        string_val: "q"
        string_val: "\344\272\206"
        string_val: "\357\274\237"
        string_val: "t"
        string_val: "c"
        string_val: "k"
        string_val: "\347\232\204"
        string_val: "\344\270\215"
        string_val: "\357\274\201"
        string_val: "f"
        string_val: "\345\245\275"
        string_val: "\342\200\246"
        string_val: "\345\234\250"
        string_val: "r"
        string_val: "."
        string_val: "\345\216\273"
        string_val: "\346\230\257"
        string_val: "\345\225\212"
        string_val: "\346\262\241"
        string_val: "\344\270\200"
        string_val: "\344\271\210"
        string_val: "\345\244\251"
        string_val: "\346\234\211"
        string_val: "\346\235\245"
        string_val: "\345\220\247"
        string_val: "\344\270\212"
        string_val: "\345\210\260"
        string_val: "p"
        string_val: "\345\260\261"
        string_val: "\350\246\201"
        string_val: "\345\233\236"
        string_val: "\344\270\213"
        string_val: "\344\270\252"
        string_val: ","
        string_val: "~"
        string_val: "<"
        string_val: "\350\277\230"
        string_val: "\351\202\243"
        string_val: "\347\202\271"
        string_val: "#"
        string_val: "\345\220\227"
        string_val: "\344\273\254"
        string_val: "\347\234\213"
        string_val: "\350\277\231"
        string_val: "\346\227\266"
        string_val: "\345\220\203"
        string_val: "\344\274\232"
        string_val: "\345\223\210"
        string_val: "\345\256\266"
        string_val: "\347\273\231"
        string_val: "\350\257\264"
        string_val: "\344\273\200"
        string_val: "\350\277\207"
        string_val: "\346\203\263"
        string_val: "\345\221\265"
        string_val: "\345\221\242"
        string_val: "\344\273\212"
        string_val: "\346\231\232"
        string_val: "\346\230\216"
        string_val: "\351\203\275"
        string_val: "\344\271\237"
        string_val: "\344\272\213"
        string_val: "\344\272\272"
        string_val: "?"
        string_val: "\347\224\265"
        string_val: "\350\260\242"
        string_val: "\345\244\232"
        string_val: "\350\257\235"
        string_val: "\345\217\257"
        string_val: "\345\276\227"
        string_val: "\351\245\255"
        string_val: "\346\211\223"
        string_val: "\344\273\245"
        string_val: "\345\255\246"
        string_val: "\345\277\253"
        string_val: "*"
        string_val: "\350\200\201"
        string_val: "\346\200\216"
        string_val: "\350\203\275"
        string_val: "\347\216\260"
        string_val: "\347\255\211"
        string_val: "\350\265\267"
        string_val: "\347\237\245"
        string_val: "\344\273\226"
        string_val: "\351\207\214"
        string_val: "\345\217\221"
        string_val: "\345\225\246"
        string_val: "\351\201\223"
        string_val: "\345\223\252"
        string_val: "\345\244\247"
        string_val: "\357\275\236"
        string_val: "\347\235\241"
        string_val: "\345\260\217"
        string_val: "\345\277\203"
        string_val: "\351\227\256"
        string_val: "\345\207\272"
        string_val: "\345\200\231"
        string_val: "\345\274\200"
        string_val: "\350\275\246"
        string_val: "\345\223\246"
        string_val: "\346\240\267"
        string_val: "\345\255\220"
        string_val: "\350\241\214"
        string_val: "\345\206\215"
        string_val: "\345\276\210"
        string_val: "\344\271\260"
        string_val: "\346\211\276"
        string_val: "-"
        string_val: "\345\215\210"
        string_val: "\345\220\216"
        string_val: "\347\235\200"
        string_val: "\345\271\262"
        string_val: "\347\217\255"
        string_val: "\347\224\237"
        string_val: "\350\257\276"
        string_val: "\347\224\250"
        string_val: "\346\204\217"
        string_val: "\346\227\251"
        string_val: "\346\234\272"
        string_val: "\345\210\253"
        string_val: "\345\230\233"
        string_val: ":"
        string_val: "\345\210\232"
        string_val: "\347\216\251"
        string_val: "\345\222\214"
        string_val: "\347\234\237"
        string_val: "\345\221\200"
        string_val: "\350\207\252"
        string_val: "\345\230\277"
        string_val: "\344\277\241"
        string_val: "\350\257\267"
        string_val: "\345\207\240"
        string_val: "\351\227\264"
        string_val: "\346\234\200"
        string_val: "\345\217\267"
        string_val: "\345\201\232"
        string_val: "\346\201\251"
        string_val: "\350\247\211"
        string_val: "\345\270\256"
        string_val: "\346\212\212"
        string_val: "\345\227\257"
        string_val: "\350\247\201"
        string_val: "\345\244\252"
        string_val: "\344\270\255"
        string_val: "\347\210\261"
        string_val: "!"
        string_val: "\345\256\232"
        string_val: "v"
        string_val: "\343\200\201"
        string_val: "\345\256\214"
        string_val: "\345\217\210"
        string_val: "\346\211\215"
        string_val: "\345\270\246"
        string_val: "\345\271\264"
        string_val: "\345\246\210"
        string_val: "\344\270\272"
        string_val: ")"
        string_val: "\351\235\242"
        string_val: "\344\270\234"
        string_val: "\345\277\231"
        string_val: "\346\211\213"
        string_val: "\357\274\232"
        string_val: "\344\275\234"
        string_val: "\350\256\260"
        string_val: "\345\256\211"
        string_val: "\350\267\237"
        string_val: "\344\271\220"
        string_val: "\345\267\261"
        string_val: "\345\234\260"
        string_val: "\351\222\261"
        string_val: "\345\205\210"
        string_val: "\346\224\266"
        string_val: "\350\200\203"
        string_val: "\346\216\245"
        string_val: "\302\267"
        string_val: "\347\263\273"
        string_val: "\350\277\221"
        string_val: "\350\245\277"
        string_val: "\345\245\271"
        string_val: "\345\267\245"
        string_val: "\350\265\260"
        string_val: "\345\257\271"
        string_val: "\346\240\241"
        string_val: "\346\227\245"
        string_val: "\345\205\254"
        string_val: "\346\201\257"
        string_val: "\345\212\240"
        string_val: "\345\220\214"
        string_val: "\345\267\262"
        string_val: "\347\251\272"
        string_val: "Q"
        string_val: "\345\223\245"
        string_val: "\345\221\250"
        string_val: "\345\211\215"
        string_val: "\347\204\266"
        string_val: "\347\237\255"
        string_val: "\346\224\276"
        string_val: "\345\270\210"
        string_val: "\345\204\277"
        string_val: "\344\270\244"
        string_val: "\346\203\205"
        string_val: "\346\254\241"
        string_val: "\347\273\217"
        string_val: "\345\225\245"
        string_val: "\345\217\252"
        string_val: "\346\260\224"
        string_val: "^"
        string_val: "\345\212\236"
        string_val: "\345\215\201"
        string_val: "\347\275\221"
        string_val: "\346\255\273"
        string_val: "\345\247\220"
        string_val: "\350\276\271"
        string_val: "\346\226\271"
        string_val: "\350\201\224"
        string_val: "\347\256\227"
        string_val: "\350\257\245"
        string_val: "\345\246\202"
        string_val: "\346\226\260"
        string_val: "\350\267\257"
        string_val: "M"
        string_val: "\345\260\221"
        string_val: "\345\220\254"
        string_val: "\350\256\251"
        string_val: "\344\272\262"
        string_val: "\345\256\236"
        string_val: "\350\201\212"
        string_val: "\346\213\277"
        string_val: "\346\204\237"
        string_val: "\351\224\231"
        string_val: "\351\227\250"
        string_val: "\346\255\243"
        string_val: "\344\271\246"
        string_val: "\346\227\240"
        string_val: "\346\236\234"
        string_val: "\345\272\224"
        string_val: "E"
        string_val: "\345\217\253"
        string_val: "I"
        string_val: "\345\201\207"
        string_val: "D"
        string_val: "\345\244\264"
        string_val: "\344\271\240"
        string_val: "\346\202\250"
        string_val: "\351\242\230"
        string_val: "\347\245\235"
        string_val: "\345\210\206"
        string_val: "\345\256\244"
        string_val: "\344\270\232"
        string_val: "T"
        string_val: "\345\245\263"
        string_val: "\350\272\253"
        string_val: "\351\200\232"
        string_val: "\346\234\215"
        string_val: "\344\270\211"
        string_val: "\344\274\221"
        string_val: "\350\257\225"
        string_val: "A"
        string_val: "\346\267\256"
        string_val: "P"
        string_val: "\347\220\206"
        string_val: "\351\225\277"
        string_val: "\346\200\235"
        string_val: "\344\275\223"
        string_val: "\347\245\250"
        string_val: "\345\205\263"
        string_val: "\345\244\226"
        string_val: "\346\212\245"
        string_val: "\344\272\244"
        string_val: "\346\234\210"
        string_val: "\346\234\254"
        string_val: "\345\217\213"
        string_val: "\346\210\220"
        string_val: "\346\211\200"
        string_val: "\346\257\224"
        string_val: "\346\263\250"
        string_val: "\351\251\254"
        string_val: "\344\276\277"
        string_val: "\347\210\270"
        string_val: "\346\230\250"
        string_val: "\346\234\237"
        string_val: "\345\221\212"
        string_val: "\345\215\212"
        string_val: "\350\256\241"
        string_val: "\344\272\214"
        string_val: "\347\233\264"
        string_val: "\351\200\201"
        string_val: "\344\271\205"
        string_val: "\346\260\264"
        string_val: "\350\212\202"
        string_val: "\345\272\212"
        string_val: "\345\244\207"
        string_val: "\347\264\257"
        string_val: "\347\203\246"
        string_val: "\346\210\277"
        string_val: "\344\272\224"
        string_val: "\344\272\233"
        string_val: "\345\212\250"
        string_val: "C"
        string_val: "\344\275\217"
        string_val: "\345\222\261"
        string_val: "\345\256\235"
        string_val: "\346\237\245"
        string_val: "\346\245\274"
        string_val: "L"
        string_val: "\350\241\243"
        string_val: "\346\234\213"
        string_val: "\346\264\227"
        string_val: "\346\264\273"
        string_val: "\345\203\217"
        string_val: "\344\273\266"
        string_val: "\345\235\220"
        string_val: "2"
        string_val: "3"
        string_val: "\347\253\231"
        string_val: "\350\242\253"
        string_val: "\345\274\204"
        string_val: "\345\217\243"
        string_val: "\345\277\230"
        string_val: "\345\226\234"
        string_val: ";"
        string_val: "\345\220\215"
        string_val: "\346\214\272"
        string_val: "\345\215\225"
        string_val: "\351\232\276"
        string_val: "\351\241\272"
        string_val: "\346\254\242"
        string_val: "\351\253\230"
        string_val: "X"
        string_val: "\347\246\217"
        string_val: "\345\230\273"
        string_val: "\350\210\215"
        string_val: "\345\274\240"
        string_val: "\345\256\277"
        string_val: "\347\273\223"
        string_val: "\345\205\255"
        string_val: "\345\233\233"
        string_val: "\350\204\221"
        string_val: "\345\251\206"
        string_val: "("
        string_val: "\357\274\211"
        string_val: "\346\270\205"
        string_val: "\357\274\210"
        string_val: "\345\206\231"
        string_val: "\345\275\223"
        string_val: "\344\271\213"
        string_val: "\345\205\266"
        string_val: "\350\264\271"
        string_val: "\351\233\250"
        string_val: "\345\235\227"
        string_val: "\345\256\242"
        string_val: "\357\274\233"
        string_val: "\345\222\213"
        string_val: "\344\275\206"
        string_val: "\347\201\253"
        string_val: "\350\277\233"
        string_val: "\347\205\247"
        string_val: "\344\275\215"
        string_val: "\344\273\216"
        string_val: "\350\257\211"
        string_val: "\345\244\215"
        string_val: "\347\220\203"
        string_val: "\345\212\233"
        string_val: "\346\231\225"
        string_val: "\346\217\220"
        string_val: "\345\226\235"
        string_val: "\350\260\201"
        string_val: "\345\206\267"
        string_val: "\346\205\242"
        string_val: "\351\231\252"
        string_val: "\351\202\256"
        string_val: "\345\233\240"
        string_val: "\345\270\270"
        string_val: "\345\255\251"
        string_val: "O"
        string_val: "\347\233\270"
        string_val: "\346\215\242"
        string_val: "\345\205\250"
        string_val: "\345\267\256"
        string_val: "\347\240\201"
        string_val: "1"
        string_val: "\346\257\217"
        string_val: "\345\275\261"
        string_val: "\346\230\237"
        string_val: "\346\220\236"
        string_val: "\345\217\215"
        string_val: "\345\215\227"
        string_val: "\346\263\225"
        string_val: "\345\234\272"
        string_val: "\351\207\215"
        string_val: "K"
        string_val: "\345\221\234"
        string_val: "\345\214\205"
        string_val: "\344\272\216"
        string_val: "\350\212\261"
        string_val: "\347\276\216"
        string_val: "\345\274\237"
        string_val: "\346\234\253"
        string_val: "\351\200\233"
        string_val: "5"
        string_val: "\346\234\233"
        string_val: "\345\276\205"
        string_val: "\346\225\231"
        string_val: "\350\201\232"
        string_val: "\350\257\201"
        string_val: "\346\200\245"
        string_val: "\345\247\213"
        string_val: "\350\265\266"
        string_val: "\345\246\271"
        string_val: "\350\241\250"
        string_val: "\350\265\204"
        string_val: "\345\214\227"
        string_val: "\346\226\207"
        string_val: "\347\264\247"
        string_val: "\346\200\225"
        string_val: "\345\215\241"
        string_val: "\350\277\234"
        string_val: "\345\205\253"
        string_val: "\347\231\275"
        string_val: "\347\254\254"
        string_val: "\350\256\244"
        string_val: "\345\233\275"
        string_val: "\346\224\271"
        string_val: "B"
        string_val: "S"
        string_val: "\345\233\276"
        string_val: "\344\273\275"
        string_val: "\345\223\216"
        string_val: "H"
        string_val: "\346\265\267"
        string_val: "\350\200\214"
        string_val: "\351\205\222"
        string_val: "\347\256\241"
        string_val: "\344\274\260"
        string_val: "\347\251\277"
        string_val: "\344\277\235"
        string_val: "\347\203\255"
        string_val: "\351\272\273"
        string_val: "\351\206\222"
        string_val: "\345\216\237"
        string_val: "\345\217\227"
        string_val: "\344\270\273"
        string_val: "\351\243\216"
        string_val: "7"
        string_val: "\346\262\271"
        string_val: "\345\224\211"
        string_val: "\345\267\236"
        string_val: "\351\222\237"
        string_val: "\351\243\236"
        string_val: "\345\270\202"
        string_val: "\346\270\270"
        string_val: "\350\257\255"
        string_val: "\346\213\211"
        string_val: "\351\231\242"
        string_val: "\347\225\231"
        string_val: "4"
        string_val: "\351\232\217"
        string_val: "\351\235\240"
        string_val: "\350\247\243"
        string_val: "\345\244\237"
        string_val: "\345\220\210"
        string_val: "\347\224\267"
        string_val: "\345\217\270"
        string_val: "\344\271\226"
        string_val: "\350\202\257"
        string_val: "\350\241\227"
        string_val: "\345\261\261"
        string_val: "\345\217\230"
        string_val: "\351\245\277"
        string_val: "\350\276\203"
        string_val: "\345\221\227"
        string_val: "\345\260\275"
        string_val: "\351\234\200"
        string_val: "\350\275\254"
        string_val: "\346\235\241"
        string_val: "\345\210\251"
        string_val: "\345\271\263"
        string_val: "\346\200\273"
        string_val: "\345\222\257"
        string_val: "\350\217\234"
        string_val: "\347\272\277"
        string_val: "\346\235\216"
        string_val: "\345\200\237"
        string_val: "\346\204\277"
        string_val: "\350\256\262"
        string_val: "\344\270\203"
        string_val: "\350\247\206"
        string_val: "/"
        string_val: "\345\272\227"
        string_val: "\351\207\217"
        string_val: "\345\201\234"
        string_val: "\345\221\230"
        string_val: "\345\267\246"
        string_val: "\346\233\264"
        string_val: "\345\270\214"
        string_val: "\345\243\260"
        string_val: "\351\246\206"
        string_val: "\344\272\254"
        string_val: "\346\235\277"
        string_val: "\350\260\203"
        string_val: "\345\235\217"
        string_val: "\347\256\261"
        string_val: "8"
        string_val: "\346\216\222"
        string_val: "\345\217\202"
        string_val: "\344\277\251"
        string_val: "\346\212\261"
        string_val: "\351\230\277"
        string_val: "\350\243\205"
        string_val: "\350\267\221"
        string_val: "\347\241\256"
        string_val: "\350\277\237"
        string_val: "\351\227\267"
        string_val: "\345\212\241"
        string_val: "\346\266\210"
        string_val: "\345\255\227"
        string_val: "6"
        string_val: "\345\244\234"
        string_val: "\346\242\246"
        string_val: "\351\230\263"
        string_val: "\345\215\203"
        string_val: "\345\271\270"
        string_val: "N"
        string_val: "\347\214\252"
        string_val: "\351\244\220"
        string_val: "\347\231\276"
        string_val: "\346\257\225"
        string_val: "\347\254\221"
        string_val: "\347\247\215"
        string_val: "\350\213\246"
        string_val: "\345\251\232"
        string_val: "\345\206\222"
        string_val: "\345\233\260"
        string_val: "\345\205\204"
        string_val: "\346\213\234"
        string_val: "\345\205\205"
        string_val: "\351\200\211"
        string_val: "\351\252\214"
        string_val: "\347\233\256"
        string_val: "\350\266\205"
        string_val: "\345\272\246"
        string_val: "\347\272\247"
        string_val: "\350\256\272"
        string_val: "\350\264\247"
        string_val: "\351\207\221"
        string_val: "\345\205\203"
        string_val: "\351\242\235"
        string_val: "\350\264\235"
        string_val: "\347\255\224"
        string_val: "\344\270\207"
        string_val: "\350\257\206"
        string_val: "\346\276\241"
        string_val: "\351\203\201"
        string_val: "\347\211\271"
        string_val: "\346\225\264"
        string_val: "\345\220\204"
        string_val: "\346\210\226"
        string_val: "\347\245\236"
        string_val: "\347\273\255"
        string_val: "\346\225\260"
        string_val: "\344\274\240"
        string_val: "\345\205\211"
        string_val: "\344\277\272"
        string_val: "\347\211\207"
        string_val: "\344\273\273"
        string_val: "\345\274\272"
        string_val: "\347\216\213"
        string_val: "\351\200\237"
        string_val: "\345\217\263"
        string_val: "\347\273\204"
        string_val: "\347\240\224"
        string_val: "\344\271\235"
        string_val: "\345\277\205"
        string_val: "\345\217\226"
        string_val: "G"
        string_val: "\345\244\261"
        string_val: "\350\200\205"
        string_val: "\345\210\207"
        string_val: "\347\211\251"
        string_val: "\344\275\225"
        string_val: "\346\273\264"
        string_val: "\346\246\202"
        string_val: "\350\256\250"
        string_val: "\345\215\226"
        string_val: "\350\233\213"
        string_val: "\350\277\220"
        string_val: "\347\276\212"
        string_val: "\351\242\206"
        string_val: "\345\277\227"
        string_val: "\345\206\205"
        string_val: "\347\246\273"
        string_val: "\344\273\267"
        string_val: "\346\226\231"
        string_val: "\344\277\256"
        string_val: "\347\227\205"
        string_val: "\350\213\261"
        string_val: "\347\226\274"
        string_val: "\345\257\274"
        string_val: "\345\271\277"
        string_val: "\350\264\265"
        string_val: "\347\272\242"
        string_val: "\347\234\274"
        string_val: "\351\235\236"
        string_val: "\347\244\274"
        string_val: "\345\220\221"
        string_val: "\346\245\232"
        string_val: "\345\214\272"
        string_val: "\345\272\225"
        string_val: "\345\206\265"
        string_val: "\346\211\260"
        string_val: "\345\202\273"
        string_val: "\346\213\205"
        string_val: "\346\262\231"
        string_val: "\345\205\264"
        string_val: "\346\213\233"
        string_val: "\346\260\270"
        string_val: "\351\203\250"
        string_val: "\346\207\202"
        string_val: "\350\211\262"
        string_val: "U"
        string_val: "\346\222\222"
        string_val: "\346\210\217"
        string_val: "\342\200\234"
        string_val: "@"
        string_val: "\344\270\223"
        string_val: "\345\257\235"
        string_val: "\351\243\237"
        string_val: "\345\200\222"
        string_val: "\344\272\256"
        string_val: "\345\273\272"
        string_val: "\350\210\254"
        string_val: "\347\272\246"
        string_val: "\346\257\233"
        string_val: "\350\276\233"
        string_val: "\346\261\202"
        string_val: "\347\255\276"
        string_val: "\344\273\243"
        string_val: "\347\261\263"
        string_val: "\345\206\263"
        string_val: "9"
        string_val: "\350\215\257"
        string_val: "\345\223\207"
        string_val: "\346\270\251"
        string_val: "\346\273\241"
        string_val: "\350\210\222"
        string_val: "\345\276\200"
        string_val: "\347\247\237"
        string_val: "\351\235\222"
        string_val: "Y"
        string_val: "\345\256\271"
        string_val: "\347\247\221"
        string_val: "\345\245\266"
        string_val: "\351\241\276"
        string_val: "\345\233\255"
        string_val: "\345\223\201"
        string_val: "\346\224\257"
        string_val: "\345\214\273"
        string_val: "\346\225\243"
        string_val: "\345\220\265"
        string_val: "\350\201\214"
        string_val: "\346\265\216"
        string_val: "\346\216\211"
        string_val: "\347\250\213"
        string_val: "\351\233\252"
        string_val: "\342\200\235"
        string_val: "\345\225\206"
        string_val: "\346\200\252"
        string_val: "\345\244\204"
        string_val: "\350\277\236"
        string_val: "\350\241\245"
        string_val: "\346\216\250"
        string_val: "\346\240\274"
        string_val: "\345\272\267"
        string_val: "\346\231\223"
        string_val: "\350\266\237"
        string_val: "\350\266\212"
        string_val: "\345\221\206"
        string_val: "\345\205\267"
        string_val: "\345\215\260"
        string_val: "\345\277\265"
        string_val: "\345\256\263"
        string_val: "\346\230\245"
        string_val: "\345\215\216"
        string_val: "\347\273\210"
        string_val: "\345\223\237"
        string_val: "\350\257\273"
        string_val: "\346\200\247"
        string_val: "\346\207\222"
        string_val: "\345\223\274"
        string_val: "\345\240\202"
        string_val: "\345\217\212"
        string_val: "F"
        string_val: "\344\270\242"
        string_val: "\350\256\270"
        string_val: "\345\201\245"
        string_val: "\345\221\275"
        string_val: "\345\210\235"
        string_val: "\345\272\247"
        string_val: "\351\237\263"
        string_val: "\345\205\245"
        string_val: "\344\274\244"
        string_val: "\345\233\242"
        string_val: "\346\212\275"
        string_val: "+"
        string_val: "\346\255\245"
        string_val: "\346\255\244"
        string_val: "\346\214\201"
        string_val: "\345\237\216"
        string_val: "\344\273\213"
        string_val: "\346\225\242"
        string_val: "\350\231\221"
        string_val: "\346\265\201"
        string_val: "R"
        string_val: "\345\247\250"
        string_val: "\345\205\273"
        string_val: "\346\235\250"
        string_val: "\347\203\247"
        string_val: "\346\203\257"
        string_val: "\346\256\265"
        string_val: "\344\274\274"
        string_val: "\350\261\241"
        string_val: "\345\260\206"
        string_val: "\345\261\201"
        string_val: "\350\256\256"
        string_val: "\350\260\210"
        string_val: "\346\210\267"
        string_val: "\351\273\221"
        string_val: "\351\227\262"
        string_val: "\""
        string_val: "\346\255\214"
        string_val: "\345\231\242"
        string_val: "\345\217\260"
        string_val: "\344\270\226"
        string_val: "\345\207\211"
        string_val: "\345\214\226"
        string_val: "\345\221\274"
        string_val: "\347\233\230"
        string_val: "\347\273\247"
        string_val: "\345\217\246"
        string_val: "\351\227\271"
        string_val: "\346\237\220"
        string_val: "\346\214\211"
        string_val: "\345\257\204"
        string_val: "\351\223\266"
        string_val: "\347\261\273"
        string_val: "\357\274\274"
        string_val: "\345\205\261"
        string_val: "\351\200\202"
        string_val: "\350\275\273"
        string_val: "\344\270\216"
        string_val: "\347\273\237"
        string_val: "\344\271\261"
        string_val: "\346\232\226"
        string_val: "\346\213\276"
        string_val: "\345\274\217"
        string_val: "\345\255\230"
        string_val: "\351\233\206"
        string_val: "\344\273\230"
        string_val: "\347\252\201"
        string_val: "\346\255\246"
        string_val: "\351\270\241"
        string_val: "W"
        string_val: "\345\257\206"
        string_val: "\346\212\223"
        string_val: "\345\237\272"
        string_val: "\346\231\222"
        string_val: "\350\264\242"
        string_val: "\350\276\276"
        string_val: "\347\276\244"
        string_val: "\345\224\261"
        string_val: "\345\256\201"
        string_val: "\347\211\233"
        string_val: "\350\256\276"
        string_val: "\347\273\203"
        string_val: "\346\261\211"
        string_val: "\345\210\230"
        string_val: "\347\210\275"
        string_val: "\346\236\227"
        string_val: "\344\270\224"
        string_val: "\345\256\203"
        string_val: "\350\264\237"
        string_val: "\346\241\210"
        string_val: "\345\247\221"
        string_val: "\345\212\252"
        string_val: "\345\217\224"
        string_val: "\346\230\223"
        string_val: "\345\276\256"
        string_val: "\343\200\213"
        string_val: "\347\275\256"
        string_val: "\351\231\204"
        string_val: "\351\276\231"
        string_val: "\345\272\206"
        string_val: "\347\253\237"
        string_val: "\345\200\274"
        string_val: "\345\206\262"
        string_val: "\346\264\213"
        string_val: "\350\202\211"
        string_val: "\351\270\237"
        string_val: "\345\235\200"
        string_val: "\346\227\201"
        string_val: "\346\200\200"
        string_val: "\345\217\245"
        string_val: "\345\220\246"
        string_val: "\345\214\231"
        string_val: "\345\261\225"
        string_val: "\347\206\237"
        string_val: "\345\261\205"
        string_val: "\346\223\215"
        string_val: "\346\255\211"
        string_val: "\350\220\275"
        string_val: "\346\254\276"
        string_val: "\346\240\271"
        string_val: "\350\265\233"
        string_val: "\345\245\227"
        string_val: "\351\222\245"
        string_val: "\345\226\202"
        string_val: "\350\262\214"
        string_val: "\351\231\210"
        string_val: "\347\250\215"
        string_val: "\346\202\262"
        string_val: "\345\276\267"
        string_val: "\346\243\200"
        string_val: "\346\241\214"
        string_val: "\350\260\205"
        string_val: "\345\215\232"
        string_val: "\350\202\232"
        string_val: "\345\223\255"
        string_val: "\350\203\214"
        string_val: "\346\214\202"
        string_val: "\351\261\274"
        string_val: "\347\273\251"
        string_val: "\345\216\214"
        string_val: "\350\250\200"
        string_val: "\347\210\254"
        string_val: "\346\213\215"
        string_val: "\351\231\244"
        string_val: "\351\241\273"
        string_val: "\347\234\201"
        string_val: "\345\243\253"
        string_val: "\357\274\215"
        string_val: "\346\274\202"
        string_val: "\351\234\207"
        string_val: "\351\246\231"
        string_val: "\350\207\263"
        string_val: "\345\216\213"
        string_val: "\350\216\253"
        string_val: "\346\235\276"
        string_val: "\347\224\261"
        string_val: "\345\205\213"
        string_val: "\345\256\265"
        string_val: "\344\270\253"
        string_val: "\351\235\231"
        string_val: "\345\205\215"
        string_val: "\351\242\204"
        string_val: "\345\256\234"
        string_val: "\345\205\232"
        string_val: "\347\247\213"
        string_val: "\345\226\212"
        string_val: "\346\267\261"
        string_val: "\350\212\263"
        string_val: "\346\227\205"
        string_val: "\347\262\276"
        string_val: "\342\210\251"
        string_val: "\350\256\242"
        string_val: "\347\273\215"
        string_val: "\345\231\250"
        string_val: "\347\231\273"
        string_val: "\350\203\226"
        string_val: "\351\273\204"
        string_val: "\345\205\224"
        string_val: "\345\212\251"
        string_val: "\347\211\214"
        string_val: "\351\236\213"
        string_val: "\346\204\211"
        string_val: "\347\244\272"
        string_val: "\351\241\271"
        string_val: "\345\245\226"
        string_val: "\345\217\214"
        string_val: "\350\204\270"
        string_val: "\346\235\200"
        string_val: "\350\200\215"
        string_val: "\344\270\275"
        string_val: "\347\240\264"
        string_val: "\346\201\255"
        string_val: "\344\274\236"
        string_val: "\345\210\222"
        string_val: "\344\272\247"
        string_val: "\345\246\207"
        string_val: "\346\215\256"
        string_val: "\350\256\255"
        string_val: "\345\275\251"
        string_val: "\345\241\253"
        string_val: "\347\227\233"
        string_val: "\346\267\267"
        string_val: "\345\275\225"
        string_val: "\347\242\260"
        string_val: "\346\274\224"
        string_val: "\347\254\250"
        string_val: "\350\257\204"
        string_val: "\346\232\221"
        string_val: "\346\220\254"
        string_val: "\345\220\211"
        string_val: "\347\232\256"
        string_val: "\346\271\226"
        string_val: "\346\265\213"
        string_val: "\345\241\236"
        string_val: "\345\250\230"
        string_val: "\351\200\200"
        string_val: "\347\254\224"
        string_val: "\347\251\266"
        string_val: "\344\270\264"
        string_val: "\345\202\254"
        string_val: "\345\205\274"
        string_val: "\351\200\222"
        string_val: "\346\265\252"
        string_val: "V"
        string_val: "\345\226\275"
        string_val: "\345\267\264"
        string_val: "\346\201\250"
        string_val: "\351\252\227"
        string_val: "\345\270\205"
        string_val: "\351\223\201"
        string_val: "\350\277\216"
        string_val: "\346\267\230"
        string_val: "\351\205\215"
        string_val: "\351\231\215"
        string_val: "\346\250\241"
        string_val: "\350\202\245"
        string_val: "\347\211\210"
        string_val: "\346\235\257"
        string_val: "\346\261\227"
        string_val: "\345\212\237"
        string_val: "\350\215\220"
        string_val: "\346\231\256"
        string_val: "\357\274\235"
        string_val: "\346\235\237"
        string_val: "\346\235\220"
        string_val: "\347\256\200"
        string_val: "\346\203\234"
        string_val: "\347\225\214"
        string_val: "\350\260\223"
        string_val: "\346\232\202"
        string_val: "\345\221\263"
        string_val: "\351\201\207"
        string_val: "\345\216\205"
        string_val: "\345\262\233"
        string_val: "\345\240\265"
        string_val: "\351\230\262"
        string_val: "\344\274\230"
        string_val: "\345\210\267"
        string_val: "\345\245\207"
        string_val: "\347\203\237"
        string_val: "\346\212\230"
        string_val: "\347\216\253"
        string_val: "\351\241\277"
        string_val: "\343\200\212"
        string_val: "\345\207\217"
        string_val: "\347\202\274"
        string_val: "\346\233\277"
        string_val: "\346\231\250"
        string_val: "\347\210\267"
        string_val: "\350\257\257"
        string_val: "\350\233\256"
        string_val: "\345\245\245"
        string_val: "\347\273\235"
        string_val: "\347\233\226"
        string_val: "\344\274\231"
        string_val: "\346\212\242"
        string_val: "\344\272\211"
        string_val: "\347\201\257"
        string_val: "\346\262\263"
        string_val: "\350\264\255"
        string_val: "\345\220\223"
        string_val: "\350\210\205"
        string_val: "\344\272\253"
        string_val: "\347\223\266"
        string_val: "\346\273\232"
        string_val: "\346\211\230"
        string_val: "\350\231\275"
        string_val: "\350\214\266"
        string_val: "\346\200\234"
        string_val: "\346\231\257"
        string_val: "\346\261\207"
        string_val: "\347\203\244"
        string_val: "\346\234\257"
        string_val: "\345\210\266"
        string_val: "\344\274\237"
        string_val: "\351\224\273"
        string_val: "\347\262\211"
        string_val: "\345\236\213"
        string_val: "\345\216\211"
        string_val: "\344\275\277"
        string_val: "\345\235\241"
        string_val: "\346\234\250"
        string_val: "\347\273\206"
        string_val: "\345\206\234"
        string_val: "\344\272\221"
        string_val: "\345\237\271"
        string_val: "\350\242\213"
        string_val: "\350\247\202"
        string_val: "\345\206\254"
        string_val: "\347\224\263"
        string_val: "\350\272\272"
        string_val: "\345\212\262"
        string_val: "\345\211\247"
        string_val: "\351\245\261"
        string_val: "\347\273\234"
        string_val: "\346\201\213"
        string_val: "\345\223\215"
        string_val: "\346\225\210"
        string_val: "\345\215\207"
        string_val: "\346\200\201"
        string_val: "\342\200\224"
        string_val: "\344\275\216"
        string_val: "\345\211\251"
        string_val: "\350\202\262"
        string_val: "\351\230\237"
        string_val: "\346\214\243"
        string_val: "\347\212\266"
        string_val: "\345\206\260"
        string_val: "\351\233\266"
        string_val: "\345\261\236"
        string_val: "\347\226\257"
        string_val: "\345\215\253"
        string_val: "\345\210\273"
        string_val: "\345\234\206"
        string_val: "\347\274\230"
        string_val: "\347\214\253"
        string_val: "\346\240\207"
        string_val: "\345\213\222"
        string_val: "\345\252\263"
        string_val: "\345\245\213"
        string_val: "\346\261\237"
        string_val: "\346\226\255"
        string_val: "\350\204\232"
        string_val: "\351\232\224"
        string_val: "\347\233\220"
        string_val: "\347\275\227"
        string_val: "\350\207\264"
        string_val: "\345\244\253"
        string_val: "\347\224\273"
        string_val: "\347\205\256"
        string_val: "\351\234\211"
        string_val: "\347\253\213"
        string_val: "\346\260\221"
        string_val: "\346\233\276"
        string_val: "\346\267\241"
        string_val: "\345\260\224"
        string_val: "\347\217\215"
        string_val: "\350\220\245"
        string_val: "\345\215\267"
        string_val: "\345\276\220"
        string_val: "\350\257\266"
        string_val: "\346\235\202"
        string_val: "\346\225\205"
        string_val: "\346\212\225"
        string_val: "\347\274\226"
        string_val: "\346\213\251"
        string_val: "\346\261\275"
        string_val: "\350\205\277"
        string_val: "\347\223\234"
        string_val: "\345\233\264"
        string_val: "\345\210\233"
        string_val: "\347\277\273"
        string_val: "\357\274\212"
        string_val: "\351\252\232"
        string_val: "\351\254\274"
        string_val: "\350\247\204"
        string_val: "\350\265\232"
        string_val: "\346\241\245"
        string_val: "\347\253\240"
        string_val: "\350\275\257"
        string_val: "%"
        string_val: "\350\202\241"
        string_val: "\350\203\241"
        string_val: "\345\272\237"
        string_val: "\345\232\222"
        string_val: "\345\247\224"
        string_val: "\344\273\224"
        string_val: "\347\206\254"
        string_val: "\345\270\220"
        string_val: "\347\237\263"
        string_val: "\345\216\206"
        string_val: "\347\276\275"
        string_val: "\350\211\257"
        string_val: "\346\257\215"
        string_val: "\351\224\256"
        string_val: "\346\266\250"
        string_val: "\351\241\265"
        string_val: "\346\261\244"
        string_val: "\347\242\227"
        string_val: "\350\205\276"
        string_val: "\351\205\270"
        string_val: "\345\215\240"
        string_val: "\346\255\207"
        string_val: "\351\242\221"
        string_val: "\345\250\203"
        string_val: "\345\271\266"
        string_val: "\347\210\266"
        string_val: "\345\261\200"
        string_val: "\346\262\247"
        string_val: "\347\213\227"
        string_val: "\345\262\201"
        string_val: "\346\226\227"
        string_val: "\351\224\205"
        string_val: "\345\274\203"
        string_val: "\347\211\231"
        string_val: "\350\264\250"
        string_val: "\344\272\222"
        string_val: "\345\244\217"
        string_val: "\350\257\232"
        string_val: "\350\260\261"
        string_val: "\346\201\266"
        string_val: "\346\272\220"
        string_val: "\346\202\240"
        string_val: "\345\215\247"
        string_val: "\346\225\254"
        string_val: "J"
        string_val: "\350\247\222"
        string_val: "\351\241\266"
        string_val: "\345\201\266"
        string_val: "\303\227"
        string_val: "\346\241\243"
        string_val: "\346\234\252"
        string_val: "\346\230\214"
        string_val: "\346\254\272"
        string_val: "\346\240\270"
        string_val: "\345\257\222"
        string_val: "\347\202\222"
        string_val: "\351\223\272"
        string_val: "\345\226\224"
        string_val: "\346\263\260"
        string_val: "\347\250\277"
        string_val: "\346\236\266"
        string_val: "\347\216\257"
        string_val: "\347\272\270"
        string_val: "\351\273\230"
        string_val: "\346\263\242"
        string_val: "\345\221\220"
        string_val: "\351\227\273"
        string_val: "\345\252\233"
        string_val: "\350\264\243"
        string_val: "\351\224\200"
        string_val: "\346\236\201"
        string_val: "\346\277\200"
        string_val: "\347\274\272"
        string_val: "\350\200\266"
        string_val: "\346\214\207"
        string_val: "\344\271\216"
        string_val: "\351\200\203"
        string_val: "\346\263\241"
        string_val: "\351\252\202"
        string_val: "\345\272\204"
        string_val: "\345\201\267"
        string_val: "\350\267\263"
        string_val: "\346\220\255"
        string_val: "\347\214\234"
        string_val: "\351\207\212"
        string_val: "\347\236\216"
        string_val: "\350\257\215"
        string_val: "\345\235\232"
        string_val: "\346\203\250"
        string_val: "\347\234\240"
        string_val: "\350\261\206"
        string_val: "\347\216\211"
        string_val: "\350\243\244"
        string_val: "\347\244\276"
        string_val: "\347\272\240"
        string_val: "\357\274\216"
        string_val: "\344\271\211"
        string_val: "\350\266\243"
        string_val: "\343\200\200"
        string_val: "\346\211\243"
        string_val: "\347\241\225"
        string_val: "\347\252\227"
        string_val: "\351\200\224"
        string_val: "\350\215\211"
        string_val: "\350\265\265"
        string_val: "\347\273\207"
        string_val: "\350\277\224"
        string_val: "\345\220\271"
        string_val: "\347\233\222"
        string_val: "\345\277\275"
        string_val: "\346\224\277"
        string_val: "\350\223\235"
        string_val: "\351\222\256"
        string_val: "\345\206\214"
        string_val: "\345\267\247"
        string_val: "\346\212\244"
        string_val: "\351\224\201"
        string_val: "\350\211\272"
        string_val: "\346\212\200"
        string_val: "\346\231\272"
        string_val: "\345\270\203"
        string_val: "\350\277\267"
        string_val: "\351\252\221"
        string_val: "\347\201\265"
        string_val: "\345\250\201"
        string_val: "\347\263\226"
        string_val: "\346\214\244"
        string_val: "\347\226\221"
        string_val: "\346\204\201"
        string_val: "\346\211\253"
        string_val: "\351\225\234"
        string_val: "\347\273\274"
        string_val: "\346\263\263"
        string_val: "\347\201\260"
        string_val: "\357\274\236"
        string_val: "\346\214\221"
        string_val: "\345\211\252"
        string_val: "\346\223\246"
        string_val: "\344\270\201"
        string_val: "\346\230\202"
        string_val: "\342\212\231"
        string_val: "\346\272\234"
        string_val: "\350\264\245"
        string_val: "\344\271\241"
        string_val: "\350\213\245"
        string_val: "\345\216\202"
        string_val: "\346\274\253"
        string_val: "\346\240\221"
        string_val: "\346\211\277"
        string_val: "\347\202\211"
        string_val: "\345\234\237"
        string_val: "\345\277\215"
        string_val: "\345\215\264"
        string_val: "\345\230\264"
        string_val: "\346\230\206"
        string_val: "\346\211\271"
        string_val: "\345\255\231"
        string_val: "\347\247\230"
        string_val: "\346\234\261"
        string_val: "\345\212\263"
        string_val: "\346\202\224"
        string_val: "\350\214\203"
        string_val: "\346\226\244"
        string_val: "\347\253\236"
        string_val: "\351\231\220"
        string_val: "\346\222\255"
        string_val: "\346\237\234"
        string_val: "\350\277\275"
        string_val: "\347\247\273"
        string_val: "\345\275\242"
        string_val: "\346\205\225"
        string_val: "\346\254\240"
        string_val: "\347\263\212"
        string_val: "\350\266\263"
        string_val: "\351\203\221"
        string_val: "\346\232\264"
        string_val: "\346\270\257"
        string_val: "\351\205\261"
        string_val: "\345\267\235"
        string_val: "\346\240\213"
        string_val: "\345\253\202"
        string_val: "\347\251\267"
        string_val: "\347\253\245"
        string_val: "\350\203\203"
        string_val: "\347\211\265"
        string_val: "\346\211\224"
        string_val: "\351\230\264"
        string_val: "\346\230\276"
        string_val: "\346\201\274"
        string_val: "\346\255\242"
        string_val: "\345\224\256"
        string_val: "\347\203\202"
        string_val: "\350\276\223"
        string_val: "\350\264\246"
        string_val: "\344\272\217"
        string_val: "\347\253\257"
        string_val: "\345\216\277"
        string_val: "\350\216\211"
        string_val: "\346\261\240"
        string_val: "\347\276\241"
        string_val: "\347\224\234"
        string_val: "\346\242\205"
        string_val: "\346\210\252"
        string_val: "\347\207\225"
        string_val: "\351\246\226"
        string_val: "\344\270\245"
        string_val: "\346\210\230"
        string_val: "\345\210\240"
        string_val: "\350\231\216"
        string_val: "\346\213\226"
        string_val: "\345\261\202"
        string_val: "\345\246\256"
        string_val: "\351\201\215"
        string_val: "\346\201\220"
        string_val: "\347\272\263"
        string_val: "\350\276\236"
        string_val: "\346\227\247"
        string_val: "\346\262\211"
        string_val: "\346\216\247"
        string_val: "\344\276\213"
        string_val: "\347\241\254"
        string_val: "\345\264\275"
        string_val: "\345\234\243"
        string_val: "\351\230\265"
        string_val: "\350\264\264"
        string_val: "\347\272\257"
        string_val: "\347\257\256"
        string_val: "\345\256\275"
        string_val: "\346\244\205"
        string_val: "\346\235\221"
        string_val: "\351\227\255"
        string_val: "\346\203\240"
        string_val: "\346\226\257"
        string_val: "\347\203\210"
        string_val: "\345\247\245"
        string_val: "\347\213\254"
        string_val: "\351\245\274"
        string_val: "\350\241\200"
        string_val: "\351\231\251"
        string_val: "\350\200\263"
        string_val: "\350\227\217"
        string_val: "\350\210\252"
        string_val: "\351\245\272"
        string_val: "\347\273\225"
        string_val: "\345\240\206"
        string_val: "\345\222\247"
        string_val: "\347\230\246"
        string_val: "\347\252\235"
        string_val: "\351\200\240"
        string_val: "\347\272\252"
        string_val: "\351\204\231"
        string_val: "\344\275\231"
        string_val: "\346\231\264"
        string_val: "\345\274\202"
        string_val: "\350\201\252"
        string_val: "\347\263\225"
        string_val: "\347\257\207"
        string_val: "|"
        string_val: "\350\275\275"
        string_val: "\346\202\211"
        string_val: "\351\233\267"
        string_val: "\345\213\207"
        string_val: "\345\206\273"
        string_val: "\346\217\241"
        string_val: "\344\273\231"
        string_val: "\345\215\217"
        string_val: "\345\223\204"
        string_val: "\347\213\202"
        string_val: "\350\207\255"
        string_val: "\350\213\217"
        string_val: "\345\220\220"
        string_val: "\350\210\236"
        string_val: "\350\275\256"
        string_val: "\351\200\274"
        string_val: "\351\234\262"
        string_val: "\345\257\214"
        string_val: "\347\264\242"
        string_val: "\345\222\252"
        string_val: "\346\241\203"
        string_val: "\350\264\272"
        string_val: "\344\276\235"
        string_val: "\345\261\217"
        string_val: "\346\235\255"
        string_val: "\345\243\201"
        string_val: "\346\263\252"
        string_val: "\347\247\257"
        string_val: "\345\216\225"
        string_val: "\347\250\263"
        string_val: "\347\243\250"
        string_val: "\345\256\276"
        string_val: "\350\272\201"
        string_val: "\346\242\257"
        string_val: "\347\233\221"
        string_val: "\345\216\246"
        string_val: "\347\214\233"
        string_val: "\345\272\255"
        string_val: "\345\215\263"
        string_val: "\350\256\257"
        string_val: "\346\243\222"
        string_val: "\347\261\215"
        string_val: "\350\204\261"
        string_val: "\351\275\220"
        string_val: "\351\231\205"
        string_val: "\345\220\233"
        string_val: "\302\240"
        string_val: "Z"
        string_val: "\347\220\264"
        string_val: "\350\231\232"
        string_val: "\345\226\204"
        string_val: "\350\276\243"
        string_val: "\346\211\257"
        string_val: "\347\273\277"
        string_val: "\346\264\245"
        string_val: "\346\200\250"
        string_val: "\345\250\234"
        string_val: "\346\204\232"
        string_val: "\351\242\234"
        string_val: "\346\257\222"
        string_val: "\346\203\271"
        string_val: "\345\234\210"
        string_val: "\345\256\205"
        string_val: "\346\213\224"
        string_val: "\346\266\202"
        string_val: "\346\237\263"
        string_val: "\345\277\247"
        string_val: "\345\256\210"
        string_val: "\350\216\267"
        string_val: "\345\205\260"
        string_val: "\346\220\234"
        string_val: "\346\203\221"
        string_val: "\346\227\242"
        string_val: "\345\207\273"
        string_val: "\345\216\232"
        string_val: "\344\271\230"
        string_val: "\345\261\213"
        string_val: "\345\224\257"
        string_val: "\345\206\233"
        string_val: "\350\200\220"
        string_val: "\347\206\212"
        string_val: "\351\227\252"
        string_val: "\350\276\221"
        string_val: "\345\207\200"
        string_val: "\350\257\261"
        string_val: "\345\207\214"
        string_val: "\350\257\236"
        string_val: "\347\213\240"
        string_val: "\346\234\235"
        string_val: "\344\273\244"
        string_val: "\350\231\253"
        string_val: "\345\207\221"
        string_val: "\350\203\234"
        string_val: "\346\264\262"
        string_val: "\347\247\200"
        string_val: "\346\213\274"
        string_val: "\347\274\223"
        string_val: "\350\265\226"
        string_val: "\350\270\217"
        string_val: "\346\222\221"
        string_val: "\346\273\250"
        string_val: "\346\263\275"
        string_val: "\345\213\244"
        string_val: "\345\253\214"
        string_val: "\346\215\216"
        string_val: "\350\257\242"
        string_val: "\350\211\263"
        string_val: "\346\225\221"
        string_val: "\346\213\245"
        string_val: "\350\257\246"
        string_val: "\345\256\241"
        string_val: "\345\277\206"
        string_val: "\345\272\223"
        string_val: "\344\274\227"
        string_val: "\345\220\273"
        string_val: "\347\273\264"
        string_val: "\345\220\264"
        string_val: "\346\264\276"
        string_val: "\346\264\201"
        string_val: "\346\266\246"
        string_val: "\357\274\217"
        string_val: "\347\277\224"
        string_val: "\347\221\237"
        string_val: "\351\222\210"
        string_val: "\350\276\251"
        string_val: "\346\205\260"
        string_val: "\345\260\235"
        string_val: "\357\270\266"
        string_val: "\344\272\232"
        string_val: "\346\230\240"
        string_val: "\345\202\205"
        string_val: "\346\254\243"
        string_val: "\346\256\213"
        string_val: "\345\212\261"
        string_val: "\347\264\240"
        string_val: "\346\210\222"
        string_val: "\345\210\227"
        string_val: "\347\245\245"
        string_val: "\345\257\202"
        string_val: "\350\217\217"
        string_val: "\345\224\224"
        string_val: "\345\222\263"
        string_val: "\345\256\243"
        string_val: "\344\275\263"
        string_val: "\347\235\233"
        string_val: "\346\236\220"
        string_val: "\350\213\227"
        string_val: "\346\271\277"
        string_val: "\351\207\216"
        string_val: "\345\260\276"
        string_val: "\351\242\227"
        string_val: "\351\243\230"
        string_val: "\351\270\255"
        string_val: "\351\271\217"
        string_val: "\345\260\212"
        string_val: "\351\203\212"
        string_val: "\347\221\236"
        string_val: "\357\274\234"
        string_val: "\347\263\237"
        string_val: "\347\213\274"
        string_val: "\347\210\206"
        string_val: "\347\273\252"
        string_val: "\351\232\220"
        string_val: "\346\213\220"
        string_val: "\351\251\276"
        string_val: "\345\221\246"
        string_val: "\350\257\221"
        string_val: "\347\262\245"
        string_val: "\351\233\205"
        string_val: "\345\222\224"
        string_val: "\347\247\260"
        string_val: "\347\262\275"
        string_val: "\346\234\265"
        string_val: "\345\260\201"
        string_val: "\345\233\272"
        string_val: "\345\256\207"
        string_val: "\344\270\235"
        string_val: "\347\216\207"
        string_val: "\346\262\237"
        string_val: "\346\205\214"
        string_val: "\346\272\203"
        string_val: "\346\200\226"
        string_val: "\350\276\205"
        string_val: "\345\263\260"
        string_val: "\345\273\266"
        string_val: "\345\242\203"
        string_val: "\347\273\243"
        string_val: "\346\210\232"
        string_val: "\347\214\256"
        string_val: "\346\235\260"
        string_val: "\344\276\204"
        string_val: "\345\257\236"
        string_val: "\350\236\215"
        string_val: "\347\224\230"
        string_val: "\344\275\233"
        string_val: "\350\276\206"
        string_val: "\345\225\247"
        string_val: "\350\220\250"
        string_val: "\350\217\262"
        string_val: "\346\225\217"
        string_val: "\345\220\274"
        string_val: "\345\210\270"
        string_val: "\346\273\221"
        string_val: "\350\222\231"
        string_val: "\357\274\240"
        string_val: "\350\257\241"
        string_val: "\345\255\243"
        string_val: "\347\264\253"
        string_val: "\346\213\222"
        string_val: "\346\266\233"
        string_val: "\345\213\277"
        string_val: "\345\245\224"
        string_val: "\345\275\222"
        string_val: "\345\257\270"
        string_val: "\345\242\236"
        string_val: "\345\272\217"
        string_val: "\345\231\266"
        string_val: "\346\267\200"
        string_val: "\345\222\226"
        string_val: "\347\212\257"
        string_val: "\342\206\222"
        string_val: "\345\222\254"
        string_val: "\344\270\221"
        string_val: "\345\274\225"
        string_val: "\350\277\205"
        string_val: "\346\203\212"
        string_val: "\346\222\236"
        string_val: "\345\210\272"
        string_val: "\345\207\241"
        string_val: "\346\215\217"
        string_val: "\345\261\210"
        string_val: "\351\262\234"
        string_val: "\345\207\244"
        string_val: "\346\210\264"
        string_val: "\350\243\271"
        string_val: "\351\274\240"
        string_val: "\351\223\203"
        string_val: "\345\215\261"
        string_val: "\347\247\201"
        string_val: "\344\274\264"
        string_val: "\345\225\203"
        string_val: "\346\221\204"
        string_val: "\351\274\223"
        string_val: "\344\270\262"
        string_val: "\350\205\260"
        string_val: "\350\201\230"
        string_val: "\346\226\214"
        string_val: "\346\254\247"
        string_val: "\350\270\252"
        string_val: "\350\265\236"
        string_val: "\351\200\227"
        string_val: "\351\233\204"
        string_val: "\350\221\261"
        string_val: "\351\224\246"
        string_val: "0"
        string_val: "\345\246\231"
        string_val: "\344\270\271"
        string_val: "\346\216\242"
        string_val: "\346\214\232"
        string_val: "\345\235\212"
        string_val: "\351\231\206"
        string_val: "\346\230\217"
        string_val: "\345\205\270"
        string_val: "\346\225\262"
        string_val: "\345\257\273"
        string_val: "\346\240\252"
        string_val: "\345\210\231"
        string_val: "\345\236\253"
        string_val: "\351\224\241"
        string_val: "\346\213\254"
        string_val: "\346\212\274"
        string_val: "\351\230\205"
        string_val: "\347\236\214"
        string_val: "\346\262\273"
        string_val: "\345\217\262"
        string_val: "\345\201\217"
        string_val: "\350\264\261"
        string_val: "\350\200\275"
        string_val: "\350\257\227"
        string_val: "\346\270\264"
        string_val: "\347\210\252"
        string_val: "\346\212\204"
        string_val: "\345\253\251"
        string_val: "\346\221\270"
        string_val: "\345\247\223"
        string_val: "\345\246\206"
        string_val: "\344\270\260"
        string_val: "\347\236\205"
        string_val: "\345\244\270"
        string_val: "\350\220\214"
        string_val: "\350\260\213"
        string_val: "\350\241\241"
        string_val: "\346\221\206"
        string_val: "\345\260\274"
        string_val: "\347\274\251"
        string_val: "\346\211\216"
        string_val: "\350\205\220"
        string_val: "\345\262\227"
        string_val: "\350\264\253"
        string_val: "\345\270\255"
        string_val: "\347\233\276"
        string_val: "\346\237\224"
        string_val: "\347\275\252"
        string_val: "\346\211\256"
        string_val: "\345\222\250"
        string_val: "\350\277\253"
        string_val: "\345\200\251"
        string_val: "\345\256\230"
        string_val: "\351\237\251"
        string_val: "\345\242\231"
        string_val: "\347\201\276"
        string_val: "\350\256\277"
        string_val: "\350\271\255"
        string_val: "\347\273\222"
        string_val: "\346\201\260"
        string_val: "\347\236\247"
        string_val: "\350\277\201"
        string_val: "\351\201\245"
        string_val: "\345\227\246"
        string_val: "\346\227\217"
        string_val: "\345\264\251"
        string_val: "\347\271\201"
        string_val: "\345\261\211"
        string_val: "\347\246\201"
        string_val: "\345\207\255"
        string_val: "\351\206\211"
        string_val: "\345\217\271"
        string_val: "\347\275\232"
        string_val: "\346\213\206"
        string_val: "\345\245\210"
        string_val: "\345\261\241"
        string_val: "`"
        string_val: "\342\230\206"
        string_val: "\351\246\222"
        string_val: "\346\224\222"
        string_val: "\344\271\222"
        string_val: "\347\233\233"
        string_val: "\344\271\203"
        string_val: "\347\245\270"
        string_val: "\351\202\200"
        string_val: "\347\216\262"
        string_val: "\346\264\252"
        string_val: "\344\271\223"
        string_val: "\345\246\222"
        string_val: "\351\255\224"
        string_val: "\346\273\213"
        string_val: "\347\224\262"
        string_val: "\344\276\247"
        string_val: "&"
        string_val: "\345\227\267"
        string_val: "\346\235\203"
        string_val: "\346\221\224"
        string_val: "\347\255\226"
        string_val: "\351\252\250"
        string_val: "\351\231\214"
        string_val: "\350\216\216"
        string_val: "\346\266\262"
        string_val: "\347\201\255"
        string_val: "\350\205\273"
        string_val: "\357\274\277"
        string_val: "\345\235\233"
        string_val: "$"
        string_val: "\345\253\211"
        string_val: "\345\252\222"
        string_val: "\346\224\273"
        string_val: "\345\246\273"
        string_val: "\'"
        string_val: "\347\227\264"
        string_val: "\345\217\244"
        string_val: "\346\214\250"
        string_val: "\345\217\266"
        string_val: "\350\202\244"
        string_val: "\346\275\234"
        string_val: "\347\202\216"
        string_val: "\345\225\267"
        string_val: "\345\223\222"
        string_val: "\351\225\207"
        string_val: "\346\200\222"
        string_val: "\346\263\211"
        string_val: "\345\220\212"
        string_val: "\350\267\235"
        string_val: "\343\200\220"
        string_val: "\346\221\251"
        string_val: "\343\200\221"
        string_val: "\346\202\204"
        string_val: "\351\235\251"
        string_val: "\345\220\257"
        string_val: "\345\257\277"
        string_val: "\351\201\227"
        string_val: "\345\230\216"
        string_val: "\345\211\202"
        string_val: "\350\257\272"
        string_val: "\346\265\256"
        string_val: "\347\242\214"
        string_val: "\346\205\210"
        string_val: "\350\242\226"
        string_val: "\345\225\244"
        string_val: "\347\243\201"
        string_val: "\350\202\277"
        string_val: "\351\200\217"
        string_val: "\350\202\240"
        string_val: "\347\272\267"
        string_val: "\345\215\246"
        string_val: "\351\235\223"
        string_val: "\345\212\253"
        string_val: "\346\204\247"
        string_val: "\346\276\263"
        string_val: "\345\260\204"
        string_val: "\346\205\247"
        string_val: "\345\202\215"
        string_val: "\346\211\207"
        string_val: "\350\234\234"
        string_val: "\346\237\277"
        string_val: "\345\223\200"
        string_val: "\345\244\256"
        string_val: "\350\224\241"
        string_val: "\345\213\276"
        string_val: "\350\220\235"
        string_val: "\346\243\215"
        string_val: "\346\237\223"
        string_val: "\346\254\262"
        string_val: "\346\211\254"
        string_val: "\345\253\201"
        string_val: "\350\216\262"
        string_val: "\345\222\222"
        string_val: "\347\255\271"
        string_val: "\351\272\246"
        string_val: "\350\260\216"
        string_val: "\345\224\240"
        string_val: "\345\270\235"
        string_val: "\347\275\242"
        string_val: "\351\223\276"
        string_val: "\350\204\276"
        string_val: "\350\204\226"
        string_val: "\350\242\234"
        string_val: "\347\204\246"
        string_val: "\346\267\273"
        string_val: "\346\251\231"
        string_val: "\345\210\200"
        string_val: "\346\221\207"
        string_val: "\345\277\214"
        string_val: "\350\213\271"
        string_val: "\350\265\242"
        string_val: "\350\266\201"
        string_val: "\347\237\233"
        string_val: "\351\202\252"
        string_val: "\344\276\243"
        string_val: "\351\262\201"
        string_val: "\344\274\257"
        string_val: "\347\217\212"
        string_val: "\347\250\200"
        string_val: "\346\221\212"
        string_val: "\351\234\236"
        string_val: "\350\216\261"
        string_val: "\345\274\261"
        string_val: "\347\247\222"
        string_val: "\345\261\212"
        string_val: "\350\277\271"
        string_val: "\346\211\201"
        string_val: "\345\225\241"
        string_val: "\347\240\270"
        string_val: "\344\273\215"
        string_val: "\347\246\275"
        string_val: "\350\277\252"
        string_val: "\347\226\262"
        string_val: "\350\212\254"
        string_val: "\346\213\250"
        string_val: "\345\216\242"
        string_val: "\345\244\225"
        string_val: "\346\233\262"
        string_val: "\346\231\203"
        string_val: "\350\264\270"
        string_val: "\346\244\222"
        string_val: "\346\233\246"
        string_val: "\345\205\275"
        string_val: "\350\211\260"
        string_val: "\345\205\265"
        string_val: "\344\274\201"
        string_val: "\351\222\223"
        string_val: "\350\241\267"
        string_val: "\344\274\217"
        string_val: "\345\200\215"
        string_val: "\345\216\250"
        string_val: "\351\271\260"
        string_val: "\345\206\240"
        string_val: "\350\211\276"
        string_val: "\345\236\203"
        string_val: "\345\210\256"
        string_val: "\350\272\262"
        string_val: "\351\207\207"
        string_val: "\350\276\210"
        string_val: "\345\224\244"
        string_val: "\347\226\232"
        string_val: "\346\262\202"
        string_val: "\345\237\213"
        string_val: "\346\216\217"
        string_val: "\351\242\240"
        string_val: "\350\210\271"
        string_val: "\351\201\265"
        string_val: "\357\274\206"
        string_val: "\345\270\226"
        string_val: "\350\236\202"
        string_val: "\345\220\270"
        string_val: "\350\247\246"
        string_val: "\350\232\212"
        string_val: "]"
        string_val: "\347\210\271"
        string_val: "\350\226\204"
        string_val: "\345\215\223"
        string_val: "\345\230\211"
        string_val: "\350\203\200"
        string_val: "\346\227\272"
        string_val: "\343\201\253"
        string_val: "\351\233\201"
        string_val: "["
        string_val: "\346\211\255"
        string_val: "\350\264\244"
        string_val: "\346\227\246"
        string_val: "\350\271\246"
        string_val: "\350\265\217"
        string_val: "\346\203\246"
        string_val: "\345\260\230"
        string_val: "\357\270\277"
        string_val: "\346\217\222"
        string_val: "\350\270\242"
        string_val: "\350\276\211"
        string_val: "\344\273\205"
        string_val: "\346\230\212"
        string_val: "\346\263\245"
        string_val: "\345\245\270"
        string_val: "\351\227\275"
        string_val: "\350\265\224"
        string_val: "\345\256\253"
        string_val: "\345\225\260"
        string_val: "\351\200\256"
        string_val: "\344\276\257"
        string_val: "\342\200\230"
        string_val: "\346\214\257"
        string_val: "\345\260\272"
        string_val: "\345\260\244"
        string_val: "\351\201\255"
        string_val: "\350\270\251"
        string_val: "\346\260\233"
        string_val: "\345\205\226"
        string_val: "\344\270\276"
        string_val: "\351\236\255"
        string_val: "\350\276\234"
        string_val: "\347\203\253"
        string_val: "\344\277\212"
        string_val: "\346\215\241"
        string_val: "\347\202\270"
        string_val: "\345\244\271"
        string_val: "\347\250\216"
        string_val: "\350\237\221"
        string_val: "\346\206\276"
        string_val: "\346\220\201"
        string_val: "\345\274\271"
        string_val: "\350\214\253"
        string_val: "\346\201\222"
        string_val: "\345\235\237"
        string_val: "\347\274\240"
        string_val: "\350\232\201"
        string_val: "\351\230\266"
        string_val: "\316\251"
        string_val: "\346\236\204"
        string_val: "\345\250\261"
        string_val: "\350\203\206"
        string_val: "\345\250\207"
        string_val: "\346\272\252"
        string_val: "\346\217\217"
        string_val: "\346\273\251"
        string_val: "\351\231\265"
        string_val: "\345\211\257"
        string_val: "\346\265\206"
        string_val: "\350\223\211"
        string_val: "\350\260\267"
        string_val: "\347\217\240"
        string_val: "\346\211\247"
        string_val: "\345\206\244"
        string_val: "\345\234\276"
        string_val: "\346\236\211"
        string_val: "\345\242\250"
        string_val: "\345\224\220"
        string_val: "\345\271\272"
        string_val: "\351\205\277"
        string_val: "\346\214\241"
        string_val: "\347\277\205"
        string_val: "\346\243\211"
        string_val: "\347\206\204"
        string_val: "\345\217\254"
        string_val: "\345\271\225"
        string_val: "\345\271\275"
        string_val: "\345\233\247"
        string_val: "\351\274\273"
        string_val: "\350\237\271"
        string_val: "\346\243\256"
        string_val: "\347\224\245"
        string_val: "\351\202\273"
        string_val: "\345\242\223"
        string_val: "\351\227\257"
        string_val: "\350\200\227"
        string_val: "\346\267\213"
        string_val: "\346\222\244"
        string_val: "\345\276\201"
        string_val: "\351\245\260"
        string_val: "\350\247\205"
        string_val: "\346\214\226"
        string_val: "\345\223\262"
        string_val: "\345\241\224"
        string_val: "\345\212\277"
        string_val: "\346\217\211"
        string_val: "\350\206\234"
        string_val: "\350\215\243"
        string_val: "\346\256\212"
        string_val: "\350\221\243"
        string_val: "\346\265\264"
        string_val: "\347\212\271"
        string_val: "\347\233\212"
        string_val: "\345\256\264"
        string_val: "\350\257\205"
        string_val: "\350\276\204"
        string_val: "\345\250\245"
        string_val: "\345\200\276"
        string_val: "\346\261\252"
        string_val: "\345\274\257"
        string_val: "\351\242\220"
        string_val: "\347\275\262"
        string_val: "\345\221\233"
        string_val: "\345\226\265"
        string_val: "\345\270\201"
        string_val: "\346\264\233"
        string_val: "\350\277\260"
        string_val: "\351\234\234"
        string_val: "\350\221\241"
        string_val: "\347\201\277"
        string_val: "\347\262\256"
        string_val: "\347\213\256"
        string_val: "\346\241\266"
        string_val: "\347\255\213"
        string_val: "\346\217\264"
        string_val: "\347\225\245"
        string_val: "\345\275\273"
        string_val: "\351\201\277"
        string_val: "\346\250\252"
        string_val: "\351\255\202"
        string_val: "\345\243\266"
        string_val: "\346\275\215"
        string_val: "\347\224\260"
        string_val: "\351\203\255"
        string_val: "\350\232\202"
        string_val: "\351\271\205"
        string_val: "\346\263\274"
        string_val: "\350\252\223"
        string_val: "\345\270\206"
        string_val: "\351\255\217"
        string_val: "\345\207\204"
        string_val: "\350\260\243"
        string_val: "\344\271\214"
        string_val: "\347\226\217"
        string_val: "\350\220\204"
        string_val: "\350\203\201"
        string_val: "\346\202\215"
        string_val: "\346\233\274"
        string_val: "\347\242\247"
        string_val: "\350\247\210"
        string_val: "\346\202\254"
        string_val: "\346\205\250"
        string_val: "\347\230\276"
        string_val: "\346\220\205"
        string_val: "\346\213\237"
        string_val: "\346\212\226"
        string_val: "\345\255\224"
        string_val: "\345\235\207"
        string_val: "\345\272\234"
        string_val: "\347\272\262"
        string_val: "\347\242\237"
        string_val: "\345\227\275"
        string_val: "\346\263\243"
        string_val: "\345\264\224"
        string_val: "\345\245\211"
        string_val: "\347\234\211"
        string_val: "\346\202\246"
        string_val: "\346\241\202"
        string_val: "\346\261\241"
        string_val: "\345\226\211"
        string_val: "\350\210\214"
        string_val: "\347\242\216"
        string_val: "\345\257\250"
        string_val: "\350\260\220"
        string_val: "\346\216\210"
        string_val: "\345\246\226"
        string_val: "\346\266\257"
        string_val: "\347\214\264"
        string_val: "\351\234\270"
        string_val: "\346\215\237"
        string_val: "\350\220\247"
        string_val: "\345\257\237"
        string_val: "\346\243\265"
        string_val: "\345\246\245"
        string_val: "\345\257\223"
        string_val: "\350\266\264"
        string_val: "\346\225\267"
        string_val: "\351\237\246"
        string_val: "\351\223\255"
        string_val: "\345\251\247"
        string_val: "\346\227\227"
        string_val: "\350\277\242"
        string_val: "\346\227\254"
        string_val: "\347\201\214"
        string_val: "\350\200\200"
        string_val: "\351\202\223"
        string_val: "\346\271\230"
        string_val: "\347\237\277"
        string_val: "\347\262\222"
        string_val: "\347\243\212"
        string_val: "\345\201\277"
        string_val: "\317\200"
        string_val: "\346\247\275"
        string_val: "\345\222\225"
        string_val: "\351\211\264"
        string_val: "\351\245\256"
        string_val: "\350\257\270"
        string_val: "\346\213\267"
        string_val: "\346\255\252"
        string_val: "\351\224\213"
        string_val: "\346\265\221"
        string_val: "\345\213\211"
        string_val: "\346\243\225"
        string_val: "\346\236\257"
        string_val: "\350\216\236"
        string_val: "\316\226"
        string_val: "}"
        string_val: "\347\245\210"
        string_val: "\351\202\271"
        string_val: "\344\277\227"
        string_val: "\345\210\244"
        string_val: "\346\212\271"
        string_val: "\347\232\207"
        string_val: "\347\274\270"
        string_val: "\351\246\210"
        string_val: "\345\205\206"
        string_val: "\350\222\270"
        string_val: "\346\206\213"
        string_val: "\347\233\257"
        string_val: "\350\276\260"
        string_val: "\350\231\276"
        string_val: "\350\264\267"
        string_val: "\346\215\211"
        string_val: "\357\275\234"
        string_val: "\346\217\255"
        string_val: "\347\275\251"
        string_val: "\347\255\221"
        string_val: "\346\233\271"
        string_val: "\356\200\204"
        string_val: "\347\233\262"
        string_val: "\344\275\221"
        string_val: "\347\235\201"
        string_val: "\347\205\262"
        string_val: "\350\234\227"
        string_val: "\357\274\202"
        string_val: "\345\275\254"
        string_val: "\344\271\263"
        string_val: "\346\265\223"
        string_val: "\350\241\253"
        string_val: "\351\255\205"
        string_val: "\350\202\251"
        string_val: "\345\260\264"
        string_val: "\346\220\223"
        string_val: "\350\276\220"
        string_val: "\351\273\217"
        string_val: "\347\212\200"
        string_val: "\346\213\246"
        string_val: "\357\271\201"
        string_val: "\345\215\277"
        string_val: "\347\224\232"
        string_val: "\345\276\213"
        string_val: "\346\242\201"
        string_val: "\345\247\232"
        string_val: "\346\214\245"
        string_val: "\302\244"
        string_val: "\346\232\247"
        string_val: "\350\214\202"
        string_val: "\347\253\271"
        string_val: "\347\262\230"
        string_val: "\350\261\253"
        string_val: "\347\205\216"
        string_val: "\345\275\252"
        string_val: "\350\217\240"
        string_val: "\350\203\270"
        string_val: "\345\207\266"
        string_val: "\346\235\234"
        string_val: "{"
        string_val: "\345\207\257"
        string_val: "\350\243\231"
        string_val: "\345\211\262"
        string_val: "\345\215\270"
        string_val: "\345\245\217"
        string_val: "\350\257\200"
        string_val: "\345\205\201"
        string_val: "\344\273\207"
        string_val: "\357\277\245"
        string_val: "\346\231\266"
        string_val: "\347\202\256"
        string_val: "\345\215\242"
        string_val: "\350\242\255"
        string_val: "\345\255\244"
        string_val: "\345\230\230"
        string_val: "\346\230\247"
        string_val: "\346\216\200"
        string_val: "\345\257\272"
        string_val: "\346\220\272"
        string_val: "\346\202\237"
        string_val: "\350\264\274"
        string_val: "\346\200\241"
        string_val: "\346\232\227"
        string_val: "\350\225\276"
        string_val: "\347\227\222"
        string_val: "\347\236\254"
        string_val: "\347\254\246"
        string_val: "\346\212\254"
        string_val: "\346\213\223"
        string_val: "\345\250\266"
        string_val: "\345\277\240"
        string_val: "\350\267\265"
        string_val: "\346\226\213"
        string_val: "\347\275\220"
        string_val: "\347\212\222"
        string_val: "\344\275\251"
        string_val: "\351\224\220"
        string_val: "\346\275\256"
        string_val: "\357\274\205"
        string_val: "\350\260\246"
        string_val: "\345\260\232"
        string_val: "\345\205\234"
        string_val: "\351\237\266"
        string_val: "\351\222\273"
        string_val: "\346\201\242"
        string_val: "\346\244\215"
        string_val: "\347\222\203"
        string_val: "\345\273\212"
        string_val: "\347\220\242"
        string_val: "\347\227\230"
        string_val: "\351\251\264"
        string_val: "\357\274\213"
        string_val: "\346\265\231"
        string_val: "\350\243\225"
        string_val: "\347\216\273"
        string_val: "\345\276\222"
        string_val: "\347\252\230"
        string_val: "\351\233\276"
        string_val: "\345\217\211"
        string_val: "\346\227\267"
        string_val: "\345\271\273"
        string_val: "\350\241\215"
        string_val: "\350\265\213"
        string_val: "\350\207\273"
        string_val: "\346\225\236"
        string_val: "\345\260\254"
        string_val: "\351\203\216"
        string_val: "\347\233\206"
        string_val: "\351\230\226"
        string_val: "\345\223\251"
        string_val: "\346\241\220"
        string_val: "\344\277\257"
        string_val: "\346\272\242"
        string_val: "\345\252\232"
        string_val: "\351\245\265"
        string_val: "\350\256\266"
        string_val: "\344\277\203"
        string_val: "\350\206\217"
        string_val: "\345\207\235"
        string_val: "\346\242\260"
        string_val: "\346\201\201"
        string_val: "\345\202\250"
        string_val: "\350\257\212"
        string_val: "\346\257\257"
        string_val: "\347\233\227"
        string_val: "\346\203\260"
        string_val: "\346\216\214"
        string_val: "\347\245\267"
        string_val: "\347\275\225"
        string_val: "\346\270\241"
        string_val: "\347\255\235"
        string_val: "\350\226\207"
        string_val: "\350\264\252"
        string_val: "\347\222\220"
        string_val: "\344\276\240"
        string_val: "\350\266\213"
        string_val: "\346\267\214"
        string_val: "\350\261\252"
        string_val: "\346\263\204"
        string_val: "\346\221\247"
        string_val: "\346\236\225"
        string_val: "\347\203\233"
        string_val: "\350\203\263"
        string_val: "\350\266\265"
        string_val: "\351\270\246"
        string_val: "\344\274\246"
        string_val: "\347\227\225"
        string_val: "\347\213\261"
        string_val: "\346\263\233"
        string_val: "\345\262\270"
        string_val: "\350\255\246"
        string_val: "\346\215\267"
        string_val: "\350\222\275"
        string_val: "\346\214\252"
        string_val: "\345\275\274"
        string_val: "\345\277\221"
        string_val: "\346\204\210"
        string_val: "\350\275\250"
        string_val: "\346\212\253"
        string_val: "\350\216\271"
        string_val: "\350\206\212"
        string_val: "\346\206\250"
        string_val: "\345\255\225"
        string_val: "\347\206\231"
        string_val: "\345\231\251"
        string_val: "\350\264\241"
        string_val: "\346\212\227"
        string_val: "\345\235\221"
        string_val: "\345\222\231"
        string_val: "\346\212\221"
        string_val: "\346\265\207"
        string_val: "\351\200\215"
        string_val: "\345\260\270"
        string_val: "\346\226\275"
        string_val: "\347\226\253"
        string_val: "\344\271\234"
        string_val: "\347\273\256"
        string_val: "\350\203\216"
        string_val: "\346\240\210"
        string_val: "\346\213\216"
        string_val: "\347\245\226"
        string_val: "\350\236\203"
        string_val: "\345\223\227"
        string_val: "\351\255\204"
        string_val: "\351\273\216"
        string_val: "\350\221\233"
        string_val: "\344\273\250"
        string_val: "\350\215\267"
        string_val: "\347\254\233"
        string_val: "\345\225\265"
        string_val: "\351\270\275"
        string_val: "\346\271\276"
        string_val: "\345\237\203"
        string_val: "\347\230\253"
        string_val: "\350\215\241"
        string_val: "\347\233\217"
        string_val: "\350\265\214"
        string_val: "\345\205\256"
        string_val: "\345\274\245"
        string_val: "\346\266\265"
        string_val: "\347\225\205"
        string_val: "\346\251\230"
        string_val: "\346\273\245"
        string_val: "\345\255\235"
        string_val: "\351\205\267"
        string_val: "\346\214\253"
        string_val: "\350\231\271"
        string_val: "\347\224\251"
        string_val: "\345\267\242"
        string_val: "\347\207\245"
        string_val: "\350\241\254"
        string_val: "\347\277\230"
        string_val: "\350\226\257"
        string_val: "\346\243\230"
        string_val: "\344\276\233"
        string_val: "\345\277\220"
        string_val: "\346\203\253"
        string_val: "\345\263\250"
        string_val: "\346\211\222"
        string_val: "\345\274\212"
        string_val: "\345\250\205"
        string_val: "\345\262\202"
        string_val: "\351\206\207"
        string_val: "\346\267\221"
        string_val: "\351\271\277"
        string_val: "\345\234\263"
        string_val: "\345\212\243"
        string_val: "\347\273\230"
        string_val: "\350\206\200"
        string_val: "\347\276\236"
        string_val: "\346\263\212"
        string_val: "\351\246\213"
        string_val: "\350\261\201"
        string_val: "\345\262\251"
        string_val: "\346\212\240"
        string_val: "\347\213\270"
        string_val: "\345\207\263"
        string_val: "\347\211\241"
        string_val: "\351\235\264"
        string_val: "\345\212\235"
        string_val: "\345\255\275"
        string_val: "\347\220\252"
        string_val: "\345\275\255"
        string_val: "\347\274\244"
        string_val: "\344\270\210"
        string_val: "\346\215\243"
        string_val: "\346\265\217"
        string_val: "\351\221\253"
        string_val: "\345\215\221"
        string_val: "\350\212\222"
        string_val: "\351\201\233"
        string_val: "\347\221\260"
        string_val: "\346\215\220"
        string_val: "\346\274\261"
        string_val: "\345\243\256"
        string_val: "\346\257\205"
        string_val: "\345\211\221"
        string_val: "\350\213\221"
        string_val: "\345\245\264"
        string_val: "\350\202\214"
        string_val: "\344\273\223"
        string_val: "\350\260\212"
        string_val: "\350\257\210"
        string_val: "\351\232\234"
        string_val: "\350\205\271"
        string_val: "\344\274\275"
        string_val: "\345\264\255"
        string_val: "\350\204\211"
        string_val: "\347\216\256"
        string_val: "\351\200\270"
        string_val: "\346\226\245"
        string_val: "\350\203\236"
        string_val: "\346\260\223"
        string_val: "\346\227\255"
        string_val: "\346\246\234"
        string_val: "\345\220\250"
        string_val: "\345\260\271"
        string_val: "\347\221\234"
        string_val: "\350\233\212"
        string_val: "\347\227\207"
        string_val: "\345\222\232"
        string_val: "\344\273\260"
        string_val: "\346\274\217"
        string_val: "\345\220\253"
        string_val: "\350\202\272"
        string_val: "\345\255\237"
        string_val: "\350\246\206"
        string_val: "\346\200\202"
        string_val: "\345\277\222"
        string_val: "\347\262\227"
        string_val: "\346\205\216"
        string_val: "\346\202\243"
        string_val: "\351\230\234"
        string_val: "\344\273\221"
        string_val: "\345\205\221"
        string_val: "\344\274\252"
        string_val: "\345\256\213"
        string_val: "\351\200\235"
        string_val: "\351\222\242"
        string_val: "\344\273\262"
        string_val: "\347\247\246"
        string_val: "\351\246\250"
        string_val: "\345\226\267"
        string_val: "\350\267\203"
        string_val: "\347\220\246"
        string_val: "\351\241\275"
        string_val: "\346\242\227"
        string_val: "\350\216\206"
        string_val: "\350\271\213"
        string_val: "\346\237\217"
        string_val: "\345\237\237"
        string_val: "\346\227\261"
        string_val: "\345\243\263"
        string_val: "\351\206\264"
        string_val: "\347\211\242"
        string_val: "\343\203\274"
        string_val: "\346\234\246"
        string_val: "\347\277\201"
        string_val: "\345\270\275"
        string_val: "\350\203\247"
        string_val: "\345\226\261"
        string_val: "\350\224\273"
        string_val: "\350\236\272"
        string_val: "\345\226\207"
        string_val: "\350\214\205"
        string_val: "\346\226\237"
        string_val: "\346\264\236"
        string_val: "\345\250\237"
        string_val: "\347\204\211"
        string_val: "\350\277\255"
        string_val: "\347\227\260"
        string_val: "\347\240\226"
        string_val: "\345\247\277"
        string_val: "\345\225\270"
        string_val: "\345\272\236"
        string_val: "\345\241\221"
        string_val: "\347\230\244"
        string_val: "\346\222\274"
        string_val: "\346\236\253"
        string_val: "\346\266\256"
        string_val: "\345\275\246"
        string_val: "\344\274\215"
        string_val: "\347\232\202"
        string_val: "\346\236\232"
        string_val: "\351\242\210"
        string_val: "\350\202\213"
        string_val: "\345\215\234"
        string_val: "\357\274\230"
        string_val: "\344\272\225"
        string_val: "\347\226\206"
        string_val: "\350\207\202"
        string_val: "\346\204\244"
        string_val: "\345\265\251"
        string_val: "\346\237\261"
        string_val: "\350\231\220"
        string_val: "\357\275\233"
        string_val: "\350\200\277"
        string_val: "\351\234\271"
        string_val: "\346\242\263"
        string_val: "\350\212\235"
        string_val: "\347\216\233"
        string_val: "\347\255\222"
        string_val: "\351\276\204"
        string_val: "\347\272\244"
        string_val: "\350\264\254"
        string_val: "\347\232\261"
        string_val: "\351\233\222"
        string_val: "\346\217\215"
        string_val: "\350\243\202"
        string_val: "\347\263\227"
        string_val: "\345\240\225"
        string_val: "\350\204\206"
        string_val: "\351\246\212"
        string_val: "\345\223\211"
        string_val: "\347\202\253"
        string_val: "\344\273\201"
        string_val: "\346\262\245"
        string_val: "\345\260\277"
        string_val: "\346\262\233"
        string_val: "\350\265\240"
        string_val: "\345\230\262"
        string_val: "\350\215\206"
        string_val: "\346\203\255"
        string_val: "\346\233\231"
        string_val: "\351\245\245"
        string_val: "\346\242\250"
        string_val: "\350\220\215"
        string_val: "\345\222\270"
        string_val: "\345\262\232"
        string_val: "\345\241\230"
        string_val: "\346\276\204"
        string_val: "\344\274\272"
        string_val: "\346\212\265"
        string_val: "\346\235\226"
        string_val: "\351\252\244"
        string_val: "\350\202\235"
        string_val: "\344\272\250"
        string_val: "\351\202\221"
        string_val: "\345\231\227"
        string_val: "\345\232\243"
        string_val: "\351\231\225"
        string_val: "\347\204\212"
        string_val: "\344\276\210"
        string_val: "\345\247\273"
        string_val: "\347\276\257"
        string_val: "\345\202\262"
        string_val: "\351\232\231"
        string_val: "\350\277\235"
        string_val: "\351\224\244"
        string_val: "\347\205\214"
        string_val: "\345\245\216"
        string_val: "\346\215\236"
        string_val: "\345\200\246"
        string_val: "\346\240\217"
        string_val: "\346\203\251"
        string_val: "\347\262\221"
        string_val: "\345\262\255"
        string_val: "\345\270\230"
        string_val: "\346\262\220"
        string_val: "\345\200\272"
        string_val: "\350\221\227"
        string_val: "\345\233\212"
        string_val: "\350\271\262"
        string_val: "\347\232\206"
        string_val: "\345\213\237"
        string_val: "\344\270\230"
        string_val: "\351\205\214"
        string_val: "\347\211\247"
        string_val: "\347\277\240"
        string_val: "\346\201\271"
        string_val: "\347\212\254"
        string_val: "\350\275\251"
        string_val: "\345\274\246"
        string_val: "\344\274\212"
        string_val: "\347\221\266"
        string_val: "\344\273\227"
        string_val: "\346\266\251"
        string_val: "\350\224\254"
        string_val: "\345\264\264"
        string_val: "\346\264\222"
        string_val: "\350\240\242"
        string_val: "\350\243\270"
        string_val: "\350\202\276"
        string_val: "\345\267\276"
        string_val: "\345\221\210"
        string_val: "\345\247\254"
        string_val: "\345\236\256"
        string_val: "\344\275\237"
        string_val: "\345\244\272"
        string_val: "\346\241\206"
        string_val: "\346\211\266"
        string_val: "\350\220\246"
        string_val: "\347\214\251"
        string_val: "\347\276\271"
        string_val: "\347\240\202"
        string_val: "\350\267\250"
        string_val: "\345\212\210"
        string_val: "\345\210\221"
        string_val: "\347\203\254"
        string_val: "\346\216\220"
        string_val: "\346\275\255"
        string_val: "\347\272\254"
        string_val: "\342\206\231"
        string_val: "\350\267\252"
        string_val: "\346\212\250"
        string_val: "\345\231\216"
        string_val: "\347\222\250"
        string_val: "\345\217\231"
        string_val: "\357\274\227"
        string_val: "\350\212\275"
        string_val: "\347\235\246"
        string_val: "\346\212\233"
        string_val: "\345\214\271"
        string_val: "\347\237\234"
        string_val: "\351\200\220"
        string_val: "\346\230\265"
        string_val: "\345\235\267"
        string_val: "\346\260\257"
        string_val: "\351\233\257"
        string_val: "\346\262\253"
        string_val: "\345\256\240"
        string_val: "\351\242\226"
        string_val: "\347\241\200"
        string_val: "\351\202\265"
        string_val: "\347\224\270"
        string_val: "\346\215\247"
        string_val: "\345\267\250"
        string_val: "\347\213\210"
        string_val: "\346\256\241"
        string_val: "\346\231\276"
        string_val: "\351\201\256"
        string_val: "\350\267\244"
        string_val: "\346\222\202"
        string_val: "\350\244\202"
        string_val: "\346\222\225"
        string_val: "\346\236\252"
        string_val: "\346\267\253"
        string_val: "\345\256\260"
        string_val: "\345\217\251"
        string_val: "\344\276\203"
        string_val: "\345\261\277"
        string_val: "\344\273\277"
        string_val: "\345\235\216"
        string_val: "\347\220\274"
        string_val: "\344\276\265"
        string_val: "\350\212\246"
        string_val: "\345\247\206"
        string_val: "\351\200\236"
        string_val: "\346\270\272"
        string_val: "\350\252\211"
        string_val: "\350\257\240"
        string_val: "\344\272\246"
        string_val: "\345\267\215"
        string_val: "\346\203\247"
        string_val: "\350\275\260"
        string_val: "\350\264\276"
        string_val: "\345\245\242"
        string_val: "\342\200\231"
        string_val: "\346\226\234"
        string_val: "\347\273\275"
        string_val: "\346\275\264"
        string_val: "\345\220\261"
        string_val: "\350\234\202"
        string_val: "\350\225\211"
        string_val: "\351\243\231"
        string_val: "\342\224\200"
        string_val: "\351\227\265"
        string_val: "\351\227\272"
        string_val: "\346\241\221"
        string_val: "\345\207\260"
        string_val: "\351\222\231"
        string_val: "\346\201\277"
        string_val: "\357\275\235"
        string_val: "\351\206\214"
        string_val: "\342\206\227"
        string_val: "\351\230\273"
        string_val: "\347\262\261"
        string_val: "\347\262\271"
        string_val: "\346\251\261"
        string_val: "\345\240\252"
        string_val: "\344\274\270"
        string_val: "\346\211\221"
        string_val: "\345\215\244"
        string_val: "\347\274\205"
        string_val: "\347\232\216"
        string_val: "\350\241\260"
        string_val: "\346\263\214"
        string_val: "\351\231\267"
        string_val: "\347\236\252"
        string_val: "\345\260\226"
        string_val: "\350\233\207"
        string_val: "\346\236\243"
        string_val: "\345\246\250"
        string_val: "\345\256\217"
        string_val: "\350\202\206"
        string_val: "\351\252\204"
        string_val: "\344\271\224"
        string_val: "\346\235\211"
        string_val: "\350\221\253"
        string_val: "\347\237\256"
        string_val: "\346\257\201"
        string_val: "\345\262\263"
        string_val: "\347\273\260"
        string_val: "\345\264\207"
        string_val: "\350\257\263"
        string_val: "\350\201\206"
        string_val: "\351\270\277"
        string_val: "\350\204\217"
        string_val: "\346\225\246"
        string_val: "\350\200\270"
        string_val: "\347\273\265"
        string_val: "\344\273\252"
        string_val: "\347\233\274"
        string_val: "\347\223\243"
        string_val: "\346\233\260"
        string_val: "\344\275\254"
        string_val: "\350\271\204"
        string_val: "\345\244\267"
        string_val: "\351\206\213"
        string_val: "\351\225\226"
        string_val: "\350\213\215"
        string_val: "\345\224\254"
        string_val: "\345\267\267"
        string_val: "\344\272\241"
        string_val: "\346\231\260"
        string_val: "\350\267\214"
        string_val: "\\"
        string_val: "\347\226\241"
        string_val: "\347\213\220"
        string_val: "\351\202\257"
        string_val: "\350\223\204"
        string_val: "\350\271\210"
        string_val: "\351\275\277"
        string_val: "\346\265\205"
        string_val: "\351\276\232"
        string_val: "\345\200\241"
        string_val: "\347\226\276"
        string_val: "\345\261\245"
        string_val: "\350\265\244"
        string_val: "\346\266\214"
        string_val: "\347\262\244"
        string_val: "\346\270\227"
        string_val: "\345\211\224"
        string_val: "\347\256\253"
        string_val: "\346\216\251"
        string_val: "\345\245\232"
        string_val: "\347\236\222"
        string_val: "\346\247\237"
        string_val: "\346\221\201"
        string_val: "\350\225\264"
        string_val: "\346\220\202"
        string_val: "\347\272\261"
        string_val: "\347\272\265"
        string_val: "\346\263\273"
        string_val: "\351\202\261"
        string_val: "\351\223\233"
        string_val: "\346\262\201"
        string_val: "\350\223\254"
        string_val: "\346\270\244"
        string_val: "\345\256\245"
        string_val: "\350\232\200"
        string_val: "\344\276\217"
        string_val: "\345\271\205"
        string_val: "\346\264\275"
        string_val: "\346\260\260"
        string_val: "\351\230\261"
        string_val: "\350\205\212"
        string_val: "\350\257\253"
        string_val: "\347\225\252"
        string_val: "\346\261\235"
        string_val: "\346\231\217"
        string_val: "\346\216\252"
        string_val: "\345\224\206"
        string_val: "\347\203\231"
        string_val: "\350\232\223"
        string_val: "\345\232\267"
        string_val: "\345\216\204"
        string_val: "\345\220\276"
        string_val: "\347\235\253"
        string_val: "\345\211\245"
        string_val: "\347\252\237"
        string_val: "\351\203\270"
        string_val: "\345\236\222"
        string_val: "\347\227\252"
        string_val: "\350\235\274"
        string_val: "\345\267\241"
        string_val: "\347\252\246"
        string_val: "\345\246\201"
        string_val: "\345\205\271"
        string_val: "\347\205\244"
        string_val: "\347\237\266"
        string_val: "\346\211\233"
        string_val: "\350\213\237"
        string_val: "\346\230\255"
        string_val: "\347\274\264"
        string_val: "\346\271\203"
        string_val: "\351\251\263"
        string_val: "\346\213\214"
        string_val: "\346\276\216"
        string_val: "\351\230\220"
        string_val: "\351\270\243"
        string_val: "\347\273\233"
        string_val: "\351\230\216"
        string_val: "\345\216\230"
        string_val: "\351\242\212"
        string_val: "\351\222\247"
        string_val: "\346\275\242"
        string_val: "\347\214\235"
        string_val: "\347\272\271"
        string_val: "\350\277\210"
        string_val: "\347\211\272"
        string_val: "\351\230\224"
        string_val: "\350\210\265"
        string_val: "\347\211\223"
        string_val: "\346\262\203"
        string_val: "\346\276\247"
        string_val: "\345\220\237"
        string_val: "\350\224\275"
        string_val: "\347\273\221"
        string_val: "\350\206\250"
        string_val: "\346\213\207"
        string_val: "\350\276\250"
        string_val: "\351\205\245"
        string_val: "\351\201\242"
        string_val: "\347\273\263"
        string_val: "\347\274\232"
        string_val: "\351\270\265"
        string_val: "\351\262\215"
        string_val: "\351\235\226"
        string_val: "\351\232\206"
        string_val: "\345\206\207"
        string_val: "\344\277\204"
        string_val: "\346\243\213"
        string_val: "\350\207\247"
        string_val: "\347\226\227"
        string_val: "\346\246\224"
        string_val: "\345\214\241"
        string_val: "\351\223\206"
        string_val: "\345\217\256"
        string_val: "\346\267\204"
        string_val: "\347\226\231"
        string_val: "\346\261\260"
        string_val: "\345\276\275"
        string_val: "\350\264\257"
        string_val: "\351\222\235"
        string_val: "\346\241\251"
        string_val: "\346\273\236"
        string_val: "\345\211\203"
        string_val: "\346\200\277"
        string_val: "\346\265\246"
        string_val: "\351\242\202"
        string_val: "\350\203\272"
        string_val: "\347\255\233"
        string_val: "\346\276\234"
        string_val: "\347\233\237"
        string_val: "\345\225\254"
        string_val: "\346\213\242"
        string_val: "\346\226\251"
        string_val: "\350\225\212"
        string_val: "\351\233\215"
        string_val: "\346\265\270"
        string_val: "\351\222\211"
        string_val: "\350\257\233"
        string_val: "\345\246\203"
        string_val: "\347\207\203"
        string_val: "\350\210\237"
        string_val: "\345\277\261"
        string_val: "\346\225\233"
        string_val: "\345\261\240"
        string_val: "\347\251\227"
        string_val: "\346\243\232"
        string_val: "\350\272\254"
        string_val: "\347\277\237"
        string_val: "\351\222\236"
        string_val: "\351\245\266"
        string_val: "\351\251\256"
        string_val: "\347\237\253"
        string_val: "\350\226\252"
        string_val: "\347\273\212"
        string_val: "\347\202\254"
        string_val: "\346\207\277"
        string_val: "\351\223\234"
        string_val: "\347\274\210"
        string_val: "\345\236\202"
        string_val: "\351\263\226"
        string_val: "\345\250\262"
        string_val: "\346\212\232"
        string_val: "\346\275\207"
        string_val: "\347\242\263"
        string_val: "\351\237\265"
        string_val: "\346\200\205"
        string_val: "\345\232\274"
        string_val: "\347\226\271"
        string_val: "\347\263\257"
        string_val: "\347\243\225"
        string_val: "\346\230\225"
        string_val: "\347\245\201"
        string_val: "\346\205\267"
        string_val: "\350\214\204"
        string_val: "\351\223\205"
        string_val: "\350\216\223"
        string_val: "\346\213\202"
        string_val: "\346\213\257"
        string_val: "\351\242\223"
        string_val: "\351\201\202"
        string_val: "\347\235\207"
        string_val: "\351\224\265"
        string_val: "\345\255\272"
        string_val: "\351\224\245"
        string_val: "\345\222\220"
        string_val: "\351\223\270"
        string_val: "\346\204\225"
        string_val: "\346\273\224"
        string_val: "\347\213\241"
        string_val: "\345\223\221"
        string_val: "\345\257\205"
        string_val: "\345\273\226"
        string_val: "\350\214\265"
        string_val: "\350\264\260"
        string_val: "\351\234\276"
        string_val: "\344\277\261"
        string_val: "\350\265\253"
        string_val: "\351\200\273"
        string_val: "\350\200\231"
        string_val: "\347\224\255"
        string_val: "\345\272\270"
        string_val: "\345\225\252"
        string_val: "\347\245\255"
        string_val: "\351\255\201"
        string_val: "\346\231\201"
        string_val: "\346\265\251"
        string_val: "\347\222\207"
        string_val: "\346\250\250"
        string_val: "\351\237\255"
        string_val: "\346\216\202"
        string_val: "\345\273\211"
        string_val: "\347\230\251"
        string_val: "\350\200\273"
        string_val: "\351\252\217"
        string_val: "\346\242\223"
        string_val: "\345\226\273"
        string_val: "\345\226\263"
        string_val: "\346\225\226"
        string_val: "\345\245\240"
        string_val: "\344\277\255"
        string_val: "\345\240\221"
        string_val: "\346\245\240"
        string_val: "\346\220\265"
        string_val: "\345\232\257"
        string_val: "\345\207\275"
        string_val: "\345\200\232"
        string_val: "\346\264\261"
        string_val: "\346\203\206"
        string_val: "\350\214\247"
        string_val: "\347\253\277"
        string_val: "\347\225\217"
        string_val: "\346\203\230"
        string_val: "\346\215\206"
        string_val: "\346\263\223"
        string_val: "\350\243\263"
        string_val: "\347\252\215"
        string_val: "\344\274\220"
        string_val: "\351\224\260"
        string_val: "\347\277\241"
        string_val: "\350\213\257"
        string_val: "\345\241\214"
        string_val: "\346\256\277"
        string_val: "\347\255\240"
        string_val: "\344\277\236"
        string_val: "\347\214\245"
        string_val: "\346\262\270"
        string_val: "\345\216\245"
        string_val: "\350\221\254"
        string_val: "\344\277\221"
        string_val: "\347\217\202"
        string_val: "\347\236\260"
        string_val: "\346\270\255"
        string_val: "\344\272\210"
        string_val: "\347\234\270"
        string_val: "\350\276\215"
        string_val: "\350\217\214"
        string_val: "\346\201\231"
        string_val: "\345\227\223"
        string_val: "\346\223\205"
        string_val: "\350\233\233"
        string_val: "\346\270\212"
        string_val: "\345\206\211"
        string_val: "\347\240\232"
        string_val: "\346\267\244"
        string_val: "\346\233\263"
        string_val: "\345\254\227"
        string_val: "\345\251\225"
        string_val: "\346\206\247"
        string_val: "\347\254\274"
        string_val: "\347\252\277"
        string_val: "\345\203\232"
        string_val: "\345\227\252"
        string_val: "\350\222\213"
        string_val: "\350\215\222"
        string_val: "\345\247\234"
        string_val: "\346\214\275"
        string_val: "\346\257\231"
        string_val: "\345\235\236"
        string_val: "\345\276\252"
        string_val: "\351\243\232"
        string_val: "\351\205\235"
        string_val: "\346\234\227"
        string_val: "\345\227\256"
        string_val: "\347\274\245"
        string_val: "\351\230\201"
        string_val: "\350\243\201"
        string_val: "\346\266\252"
        string_val: "\345\220\251"
        string_val: "\347\277\274"
        string_val: "\345\207\213"
        string_val: "\346\272\272"
        string_val: "\344\273\265"
        string_val: "\345\201\216"
        string_val: "\347\276\262"
        string_val: "\347\274\235"
        string_val: "\350\222\262"
        string_val: "\351\223\277"
        string_val: "\351\200\242"
        string_val: "\347\220\233"
        string_val: "\345\261\216"
        string_val: "\347\220\220"
        string_val: "\347\274\225"
        string_val: "\347\211\262"
        string_val: "\346\256\226"
        string_val: "\347\257\267"
        string_val: "\350\203\232"
        string_val: "\350\233\216"
        string_val: "\350\202\242"
        string_val: "\347\235\271"
        string_val: "\350\203\266"
        string_val: "\345\267\253"
        string_val: "\347\233\271"
        string_val: "\351\202\213"
        string_val: "\345\217\275"
        string_val: "\346\240\227"
        string_val: "\351\223\256"
        string_val: "\346\262\277"
        string_val: "\350\212\270"
        string_val: "\347\240\215"
        string_val: "\345\251\266"
        string_val: "\351\271\244"
        string_val: "\345\262\224"
        string_val: "\351\276\237"
        string_val: "\346\275\230"
        string_val: "\346\262\252"
        string_val: "\351\263\205"
        string_val: "\347\232\213"
        string_val: "\344\270\270"
        string_val: "\347\202\212"
        string_val: "\350\257\262"
        string_val: "\347\241\253"
        string_val: "\351\223\226"
        string_val: "\345\214\200"
        string_val: "\345\261\214"
        string_val: "\347\265\256"
        string_val: "\345\207\206"
        string_val: "\345\271\274"
        string_val: "\344\270\231"
        string_val: "\347\252\226"
        string_val: "\347\253\243"
        string_val: "\346\212\211"
        string_val: "\345\251\267"
        string_val: "\351\224\214"
        string_val: "\350\265\210"
        string_val: "\351\273\233"
        string_val: "\350\234\230"
        string_val: "\351\224\243"
        string_val: "\346\252\220"
        string_val: "\345\251\252"
        string_val: "\350\234\200"
        string_val: "\346\213\247"
        string_val: "\345\215\205"
        string_val: "\347\242\230"
        string_val: "\345\272\232"
        string_val: "\350\201\202"
        string_val: "\350\260\255"
        string_val: "\350\220\216"
        string_val: "\345\235\244"
        string_val: "\350\222\202"
        string_val: "\346\203\254"
        string_val: "\351\232\247"
        string_val: "\350\212\213"
        string_val: "\346\200\240"
        string_val: "\346\236\235"
        string_val: "\351\231\200"
        string_val: "\346\213\230"
        string_val: "\346\213\231"
        string_val: "\345\242\237"
        string_val: "\351\222\246"
        string_val: "\345\210\201"
        string_val: "\346\236\213"
        string_val: "\346\267\271"
        string_val: "\351\246\205"
        string_val: "\347\276\237"
        string_val: "\346\216\272"
        string_val: "\347\204\260"
        string_val: "\351\251\261"
        string_val: "\346\203\213"
        string_val: "\345\255\254"
        string_val: "\350\213\224"
        string_val: "\347\235\243"
        string_val: "\347\231\253"
        string_val: "\346\273\201"
        string_val: "\351\204\204"
        string_val: "\347\236\204"
        string_val: "\345\246\244"
        string_val: "\345\251\211"
        string_val: "\345\210\212"
        string_val: "\351\233\263"
        string_val: "\346\270\240"
        string_val: "\350\227\225"
        string_val: "\345\235\240"
        string_val: "\346\263\236"
        string_val: "\345\220\235"
        string_val: "\347\256\255"
        string_val: "\346\214\216"
        string_val: "\351\205\254"
        string_val: "\347\223\246"
        string_val: "\346\246\264"
        string_val: "\351\245\257"
        string_val: "\350\206\230"
        string_val: "\350\205\206"
        string_val: "\346\225\214"
        string_val: "\350\234\241"
        string_val: "\347\231\214"
        string_val: "\345\250\204"
        string_val: "\350\205\274"
        string_val: "\346\244\260"
        string_val: "\350\232\257"
        string_val: "\351\203\264"
        string_val: "\345\222\246"
        string_val: "\350\204\202"
        string_val: "\347\252\221"
        string_val: "\346\265\203"
        string_val: "\346\227\213"
        string_val: "\347\220\263"
        string_val: "\350\233\244"
        string_val: "\347\257\221"
        string_val: "\345\230\266"
        string_val: "\351\200\206"
        string_val: "\346\244\216"
        string_val: "\351\233\271"
        string_val: "\346\210\210"
        string_val: "\346\266\205"
        string_val: "\347\250\243"
        string_val: "\345\242\205"
        string_val: "\345\247\243"
        string_val: "\345\221\262"
        string_val: "\345\235\252"
        string_val: "\347\254\213"
        string_val: "\346\255\247"
        string_val: "\351\246\215"
        string_val: "\351\261\277"
        string_val: "\345\214\277"
        string_val: "\347\220\265"
        string_val: "\345\246\204"
        string_val: "\350\216\230"
        string_val: "\350\201\213"
        string_val: "\345\264\226"
        string_val: "\346\237\232"
        string_val: "\346\211\251"
        string_val: "\346\263\265"
        string_val: "\347\220\266"
        string_val: "\346\260\217"
        string_val: "\347\202\257"
        string_val: "\345\230\271"
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
        }
        tensor_content: "\300s\355H@\024\026H\200V\010H\200\340\347G\000\010\245G\200z\221G\200\357\220G\000\201\220G\000|wG\000\211OG\000T\031G\0005\006G\000Z\375F\000\030\353F\0004\326F\000V\315F\000 \314F\000\370\302F\000(\267F\000\272\253F\000\034\243F\000\310\237F\000\264\236F\000\000\215F\000\204cF\000\\DF\000\214=F\000p<F\000\0309F\000\2148F\000t#F\000\320\027F\000\324\020F\000\340\370E\000\320\357E\000X\323E\000\310\270E\000\020\260E\000X\255E\000\350\247E\000\300\244E\000\200\234E\000\250\226E\000`\226E\000\250\215E\000(\206E\000\200\205E\000(\203E\000P\202E\000\320[E\000\320VE\000\300VE\000\260IE\000@?E\00006E\00005E\000p2E\00002E\000@/E\000\300-E\000\240+E\000\300*E\000\260&E\000\260\"E\000\340 E\000 \030E\000 \013E\000\260\005E\0000\005E\000P\003E\0000\003E\000\260\002E\000\200\000E\000\200\365D\000@\362D\000\240\360D\000\200\355D\000\240\347D\000\200\340D\000\340\333D\000 \325D\000\340\316D\000 \316D\000`\303D\000\200\301D\000 \301D\000\340\300D\000@\300D\000\200\276D\000\200\276D\000\300\262D\000\200\255D\000\200\254D\000\240\244D\000\300\242D\000@\242D\000`\241D\000\000\241D\000\240\240D\000`\240D\000`\237D\000@\236D\000\200\235D\000\300\232D\000`\227D\000\300\226D\000`\222D\000\000\222D\000 \221D\000\000\220D\000`\217D\000\340\214D\000\240\214D\000\300\212D\000\240\210D\000@\205D\000\000\204D\000\340\201D\000\200wD\000@wD\000\200uD\000\200uD\000\300tD\000\200tD\000\200oD\000\000lD\000\000cD\000\200`D\000@_D\000\300]D\000\200]D\000@\\D\000@ZD\000\000YD\000\300PD\000@OD\000\000OD\000@LD\000@ID\000\300ED\000\000@D\000\300?D\000\200?D\000\300>D\000\200>D\000@>D\000@:D\000\000:D\000\2008D\000\2008D\000\3006D\000@5D\000\0004D\000\2002D\000@2D\000\0002D\000@/D\000\300+D\000\300(D\000\200(D\000\300\'D\000@&D\000\200%D\000\000%D\000\300$D\000@#D\000\000\031D\000\200\027D\000\000\027D\000\200\024D\000@\024D\000\200\020D\000\200\rD\000\300\014D\000\200\014D\000@\014D\000\000\014D\000\200\nD\000@\n|C\000\000xC\000\000xC\000\000xC\000\000vC\000\000sC\000\000sC\000\000rC\000\000rC\000\000rC\000\000rC\000\000oC\000\000lC\000\000lC\000\000jC\000\000iC\000\000hC\000\000gC\000\000fC\000\000bC\000\000bC\000\000`C\000\000`C\000\000_C\000\000_C\000\000_C\000\000^C\000\000]C\000\000YC\000\000XC\000\000WC\000\000VC\000\000UC\000\000SC\000\000RC\000\000PC\000\000OC\000\000NC\000\000NC\000\000MC\000\000MC\000\000MC\000\000MC\000\000LC\000\000KC\000\000KC\000\000JC\000\000JC\000\000JC\000\000JC\000\000IC\000\000FC\000\000FC\000\000EC\000\000EC\000\000CC\000\000BC\000\000AC\000\000AC\000\000@C\000\000@C\000\000?C\000\000>C\000\000=C\000\000=C\000\000<C\000\000;C\000\000:C\000\000:C\000\0009C\000\0008C\000\0008C\000\0008C\000\0008C\000\0007C\000\0007C\000\0006C\000\0006C\000\0006C\000\0003C\000\0002C\000\0000C\000\0000C\000\0000C\000\000/C\000\000.C\000\000.C\000\000-C\000\000,C\000\000,C\000\000*C\000\000)C\000\000)C\000\000)C\000\000)C\000\000)C\000\000)C\000\000\'C\000\000&C\000\000\"C\000\000!C\000\000 C\000\000 C\000\000\037C\000\000\037C\000\000\037C\000\000\036C\000\000\035C\000\000\034C\000\000\034C\000\000\034C\000\000\033C\000\000\032C\000\000\032C\000\000\031C\000\000\030C\000\000\030C\000\000\030C\000\000\027C\000\000\024C\000\000\024C\000\000\023C\000\000\023C\000\000\023C\000\000\022C\000\000\022C\000\000\021C\000\000\021C\000\000\021C\000\000\020C\000\000\020C\000\000\020C\000\000\016C\000\000\016C\000\000\rC\000\000\rC\000\000\rC\000\000\014C\000\000\014C\000\000\014C\000\000\013C\000\000\013C\000\000\nC\000\000\nC\000\000\tC\000\000\t|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000|B\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000xB\000\000tB\000\000tB\000\000tB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000pB\000\000lB\000\000lB\000\000lB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000hB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000dB\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`B\000\000`pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000pA\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`A\000\000`
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3143
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1"
  op: "Range"
  input: "model/att_seq2seq/range_1/start"
  input: "model/att_seq2seq/range_1/limit"
  input: "model/att_seq2seq/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3"
  op: "HashTable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_3"
  op: "InitializeTable"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/range_1"
  input: "model/att_seq2seq/Const_2"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_3"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4"
  op: "HashTable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 3140
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_4"
  op: "InitializeTable"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/range_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_4"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5"
  op: "HashTable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_5"
  op: "InitializeTable"
  input: "model/att_seq2seq/hash_table_5"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/Const_3"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_5"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000)\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:3"
  input: "model/att_seq2seq/strided_slice/stack"
  input: "model/att_seq2seq/strided_slice/stack_1"
  input: "model/att_seq2seq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 41
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:2"
  input: "model/att_seq2seq/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1_Lookup"
  op: "LookupTableFind"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/strided_slice"
  input: "model/att_seq2seq/hash_table_1/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/source_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/source_len/tag"
  input: "model/att_seq2seq/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:5"
  input: "model/att_seq2seq/strided_slice_1/stack"
  input: "model/att_seq2seq/strided_slice_1/stack_1"
  input: "model/att_seq2seq/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 6
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:4"
  input: "model/att_seq2seq/Minimum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4_Lookup"
  op: "LookupTableFind"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/strided_slice_1"
  input: "model/att_seq2seq/hash_table_4/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_1"
  op: "Cast"
  input: "model/att_seq2seq/Minimum_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/target_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/target_len/tag"
  input: "model/att_seq2seq/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum"
  op: "Sum"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/Minimum"
  input: "model/att_seq2seq/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/add"
  op: "Add"
  input: "model/att_seq2seq/Sum"
  input: "model/att_seq2seq/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/Assign"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/read"
  op: "Identity"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/AssignAdd"
  op: "AssignAdd"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/num_tokens"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens"
  op: "ScalarSummary"
  input: "model/att_seq2seq/num_tokens/tags"
  input: "model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Identity"
  op: "Identity"
  input: "model/att_seq2seq/strided_slice"
  input: "^model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "G\014\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/embedding_lookup"
  op: "Gather"
  input: "model/att_seq2seq/encode/source_embedding/W/read"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_1/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack"
  op: "Pack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack_1"
  op: "Pack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Shape_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack_2/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack_2"
  op: "Pack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack_2/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/stack_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_1/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack"
  op: "Pack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack_1"
  op: "Pack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Shape_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack_2/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack_2"
  op: "Pack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack_2/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/stack_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/Shape"
  input: "model/att_seq2seq/decode/strided_slice/stack"
  input: "model/att_seq2seq/decode/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "G\014\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/embedding_lookup"
  op: "Gather"
  input: "model/att_seq2seq/decode/target_embedding/W/read"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/embedding_lookup"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/decode/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/Rank"
  input: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  input: "model/att_seq2seq/decode/TrainingHelper/range"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/decode/strided_slice_1"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/shape"
  op: "Pack"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/zeros/shape"
  input: "model/att_seq2seq/decode/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  op: "Equal"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros/shape"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros/shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3143
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_1/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_1/values_0"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_2/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_2/values_0"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_2"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_3/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_3/values_0"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_3"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_4/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_4/values_0"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_4"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_4"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_5/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_5/values_0"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zero_suffix_shape_3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_5"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat_5"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_3"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_3/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_3/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_4"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_4"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_4"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_4/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_4/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_5"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_5"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_5"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_5/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_5/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_6"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_6"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_6"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_6/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_6/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_7"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_7"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_7"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_7/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_7/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_8"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_8"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Shape_8"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_8/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_8/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_4"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_5"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_6"
  op: "Enter"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_7"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_8"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_4"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_5"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_6"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_7"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_8"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_8"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_8"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LogicalNot"
  op: "LogicalNot"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/All"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_4"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_5"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_8"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_8"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_4"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_5"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_8"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.699999988079071
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split"
  op: "Split"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/unstack"
  op: "Unpack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/stack/2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/stack"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/unstack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/unstack:1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/stack/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape/shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
  op: "att_sum_dot"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice/stack"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice/stack_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice/stack_2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Const"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  op: "Enter"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028234663852886e+38
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Rank"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Sub/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Rank"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Slice/begin"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Slice/size"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Slice"
  op: "Slice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Slice/begin"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/concat/values_0"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/concat/values_0"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Slice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
  op: "Softmax"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
  op: "Sum"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000G\014\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.042014580219984055
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.042014580219984055
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 3143
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  op: "ArgMax"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LogicalOr"
  op: "LogicalOr"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_8"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_6"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_7"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/NextIteration_8"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LogicalOr"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_4"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_5"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_6"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_7"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_8"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/range/start"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 3143
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/range/start"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/range/start"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/range/start"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/range/start"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/range"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/strided_slice_3/stack"
  input: "model/att_seq2seq/strided_slice_3/stack_1"
  input: "model/att_seq2seq/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/strided_slice_3"
  input: "model/att_seq2seq/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Gather"
  op: "Gather"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/strided_slice_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_2"
  op: "Sum"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_3"
  op: "Sum"
  input: "model/att_seq2seq/sub_1"
  input: "model/att_seq2seq/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_2"
  op: "Cast"
  input: "model/att_seq2seq/Sum_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/Sum_2"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_7"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_11"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_6_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Exit_7_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_7_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/zeros_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/zeros_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_6_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_7_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Enter_7_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush/Switch"
  op: "RefSwitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush/Switch"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  op: "RefSwitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/Const_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_8"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Const_2"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_9"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Const_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/Const_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_9:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1_grad/cond_grad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1_grad/cond_grad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_2"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Size"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/range/start"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/range/delta"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/range"
  op: "Range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/range/start"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/add/StackPop_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Fill/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Maximum/y"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/floordiv"
  op: "FloorDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/context_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/ExpandDims_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Sum/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Reshape/shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_1_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "G\014\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/scores_normalized_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/RefEnter_1"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient"
  op: "SymbolicGradient"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient/StackPop_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_grad/tuple/control_dependency"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "att_sum_dot"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_sum_dot_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Reshape_grad/Reshape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/b_acc"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/b_acc_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/b_acc"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/b_acc_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/mul/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/ReverseSequence_grad/ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/Sigmoid_1_grad/SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/model/att_seq2seq/decode/attention_decoder_1/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder_1/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like/Enter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/zeros_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/Switch_7_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/mul/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/zeros_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/mul/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/Sigmoid_1_grad/SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/Sigmoid_1_grad/SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/split_grad/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/transpose_grad/transpose"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "G\014\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  attr {
    key: "N"
    value {
      i: 22
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  attr {
    key: "N"
    value {
      i: 22
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Rsqrt"
  op: "Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Rsqrt"
  op: "Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/loss"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/loss/tags"
  input: "model/att_seq2seq/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/fw/fw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder_1/bidirectional_rnn/bw/bw/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/gru_cell/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder_1/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss_21"
  attr {
    key: "N"
    value {
      i: 22
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 22
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 3143
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 3143
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/zeros_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/zeros_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3143
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3143
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/zeros_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.000000093488779e-07
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train"
  op: "AssignAdd"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/truediv"
  input: "^model/att_seq2seq/OptimizeLoss/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2"
  op: "Range"
  input: "model/att_seq2seq/range_2/start"
  input: "model/att_seq2seq/Rank"
  input: "model/att_seq2seq/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat/values_0"
  input: "model/att_seq2seq/range_2"
  input: "model/att_seq2seq/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_1"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3"
  op: "Range"
  input: "model/att_seq2seq/range_3/start"
  input: "model/att_seq2seq/Rank_1"
  input: "model/att_seq2seq/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_1/values_0"
  input: "model/att_seq2seq/range_3"
  input: "model/att_seq2seq/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_2"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4"
  op: "Range"
  input: "model/att_seq2seq/range_4/start"
  input: "model/att_seq2seq/Rank_2"
  input: "model/att_seq2seq/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_2/values_0"
  input: "model/att_seq2seq/range_4"
  input: "model/att_seq2seq/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_3"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5"
  op: "Range"
  input: "model/att_seq2seq/range_5/start"
  input: "model/att_seq2seq/Rank_3"
  input: "model/att_seq2seq/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_3/values_0"
  input: "model/att_seq2seq/range_5"
  input: "model/att_seq2seq/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_4"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6"
  op: "Range"
  input: "model/att_seq2seq/range_6/start"
  input: "model/att_seq2seq/Rank_4"
  input: "model/att_seq2seq/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_4/values_0"
  input: "model/att_seq2seq/range_6"
  input: "model/att_seq2seq/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_5"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7"
  op: "Range"
  input: "model/att_seq2seq/range_7/start"
  input: "model/att_seq2seq/Rank_5"
  input: "model/att_seq2seq/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_5/values_0"
  input: "model/att_seq2seq/range_7"
  input: "model/att_seq2seq/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_6"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder_1/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToInt64"
  op: "Cast"
  input: "model/att_seq2seq/transpose_5"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3_Lookup"
  op: "LookupTableFind"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/ToInt64"
  input: "model/att_seq2seq/hash_table_3/Const"
  attr {
    key: "Tin"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/hash_table_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^model/att_seq2seq/Variable/Assign"
  input: "^model/att_seq2seq/encode/source_embedding/W/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Assign"
  input: "^model/att_seq2seq/decode/target_embedding/W/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  attr {
    key: "N"
    value {
      i: 71
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 71
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 71
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 71
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  attr {
    key: "N"
    value {
      i: 71
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 71
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 71
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 71
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^model/att_seq2seq/key_value_init"
  input: "^model/att_seq2seq/key_value_init_1"
  input: "^model/att_seq2seq/key_value_init_2"
  input: "^model/att_seq2seq/key_value_init_3"
  input: "^model/att_seq2seq/key_value_init_4"
  input: "^model/att_seq2seq/key_value_init_5"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read/fraction_of_4096_full"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full"
  input: "model/att_seq2seq/source_len"
  input: "model/att_seq2seq/target_len"
  input: "model/att_seq2seq/num_tokens"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  input: "model/att_seq2seq/OptimizeLoss/loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  attr {
    key: "N"
    value {
      i: 60
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_a7229668ddfa47dca87b190b7844457a/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 71
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 71
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 71
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases/Adam_1"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights/Adam_1"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases/Adam_1"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases/Adam_1"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights/Adam_1"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights/Adam_1"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases/Adam_1"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights/Adam_1"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases/Adam_1"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights/Adam_1"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/Variable"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3143
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3143
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "att_sum_dot"
      input_arg {
        name: "keys"
        type: DT_FLOAT
      }
      input_arg {
        name: "query"
        type: DT_FLOAT
      }
      output_arg {
        name: "Sum"
        type: DT_FLOAT
      }
      description: "Calculates a batch- and timweise dot product"
    }
    node_def {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "query"
      input: "ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "mul"
      op: "Mul"
      input: "keys"
      input: "ExpandDims:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "Sum"
      op: "Sum"
      input: "mul:z:0"
      input: "Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "Sum"
      value: "Sum:output:0"
    }
    attr {
      key: "_noinline"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 21
  min_consumer: 12
}
